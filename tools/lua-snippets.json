{
    // Place your snippets for lua here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    "RegInit": {
        "body": "RegInit(function()\n\t${1:-- on map initialization code}\nend)",
        "description": "RegInit (code function)",
        "prefix": "RegInit"
    },
    // Create trigger snippets
    "RegisterTriggerEnableById": {
        "body": "RegisterTriggerEnableById(${1:whichTrigger}, ${2:whichId})",
        "description": "RegisterTriggerEnableById (trigger whichTrigger, integer whichId)",
        "prefix": "RegisterTriggerEnableById"
    },
    "AddAbilityCastTrigger": {
        "body": "AddAbilityCastTrigger('${1:abilityCode}', ${2:function})",
        "description": "AddAbilityCastTrigger (abilityCode abilityCode, code function)",
        "prefix": "AddAbilityCastTrigger"
    },
    "AddAbilityCastTrigger_CasterHasItem": {
        "body": "AddAbilityCastTrigger_CasterHasItem(${1:itemId}, ${2:function})",
        "description": "AddAbilityCastTrigger_CasterHasItem (integer itemId, code function)",
        "prefix": "AddAbilityCastTrigger_CasterHasItem"
    },
    "AddDamagingEventTrigger_CasterHasAbility": {
        "body": "AddDamagingEventTrigger_CasterHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddDamagingEventTrigger_CasterHasAbility (integer abilityId, code function)",
        "prefix": "AddDamagingEventTrigger_CasterHasAbility"
    },
    "AddDamagingEventTrigger_CasterHasBuff": {
        "body": "AddDamagingEventTrigger_CasterHasBuff(${1:buffId}, ${2:function})",
        "description": "AddDamagingEventTrigger_CasterHasBuff (integer buffId, code function)",
        "prefix": "AddDamagingEventTrigger_CasterHasBuff"
    },
    "AddDamagingEventTrigger_CasterHasItem": {
        "body": "AddDamagingEventTrigger_CasterHasItem(${1:itemId}, ${2:function})",
        "description": "AddDamagingEventTrigger_CasterHasItem (integer itemId, code function)",
        "prefix": "AddDamagingEventTrigger_CasterHasItem"
    },
    "AddDamagingEventTrigger_TargetHasItem": {
        "body": "AddDamagingEventTrigger_TargetHasItem(${1:itemId}, ${2:function})",
        "description": "AddDamagingEventTrigger_TargetHasItem (integer itemId, code function)",
        "prefix": "AddDamagingEventTrigger_TargetHasItem"
    },
    "AddDamagingEventTrigger_TargetHasAbility": {
        "body": "AddDamagingEventTrigger_TargetHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddDamagingEventTrigger_TargetHasAbility (integer abilityId, code function)",
        "prefix": "AddDamagingEventTrigger_TargetHasAbility"
    },
    "AddDamagedEventTrigger_CasterHasAbility": {
        "body": "AddDamagedEventTrigger_CasterHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddDamagedEventTrigger_CasterHasAbility (integer abilityId, code function)",
        "prefix": "AddDamagedEventTrigger_CasterHasAbility"
    },
    "AddDamagedEventTrigger_TargetHasAbility": {
        "body": "AddDamagedEventTrigger_TargetHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddDamagedEventTrigger_TargetHasAbility (integer abilityId, code function)",
        "prefix": "AddDamagedEventTrigger_TargetHasAbility"
    },
    "AddDamagedEventTrigger_TargetHasBuff": {
        "body": "AddDamagedEventTrigger_TargetHasBuff(${1:buffId}, ${2:function})",
        "description": "AddDamagedEventTrigger_TargetHasBuff (integer buffId, code function)",
        "prefix": "AddDamagedEventTrigger_TargetHasBuff"
    },
    "AddDamagedEventTrigger_CasterHasItem": {
        "body": "AddDamagedEventTrigger_CasterHasItem(${1:itemId}, ${2:function})",
        "description": "AddDamagedEventTrigger_CasterHasItem (integer itemId, code function)",
        "prefix": "AddDamagedEventTrigger_CasterHasItem"
    },
    "AddKillEventTrigger_KillerHasAbility": {
        "body": "AddKillEventTrigger_KillerHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddKillEventTrigger_KillerHasAbility (integer abilityId, code function)",
        "prefix": "AddKillEventTrigger_KillerHasAbility"
    },

    "AddPeriodicPassiveAbility_CasterHasAbility": {
        "body": "AddPeriodicPassiveAbility_CasterHasAbility(${1:abilityId}, ${2:function})",
        "description": "AddPeriodicPassiveAbility_CasterHasAbility (integer abilityId, code function)",
        "prefix": "AddPeriodicPassiveAbility_CasterHasAbility"
    },

    "AddItemTrigger_Activate": {
        "body": "AddItemTrigger_Activate(${1:itemId}, ${2:function})",
        "description": "AddItemTrigger_Activate (integer itemId, code function)",
        "prefix": "AddItemTrigger_Activate"
    },
    "AddItemTrigger_Periodic": {
        "body": "AddItemTrigger_Periodic(${1:itemId}, ${2:interval} ${3:function})",
        "description": "AddItemTrigger_Periodic (integer itemId, real interval, code function)",
        "prefix": "AddItemTrigger_Periodic"
    },


    // abilities core functions
    "CauseNormalDamage": {
        "body": "CauseNormalDamage(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseNormalDamage (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseNormalDamage"
    },
    "CauseMagicDamage": {
        "body": "CauseMagicDamage(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseMagicDamage (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseMagicDamage"
    },
    "CauseMagicDamage_Fire": {
        "body": "CauseMagicDamage_Fire(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseMagicDamage_Fire (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseMagicDamage_Fire"
    },
    "CauseDefensiveDamage": {
        "body": "CauseDefensiveDamage(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseDefensiveDamage (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseDefensiveDamage"
    },
    
    "CauseHealUnscaled": {
        "body": "CauseHealUnscaled(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseHealUnscaled (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseHealUnscaled"
    },
    "CauseHeal": {
        "body": "CauseHeal(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseHeal (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseHeal"
    },
    "CauseManaBurnUnscaled": {
        "body": "CauseManaBurnUnscaled(${1:whichSource}, ${2:whichTarget}, ${3:amount})",
        "description": "CauseManaBurnUnscaled (unit whichSource, unit whichTarget, real amount)",
        "prefix": "CauseManaBurnUnscaled"
    },
    "CauseStunMini": {
        "body": "CauseStunMini(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStunMini (unit whichSource, unit whichTarget)",
        "prefix": "CauseStunMini"
    },
    "CauseStun1s": {
        "body": "CauseStun1s(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStun1s (unit whichSource, unit whichTarget)",
        "prefix": "CauseStun1s"
    },
    "CauseStun2s": {
        "body": "CauseStun2s(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStun2s (unit whichSource, unit whichTarget)",
        "prefix": "CauseStun2s"
    },
    "CauseStun3s": {
        "body": "CauseStun3s(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStun3s (unit whichSource, unit whichTarget)",
        "prefix": "CauseStun3s"
    },
    "CauseStun5s": {
        "body": "CauseStun5s(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStun5s (unit whichSource, unit whichTarget)",
        "prefix": "CauseStun5s"
    },
    "CauseStun10s": {
        "body": "CauseStun10s(${1:whichSource}, ${2:whichTarget})",
        "description": "CauseStun10s (unit whichSource, unit whichTarget)",
        "prefix": "CauseStun10s"
    },
    "CastDummyAbilityOnTarget": {
        "body": "CastDummyAbilityOnTarget(${1:caster}, ${2:target}, ${3:abilityId}, ${4:abilityLevel}, ${5:orderString},${6:dummyDuration})",
        "description": "CastDummyAbilityOnTarget (unit caster, unit target, integer abilityId, integer level, string orderString, float dummyDuration (optional))",
        "prefix": "CastDummyAbilityOnTarget"
    },
    "CastDummyAbilityFromPointOnTarget": {
        "body": "CastDummyAbilityFromPointOnTarget(${1:owner}, ${2:target}, ${3:abilityId}, ${4:abilityLevel}, ${5:orderString}, ${6:dummyPoint}, ${7:dummyDuration})",
        "description": "CastDummyAbilityFromPointOnTarget(player owner, unit target, integer abilityId, integer level, string orderString, location dummyPoint, float dummyDuration (optional))",
        "prefix": "CastDummyAbilityFromPointOnTarget"
    },
    "CastDummyAbilityOnPoint": {
        "body": "CastDummyAbilityOnPoint(${1:owner}, ${2:targetPoint}, ${3:abilityId}, ${4:abilityLevel}, ${5:orderString}, ${6:dummyPoint}, ${7:dummyDuration})",
        "description": "CastDummyAbilityOnPoint (player owner, location targetPoint, integer abilityId, integer level, string orderString, location dummyPoint, float dummyDuration (optional))",
        "prefix": "CastDummyAbilityOnPoint"
    },
    "CastDummyAbilityOnItem": {
        "body": "CastDummyAbilityOnItem(${1:owner}, ${2:item}, ${3:abilityId}, ${4:abilityLevel}, ${5:orderString}, ${6:dummyPoint}, ${7:dummyDuration})",
        "description": "CastDummyAbilityOnItem (player owner, item item, integer abilityId, integer level, string orderString, location dummyPoint, float dummyDuration (optional))",
        "prefix": "CastDummyAbilityOnItem"
    },
    "CastDummyAbilityNoTarget": {
        "body": "CastDummyAbilityNoTarget(${1:owner}, ${2:abilityId}, ${3:abilityLevel}, ${4:orderString}, ${5:dummyPoint}, ${6:dummyDuration})",
        "description": "CastDummyAbilityNoTarget (player owner,  integer abilityId, integer level, string orderString, location dummyPoint, float dummyDuration (optional))",
        "prefix": "CastDummyAbilityNoTarget"
    },

    // abilities common functions
    "Knockback_Angled": {
        "body": "Knockback_Angled(${1:target}, ${2:angle}, ${3:force}, function()\n\t${4:-- code}\nend)",
        "description": "Knockback_Angled (unit target, real angle, real force, function collisionCallback)",
        "prefix": "Knockback_Angled"
    },
    "Knockback_AngledNoInterrupt": {
        "body": "Knockback_AngledNoInterrupt(${1:target}, ${2:angle}, ${3:force}, function()\n\t${4:-- code}\nend)",
        "description": "Knockback_AngledNoInterrupt (unit target, real angle, real force, function collisionCallback)",
        "prefix": "Knockback_AngledNoInterrupt"
    },
    "ApplyManagedBuff": {
        "body": "ApplyManagedBuff(${1:target}, FourCC('${2:abilityId}'), FourCC('${3:buffId}'), ${4:duration}, \"${5:effectAttachmentPoint}\", \"${6:effect}\")",
        "description": "ApplyManagedBuff (unit target, abilityId, buffId, duration, effectAttachmentPoint, effect)",
        "prefix": "ApplyManagedBuff"
    },
    "ApplyManagedBuff_Magic": {
        "body": "ApplyManagedBuff_Magic(${1:target}, FourCC('${2:abilityId}'), FourCC('${3:buffId}'), ${4:duration}, \"${5:effectAttachmentPoint}\", \"${6:effect}\")",
        "description": "ApplyManagedBuff_Magic (unit target, abilityId, buffId, duration, effectAttachmentPoint, effect)",
        "prefix": "ApplyManagedBuff_Magic"
    },
    "ApplyManagedBuff_MagicElusive": {
        "body": "ApplyManagedBuff_MagicElusive(${1:target}, FourCC('${2:abilityId}'), FourCC('${3:buffId}'), ${4:duration}, \"${5:effectAttachmentPoint}\", \"${6:effect}\")",
        "description": "ApplyManagedBuff_MagicElusive (unit target, abilityId, buffId, duration, effectAttachmentPoint, effect)",
        "prefix": "ApplyManagedBuff_MagicElusive"
    },

    "ApplyEnsnare": {
        "body": "ApplyEnsnare(${1:caster}, ${2:target}, ${3:duration})",
        "description": "ApplyEnsnare (unit caster, unit target, real duration)",
        "prefix": "ApplyEnsnare"
    },

    "FireHomingProjectile_PointToUnit": {
        "body": "FireHomingProjectile_PointToUnit(${1:startPoint}, ${2:targetUnit}, ${3:model}, ${4:speed}, ${5:arcHeight}, function()\n\t${6:-- callback}\nend)",
        "description": "FireHomingProjectile_PointToUnit (location startPoint, unit targetUnit, string model, real speed, real arcHeight, function callback)",
        "prefix": "FireHomingProjectile_PointToUnit"
    }, 
    "FireProjectile_PointHeightToPoint": {
        "body": "FireProjectile_PointHeightToPoint(${1:startPoint}, ${2:startHeight}, ${3:endPoint}, ${4:model}, ${5:speed}, ${6:arcHeight}, function()\n\t${7:-- code}\nend, ${8:startingPitch}, ${6:pitchRotation})",
        "description": "FireProjectile_PointHeightToPoint (location startpoint, float startHeight, location endPoint, string model, float speed, float arcHeight, function callback, float startingPitch (optional), float pitchRotation (optional))",
        "prefix": "FireProjectile_PointHeightToPoint"
    },    
    "FireProjectile_PointToPoint": {
        "body": "FireProjectile_PointToPoint(${1:startPoint}, ${2:endPoint}, ${3:model}, ${4:speed}, ${5:arcHeight}, function()\n\t${6:-- code}\nend, ${7:startingPitch}, ${8:pitchRotation})",
        "description": "FireProjectile_PointToPoint (location startpoint, location endPoint, string model, float speed, float arcHeight, function callback, float startingPitch (optional), float pitchRotation (optional))",
        "prefix": "FireProjectile_PointToPoint"
    },
    "FireProjectile_PointHeightToPoint_NoPitch": {
        "body": "FireProjectile_PointHeightToPoint(${1:startPoint}, ${2:startHeight}, ${3:endPoint}, ${4:model}, ${5:speed}, ${6:arcHeight}, function()\n\t${7:-- code}\nend)",
        "description": "FireProjectile_PointHeightToPoint (location startpoint, float startHeight, location endPoint, string model, float speed, float arcHeight, function callback)",
        "prefix": "FireProjectile_PointHeightToPoint"
    },
    "FireProjectile_PointToPoint_NoPitch": {
        "body": "FireProjectile_PointToPoint_NoPitch(${1:startPoint}, ${2:endPoint}, ${3:model}, ${4:speed}, ${5:arcHeight}, function()\n\t${6:-- code}\nend)",
        "description": "FireProjectile_PointToPoint_NoPitch (location startpoint, location endPoint, string model, float speed, float arcHeight, function callback)",
        "prefix": "FireProjectile_PointToPoint_NoPitch"
    },
    "GetStartingPitch": {
        "body": "GetStartingPitch(${1:startHeight}, ${2:arcHeightReal}, ${3:pitchRotation}, ${4:startingPitch})",
        "description": "GetStartingPitch(float startHeight, float arcHeightReal, float pitchRotation, float startingPitch)",
        "prefix": "GetStartingPitch"
    },
    "SetUnitAnimationByIndexAfterDelay": {
        "body": "SetUnitAnimationByIndexAfterDelay(${1:caster}, ${2:index}, ${3:delay})",
        "description": "SetUnitAnimationByIndexAfterDelay(unit caster, integer index, float delay)",
        "prefix": "SetUnitAnimationByIndexAfterDelay"
    },
    "GetUnitLonelyLoc": {
        "body": "GetUnitLonelyLoc(${1:loc}, ${2:area})",
        "description": "GetUnitLonelyLoc(location loc, float area)",
        "prefix": "GetUnitLonelyLoc"
    },

    // abilities unit selection functions
    "IsUnit_Targetable": {
        "body": "IsUnit_Targetable(${1:target})",
        "description": "IsUnit_Targetable (unit target)",
        "prefix": "IsUnit_Targetable"
    },
    "IsUnit_TargetablePhysical": {
        "body": "IsUnit_TargetablePhysical(${1:target})",
        "description": "IsUnit_TargetablePhysical (unit target)",
        "prefix": "IsUnit_TargetablePhysical"
    },
    "IsUnit_GroundTargetable": {
        "body": "IsUnit_GroundTargetable(${1:target})",
        "description": "IsUnit_GroundTargetable (unit target)",
        "prefix": "IsUnit_GroundTargetable"
    },
    "IsUnit_EnemyTargetable": {
        "body": "IsUnit_EnemyTargetable(${1:caster}, ${2:target})",
        "description": "IsUnit_EnemyTargetable (unit caster, unit target)",
        "prefix": "IsUnit_EnemyTargetable"
    },
    "IsUnit_EnemyGroundTargetable": {
        "body": "IsUnit_EnemyGroundTargetable(${1:caster}, ${2:target})",
        "description": "IsUnit_EnemyGroundTargetable (unit caster, unit target)",
        "prefix": "IsUnit_EnemyGroundTargetable"
    },
    "IsUnit_EnemyTargetablePhysical": {
        "body": "IsUnit_EnemyTargetablePhysical(${1:caster}, ${2:target})",
        "description": "IsUnit_EnemyTargetablePhysical (unit caster, unit target)",
        "prefix": "IsUnit_EnemyTargetablePhysical"
    },
    "IsUnit_ProjectileTargetable": {
        "body": "IsUnit_ProjectileTargetable(${1:target})",
        "description": "IsUnit_ProjectileTargetable (unit target)",
        "prefix": "IsUnit_ProjectileTargetable"
    },
    "IsUnit_FriendlyTargetable": {
        "body": "IsUnit_FriendlyTargetable(${1:caster}, ${2:target})",
        "description": "IsUnit_FriendlyTargetable (unit caster, unit target)",
        "prefix": "IsUnit_FriendlyTargetable"
    },
    "IsUnit_FriendlyGroundTargetable": {
        "body": "IsUnit_FriendlyGroundTargetable(${1:caster}, ${2:target})",
        "description": "IsUnit_FriendlyGroundTargetable (unit caster, unit target)",
        "prefix": "IsUnit_FriendlyGroundTargetable"
    },
    "GetUnitsInRange_Targetable": {
        "body": "GetUnitsInRange_Targetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_Targetable (unit caster, location point, real range)",
        "prefix": "GetUnitsInRange_Targetable"
    },
    "GetUnitsInRange_GroundTargetable": {
        "body": "GetUnitsInRange_GroundTargetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_GroundTargetable (caster, point, range)",
        "prefix": "GetUnitsInRange_GroundTargetable"
    },
    "GetUnitsInRange_EnemyTargetable": {
        "body": "GetUnitsInRange_EnemyTargetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_EnemyTargetable (caster, point, range)",
        "prefix": "GetUnitsInRange_EnemyTargetable"
    },
    "GetUnitsInRange_EnemyTargetablePhysical": {
        "body": "GetUnitsInRange_EnemyTargetablePhysical(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_EnemyTargetablePhysical (caster, point, range)",
        "prefix": "GetUnitsInRange_EnemyTargetablePhysical"
    },
    "GetUnitsInRange_EnemyGroundTargetable": {
        "body": "GetUnitsInRange_EnemyGroundTargetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_EnemyGroundTargetable (caster, point, range)",
        "prefix": "GetUnitsInRange_EnemyGroundTargetable"
    },
    "GetUnitsInRange_FriendlyTargetable": {
        "body": "GetUnitsInRange_FriendlyTargetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_FriendlyTargetable (caster, point, range)",
        "prefix": "GetUnitsInRange_FriendlyTargetable"
    },
    "GetUnitsInRange_FriendlyGroundTargetable": {
        "body": "GetUnitsInRange_FriendlyGroundTargetable(${1:caster}, ${2:point}, ${3:range})",
        "description": "GetUnitsInRange_FriendlyGroundTargetable (caster, point, range)",
        "prefix": "GetUnitsInRange_FriendlyGroundTargetable"
    },

    "GetClosestUnitInTableFromPoint_NotInGroup": {
        "body": "GetClosestUnitInTableFromPoint_NotInGroup(${1:table}, ${2:point}, ${3:group})",
        "description": "GetClosestUnitInTableFromPoint_NotInGroup (luaTable table, location point, unitGroup group)",
        "prefix": "GetClosestUnitInTableFromPoint_NotInGroup"
    },

    // stat bonusses
    "GrantTempArmor": {
        "body": "GrantTempArmor(${1:unit}, ${2:amount}, ${3:duration})",
        "description": "GrantTempArmor (unit unit, integer amount, real duration)",
        "prefix": "GrantTempArmor"
    },
    "GrantTempArmorByBuff": {
        "body": "GrantTempArmorByBuff(${1:unit}, ${2:amount}, FourCC('${3:buffId}'))",
        "description": "GrantTempArmor (unit unit, integer amount, integer buffId)",
        "prefix": "GrantTempArmor"
    },
    "GrantTempDamage": {
        "body": "GrantTempDamage(${1:unit}, ${2:amount}, ${3:duration})",
        "description": "GrantTempDamage (unit unit, integer amount, real duration)",
        "prefix": "GrantTempDamage"
    },
    "GrantTempDamageByBuff": {
        "body": "GrantTempDamageByBuff(${1:unit}, ${2:amount}, FourCC('${3:buffId}'))",
        "description": "GrantTempArmor (unit unit, integer amount, integer buffId)",
        "prefix": "GrantTempArmor"
    },
    "GrantTempStr": {
        "body": "GrantTempStr(${1:unit}, ${2:amount}, ${3:duration})",
        "description": "GrantTempStr (unit unit, integer amount, real duration)",
        "prefix": "GrantTempStr"
    },

    // Special effects
    "CreateEffectAtPoint": {
        "body": "CreateEffectAtPoint(${1:point}, \"${2:effect}\", ${3:duration})",
        "description": "CreateEffectAtPoint (location point, string effect, real duration)",
        "prefix": "CreateEffectAtPoint"
    },
    "CreateEffectOnUnit": {
        "body": "CreateEffectOnUnit(\"${1:origin}\", ${2:unit}, \"${3:effect}\", ${4:duration})",
        "description": "CreateEffectOnUnit (string attachPointName, unit unit, string effect, real duration)",
        "prefix": "CreateEffectOnUnit"
    },
    "CreateEffectOnUnitByBuff": {
        "body": "CreateEffectOnUnitByBuff(\"${1:attachPointName}\", ${2:unit}, \"${3:effect}\", ${4:buffId})",
        "description": "CreateEffectOnUnitByBuff (string attachPointName, unit unit, string effect, integer buffId)",
        "prefix": "CreateEffectOnUnitByBuff"
    },
    "DangerAreaAt": {
        "body": "DangerAreaAt(${1:point}, ${2:time}, ${3:radius})",
        "description": "DangerAreaAt (location point, real time, real radius)",
        "prefix": "DangerAreaAt"
    },
    "DangerAreaAtUntimed": {
        "body": "DangerAreaAtUntimed(${1:point}, ${3:radius})",
        "description": "DangerAreaAtUntimed (location point, real radius)",
        "prefix": "DangerAreaAtUntimed"
    },
    "DangerCountdownAt": {
        "body": "DangerCountdownAt(${1:point}, ${2:time})",
        "description": "DangerCountdownAt (location point, real time)",
        "prefix": "DangerCountdownAt"
    },

    // Timed functions
    "DelayedCallback": {
        "body": "DelayedCallback(${1:delay}, function()\n\t${2:-- code}\nend)",
        "description": "DelayedCallback (real delay, function callback)",
        "prefix": "DelayedCallback"
    },
    "PeriodicCallback": {
        "body": "PeriodicCallback(${1:point}, function()\n\t${2:-- code}\nend)",
        "description": "PeriodicCallback (real interval, function callback)",
        "prefix": "PeriodicCallback"
    },

    // Ordering
    "OrderStop": {
        "body": "OrderStop(${1:unit})",
        "description": "OrderStop (unit unit)",
        "prefix": "OrderStop"
    },

    // Unit states - keywords
    "MakeVulnerable": {
        "body": "MakeVulnerable(${1:unit}, ${2:t})",
        "description": "MakeVulnerable (unit unit, real t)",
        "prefix": "MakeVulnerable"
    },
    "MakeEmpowered": {
        "body": "MakeEmpowered(${1:unit}, ${2:t})",
        "description": "MakeEmpowered (unit unit, real t)",
        "prefix": "MakeEmpowered"
    },
    "MakeElusive": {
        "body": "MakeElusive(${1:unit}, ${2:t})",
        "description": "MakeElusive (unit unit, real t)",
        "prefix": "MakeElusive"
    },
    "MakeTenacious": {
        "body": "MakeTenacious(${1:unit}, ${2:t})",
        "description": "MakeTenacious (unit unit, real t)",
        "prefix": "MakeTenacious"
    },
    "MakeReckless": {
        "body": "MakeReckless(${1:unit}, ${2:t})",
        "description": "MakeReckless (unit unit, real t)",
        "prefix": "MakeReckless"
    },
    "MakeBurnt": {
        "body": "MakeBurnt(${1:unit}, ${2:t})",
        "description": "MakeBurnt (unit unit, real t)",
        "prefix": "MakeBurnt"
    },
    "IsUnitResistant": {
        "body": "IsUnitResistant(${1:unit})",
        "description": "IsUnitResistant (unit unit)",
        "prefix": "IsUnitResistant"
    },
    "IsUnitVulnerable": {
        "body": "IsUnitVulnerable(${1:unit})",
        "description": "IsUnitVulnerable (unit unit)",
        "prefix": "IsUnitVulnerable"
    },
    "IsUnitEmpowered": {
        "body": "IsUnitEmpowered(${1:unit})",
        "description": "IsUnitEmpowered (unit unit)",
        "prefix": "IsUnitEmpowered"
    },
    "IsUnitElusive": {
        "body": "IsUnitElusive(${1:unit})",
        "description": "IsUnitElusive (unit unit)",
        "prefix": "IsUnitElusive"
    },
    "IsUnitTenacious": {
        "body": "IsUnitTenacious(${1:unit})",
        "description": "IsUnitTenacious (unit unit)",
        "prefix": "IsUnitTenacious"
    },
    "IsUnitReckless": {
        "body": "IsUnitReckless(${1:unit})",
        "description": "IsUnitReckless (unit unit)",
        "prefix": "IsUnitReckless"
    },
    "IsUnitBurnt": {
        "body": "IsUnitBurnt(${1:unit})",
        "description": "IsUnitBurnt (unit unit)",
        "prefix": "IsUnitBurnt"
    },
    // Unit states - hero
    "GetHeroBonusDamageFromItemsAndTempBonus": {
        "body": "GetHeroBonusDamageFromItemsAndTempBonus(${1:hero})",
        "description": "GetHeroBonusDamageFromItemsAndTempBonus (unit hero)",
        "prefix": "GetHeroBonusDamageFromItemsAndTempBonus"
    },
    "GetHeroDamageTotal": {
        "body": "GetHeroDamageTotal(${1:hero})",
        "description": "GetHeroDamageTotal (unit hero)",
        "prefix": "GetHeroDamageTotal"
    },

    // Damage type checks
    "IsDamageType_Defensive": {
        "body": "IsDamageType_Defensive(${1:damageType})",
        "description": "IsDamageType_Defensive (integer damageType)",
        "prefix": "IsDamageType_Defensive"
    },
    "IsDamageType_Physical": {
        "body": "IsDamageType_Physical(${1:damageType})",
        "description": "IsDamageType_Physical (integer damageType)",
        "prefix": "IsDamageType_Physical"
    },
    "IsDamageType_Magic": {
        "body": "IsDamageType_Magic(${1:damageType})",
        "description": "IsDamageType_Magic (integer damageType)",
        "prefix": "IsDamageType_Magic"
    },


    // Blizzard functions sourced from: https://www.hiveworkshop.com/threads/lua-vscode-integration.314974/
    "bj_PI": {
        "body": "bj_PI",
        "description": "3.14159",
        "prefix": "bj_PI"
    },
    "bj_E": {
        "body": "bj_E",
        "description": "2.71828",
        "prefix": "bj_E"
    },
    "bj_CELLWIDTH": {
        "body": "bj_CELLWIDTH",
        "description": "128.0",
        "prefix": "bj_CELLWIDTH"
    },
    "bj_CLIFFHEIGHT": {
        "body": "bj_CLIFFHEIGHT",
        "description": "128.0",
        "prefix": "bj_CLIFFHEIGHT"
    },
    "bj_UNIT_FACING": {
        "body": "bj_UNIT_FACING",
        "description": "270.0",
        "prefix": "bj_UNIT_FACING"
    },
    "bj_RADTODEG": {
        "body": "bj_RADTODEG",
        "description": "180.0/bj_PI",
        "prefix": "bj_RADTODEG"
    },
    "bj_DEGTORAD": {
        "body": "bj_DEGTORAD",
        "description": "bj_PI/180.0",
        "prefix": "bj_DEGTORAD"
    },
    "bj_TEXT_DELAY_QUEST": {
        "body": "bj_TEXT_DELAY_QUEST",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_QUEST"
    },
    "bj_TEXT_DELAY_QUESTUPDATE": {
        "body": "bj_TEXT_DELAY_QUESTUPDATE",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_QUESTUPDATE"
    },
    "bj_TEXT_DELAY_QUESTDONE": {
        "body": "bj_TEXT_DELAY_QUESTDONE",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_QUESTDONE"
    },
    "bj_TEXT_DELAY_QUESTFAILED": {
        "body": "bj_TEXT_DELAY_QUESTFAILED",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_QUESTFAILED"
    },
    "bj_TEXT_DELAY_QUESTREQUIREMENT": {
        "body": "bj_TEXT_DELAY_QUESTREQUIREMENT",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_QUESTREQUIREMENT"
    },
    "bj_TEXT_DELAY_MISSIONFAILED": {
        "body": "bj_TEXT_DELAY_MISSIONFAILED",
        "description": "20.00",
        "prefix": "bj_TEXT_DELAY_MISSIONFAILED"
    },
    "bj_TEXT_DELAY_ALWAYSHINT": {
        "body": "bj_TEXT_DELAY_ALWAYSHINT",
        "description": "12.00",
        "prefix": "bj_TEXT_DELAY_ALWAYSHINT"
    },
    "bj_TEXT_DELAY_HINT": {
        "body": "bj_TEXT_DELAY_HINT",
        "description": "12.00",
        "prefix": "bj_TEXT_DELAY_HINT"
    },
    "bj_TEXT_DELAY_SECRET": {
        "body": "bj_TEXT_DELAY_SECRET",
        "description": "10.00",
        "prefix": "bj_TEXT_DELAY_SECRET"
    },
    "bj_TEXT_DELAY_UNITACQUIRED": {
        "body": "bj_TEXT_DELAY_UNITACQUIRED",
        "description": "15.00",
        "prefix": "bj_TEXT_DELAY_UNITACQUIRED"
    },
    "bj_TEXT_DELAY_UNITAVAILABLE": {
        "body": "bj_TEXT_DELAY_UNITAVAILABLE",
        "description": "10.00",
        "prefix": "bj_TEXT_DELAY_UNITAVAILABLE"
    },
    "bj_TEXT_DELAY_ITEMACQUIRED": {
        "body": "bj_TEXT_DELAY_ITEMACQUIRED",
        "description": "10.00",
        "prefix": "bj_TEXT_DELAY_ITEMACQUIRED"
    },
    "bj_TEXT_DELAY_WARNING": {
        "body": "bj_TEXT_DELAY_WARNING",
        "description": "12.00",
        "prefix": "bj_TEXT_DELAY_WARNING"
    },
    "bj_QUEUE_DELAY_QUEST": {
        "body": "bj_QUEUE_DELAY_QUEST",
        "description": "5.00",
        "prefix": "bj_QUEUE_DELAY_QUEST"
    },
    "bj_QUEUE_DELAY_HINT": {
        "body": "bj_QUEUE_DELAY_HINT",
        "description": "5.00",
        "prefix": "bj_QUEUE_DELAY_HINT"
    },
    "bj_QUEUE_DELAY_SECRET": {
        "body": "bj_QUEUE_DELAY_SECRET",
        "description": "3.00",
        "prefix": "bj_QUEUE_DELAY_SECRET"
    },
    "bj_HANDICAP_EASY": {
        "body": "bj_HANDICAP_EASY",
        "description": "60.00",
        "prefix": "bj_HANDICAP_EASY"
    },
    "bj_GAME_STARTED_THRESHOLD": {
        "body": "bj_GAME_STARTED_THRESHOLD",
        "description": "0.01",
        "prefix": "bj_GAME_STARTED_THRESHOLD"
    },
    "bj_WAIT_FOR_COND_MIN_INTERVAL": {
        "body": "bj_WAIT_FOR_COND_MIN_INTERVAL",
        "description": "0.10",
        "prefix": "bj_WAIT_FOR_COND_MIN_INTERVAL"
    },
    "bj_POLLED_WAIT_INTERVAL": {
        "body": "bj_POLLED_WAIT_INTERVAL",
        "description": "0.10",
        "prefix": "bj_POLLED_WAIT_INTERVAL"
    },
    "bj_POLLED_WAIT_SKIP_THRESHOLD": {
        "body": "bj_POLLED_WAIT_SKIP_THRESHOLD",
        "description": "2.00",
        "prefix": "bj_POLLED_WAIT_SKIP_THRESHOLD"
    },
    "bj_MAX_INVENTORY": {
        "body": "bj_MAX_INVENTORY",
        "description": "6",
        "prefix": "bj_MAX_INVENTORY"
    },
    "bj_MAX_PLAYERS": {
        "body": "bj_MAX_PLAYERS",
        "description": "GetBJMaxPlayers()",
        "prefix": "bj_MAX_PLAYERS"
    },
    "bj_PLAYER_NEUTRAL_VICTIM": {
        "body": "bj_PLAYER_NEUTRAL_VICTIM",
        "description": "GetBJPlayerNeutralVictim()",
        "prefix": "bj_PLAYER_NEUTRAL_VICTIM"
    },
    "bj_PLAYER_NEUTRAL_EXTRA": {
        "body": "bj_PLAYER_NEUTRAL_EXTRA",
        "description": "GetBJPlayerNeutralExtra()",
        "prefix": "bj_PLAYER_NEUTRAL_EXTRA"
    },
    "bj_MAX_PLAYER_SLOTS": {
        "body": "bj_MAX_PLAYER_SLOTS",
        "description": "GetBJMaxPlayerSlots()",
        "prefix": "bj_MAX_PLAYER_SLOTS"
    },
    "bj_MAX_SKELETONS": {
        "body": "bj_MAX_SKELETONS",
        "description": "25",
        "prefix": "bj_MAX_SKELETONS"
    },
    "bj_MAX_STOCK_ITEM_SLOTS": {
        "body": "bj_MAX_STOCK_ITEM_SLOTS",
        "description": "11",
        "prefix": "bj_MAX_STOCK_ITEM_SLOTS"
    },
    "bj_MAX_STOCK_UNIT_SLOTS": {
        "body": "bj_MAX_STOCK_UNIT_SLOTS",
        "description": "11",
        "prefix": "bj_MAX_STOCK_UNIT_SLOTS"
    },
    "bj_MAX_ITEM_LEVEL": {
        "body": "bj_MAX_ITEM_LEVEL",
        "description": "10",
        "prefix": "bj_MAX_ITEM_LEVEL"
    },
    "bj_TOD_DAWN": {
        "body": "bj_TOD_DAWN",
        "description": "6.00",
        "prefix": "bj_TOD_DAWN"
    },
    "bj_TOD_DUSK": {
        "body": "bj_TOD_DUSK",
        "description": "18.00",
        "prefix": "bj_TOD_DUSK"
    },
    "bj_MELEE_STARTING_TOD": {
        "body": "bj_MELEE_STARTING_TOD",
        "description": "8.00",
        "prefix": "bj_MELEE_STARTING_TOD"
    },
    "bj_MELEE_STARTING_GOLD_V0": {
        "body": "bj_MELEE_STARTING_GOLD_V0",
        "description": "750",
        "prefix": "bj_MELEE_STARTING_GOLD_V0"
    },
    "bj_MELEE_STARTING_GOLD_V1": {
        "body": "bj_MELEE_STARTING_GOLD_V1",
        "description": "500",
        "prefix": "bj_MELEE_STARTING_GOLD_V1"
    },
    "bj_MELEE_STARTING_LUMBER_V0": {
        "body": "bj_MELEE_STARTING_LUMBER_V0",
        "description": "200",
        "prefix": "bj_MELEE_STARTING_LUMBER_V0"
    },
    "bj_MELEE_STARTING_LUMBER_V1": {
        "body": "bj_MELEE_STARTING_LUMBER_V1",
        "description": "150",
        "prefix": "bj_MELEE_STARTING_LUMBER_V1"
    },
    "bj_MELEE_STARTING_HERO_TOKENS": {
        "body": "bj_MELEE_STARTING_HERO_TOKENS",
        "description": "1",
        "prefix": "bj_MELEE_STARTING_HERO_TOKENS"
    },
    "bj_MELEE_HERO_LIMIT": {
        "body": "bj_MELEE_HERO_LIMIT",
        "description": "3",
        "prefix": "bj_MELEE_HERO_LIMIT"
    },
    "bj_MELEE_HERO_TYPE_LIMIT": {
        "body": "bj_MELEE_HERO_TYPE_LIMIT",
        "description": "1",
        "prefix": "bj_MELEE_HERO_TYPE_LIMIT"
    },
    "bj_MELEE_MINE_SEARCH_RADIUS": {
        "body": "bj_MELEE_MINE_SEARCH_RADIUS",
        "description": "2000",
        "prefix": "bj_MELEE_MINE_SEARCH_RADIUS"
    },
    "bj_MELEE_CLEAR_UNITS_RADIUS": {
        "body": "bj_MELEE_CLEAR_UNITS_RADIUS",
        "description": "1500",
        "prefix": "bj_MELEE_CLEAR_UNITS_RADIUS"
    },
    "bj_MELEE_CRIPPLE_TIMEOUT": {
        "body": "bj_MELEE_CRIPPLE_TIMEOUT",
        "description": "120.00",
        "prefix": "bj_MELEE_CRIPPLE_TIMEOUT"
    },
    "bj_MELEE_CRIPPLE_MSG_DURATION": {
        "body": "bj_MELEE_CRIPPLE_MSG_DURATION",
        "description": "20.00",
        "prefix": "bj_MELEE_CRIPPLE_MSG_DURATION"
    },
    "bj_MELEE_MAX_TWINKED_HEROES_V0": {
        "body": "bj_MELEE_MAX_TWINKED_HEROES_V0",
        "description": "3",
        "prefix": "bj_MELEE_MAX_TWINKED_HEROES_V0"
    },
    "bj_MELEE_MAX_TWINKED_HEROES_V1": {
        "body": "bj_MELEE_MAX_TWINKED_HEROES_V1",
        "description": "1",
        "prefix": "bj_MELEE_MAX_TWINKED_HEROES_V1"
    },
    "bj_CREEP_ITEM_DELAY": {
        "body": "bj_CREEP_ITEM_DELAY",
        "description": "0.50",
        "prefix": "bj_CREEP_ITEM_DELAY"
    },
    "bj_STOCK_RESTOCK_INITIAL_DELAY": {
        "body": "bj_STOCK_RESTOCK_INITIAL_DELAY",
        "description": "120",
        "prefix": "bj_STOCK_RESTOCK_INITIAL_DELAY"
    },
    "bj_STOCK_RESTOCK_INTERVAL": {
        "body": "bj_STOCK_RESTOCK_INTERVAL",
        "description": "30",
        "prefix": "bj_STOCK_RESTOCK_INTERVAL"
    },
    "bj_STOCK_MAX_ITERATIONS": {
        "body": "bj_STOCK_MAX_ITERATIONS",
        "description": "20",
        "prefix": "bj_STOCK_MAX_ITERATIONS"
    },
    "bj_MAX_DEST_IN_REGION_EVENTS": {
        "body": "bj_MAX_DEST_IN_REGION_EVENTS",
        "description": "64",
        "prefix": "bj_MAX_DEST_IN_REGION_EVENTS"
    },
    "bj_CAMERA_MIN_FARZ": {
        "body": "bj_CAMERA_MIN_FARZ",
        "description": "100",
        "prefix": "bj_CAMERA_MIN_FARZ"
    },
    "bj_CAMERA_DEFAULT_DISTANCE": {
        "body": "bj_CAMERA_DEFAULT_DISTANCE",
        "description": "1650",
        "prefix": "bj_CAMERA_DEFAULT_DISTANCE"
    },
    "bj_CAMERA_DEFAULT_FARZ": {
        "body": "bj_CAMERA_DEFAULT_FARZ",
        "description": "5000",
        "prefix": "bj_CAMERA_DEFAULT_FARZ"
    },
    "bj_CAMERA_DEFAULT_AOA": {
        "body": "bj_CAMERA_DEFAULT_AOA",
        "description": "304",
        "prefix": "bj_CAMERA_DEFAULT_AOA"
    },
    "bj_CAMERA_DEFAULT_FOV": {
        "body": "bj_CAMERA_DEFAULT_FOV",
        "description": "70",
        "prefix": "bj_CAMERA_DEFAULT_FOV"
    },
    "bj_CAMERA_DEFAULT_ROLL": {
        "body": "bj_CAMERA_DEFAULT_ROLL",
        "description": "0",
        "prefix": "bj_CAMERA_DEFAULT_ROLL"
    },
    "bj_CAMERA_DEFAULT_ROTATION": {
        "body": "bj_CAMERA_DEFAULT_ROTATION",
        "description": "90",
        "prefix": "bj_CAMERA_DEFAULT_ROTATION"
    },
    "bj_RESCUE_PING_TIME": {
        "body": "bj_RESCUE_PING_TIME",
        "description": "2.00",
        "prefix": "bj_RESCUE_PING_TIME"
    },
    "bj_NOTHING_SOUND_DURATION": {
        "body": "bj_NOTHING_SOUND_DURATION",
        "description": "5.00",
        "prefix": "bj_NOTHING_SOUND_DURATION"
    },
    "bj_TRANSMISSION_PING_TIME": {
        "body": "bj_TRANSMISSION_PING_TIME",
        "description": "1.00",
        "prefix": "bj_TRANSMISSION_PING_TIME"
    },
    "bj_TRANSMISSION_IND_RED": {
        "body": "bj_TRANSMISSION_IND_RED",
        "description": "255",
        "prefix": "bj_TRANSMISSION_IND_RED"
    },
    "bj_TRANSMISSION_IND_BLUE": {
        "body": "bj_TRANSMISSION_IND_BLUE",
        "description": "255",
        "prefix": "bj_TRANSMISSION_IND_BLUE"
    },
    "bj_TRANSMISSION_IND_GREEN": {
        "body": "bj_TRANSMISSION_IND_GREEN",
        "description": "255",
        "prefix": "bj_TRANSMISSION_IND_GREEN"
    },
    "bj_TRANSMISSION_IND_ALPHA": {
        "body": "bj_TRANSMISSION_IND_ALPHA",
        "description": "255",
        "prefix": "bj_TRANSMISSION_IND_ALPHA"
    },
    "bj_TRANSMISSION_PORT_HANGTIME": {
        "body": "bj_TRANSMISSION_PORT_HANGTIME",
        "description": "1.50",
        "prefix": "bj_TRANSMISSION_PORT_HANGTIME"
    },
    "bj_CINEMODE_INTERFACEFADE": {
        "body": "bj_CINEMODE_INTERFACEFADE",
        "description": "0.50",
        "prefix": "bj_CINEMODE_INTERFACEFADE"
    },
    "bj_CINEMODE_GAMESPEED": {
        "body": "bj_CINEMODE_GAMESPEED",
        "description": "MAP_SPEED_NORMAL",
        "prefix": "bj_CINEMODE_GAMESPEED"
    },
    "bj_CINEMODE_VOLUME_UNITMOVEMENT": {
        "body": "bj_CINEMODE_VOLUME_UNITMOVEMENT",
        "description": "0.40",
        "prefix": "bj_CINEMODE_VOLUME_UNITMOVEMENT"
    },
    "bj_CINEMODE_VOLUME_UNITSOUNDS": {
        "body": "bj_CINEMODE_VOLUME_UNITSOUNDS",
        "description": "0.00",
        "prefix": "bj_CINEMODE_VOLUME_UNITSOUNDS"
    },
    "bj_CINEMODE_VOLUME_COMBAT": {
        "body": "bj_CINEMODE_VOLUME_COMBAT",
        "description": "0.40",
        "prefix": "bj_CINEMODE_VOLUME_COMBAT"
    },
    "bj_CINEMODE_VOLUME_SPELLS": {
        "body": "bj_CINEMODE_VOLUME_SPELLS",
        "description": "0.40",
        "prefix": "bj_CINEMODE_VOLUME_SPELLS"
    },
    "bj_CINEMODE_VOLUME_UI": {
        "body": "bj_CINEMODE_VOLUME_UI",
        "description": "0.00",
        "prefix": "bj_CINEMODE_VOLUME_UI"
    },
    "bj_CINEMODE_VOLUME_MUSIC": {
        "body": "bj_CINEMODE_VOLUME_MUSIC",
        "description": "0.55",
        "prefix": "bj_CINEMODE_VOLUME_MUSIC"
    },
    "bj_CINEMODE_VOLUME_AMBIENTSOUNDS": {
        "body": "bj_CINEMODE_VOLUME_AMBIENTSOUNDS",
        "description": "1.00",
        "prefix": "bj_CINEMODE_VOLUME_AMBIENTSOUNDS"
    },
    "bj_CINEMODE_VOLUME_FIRE": {
        "body": "bj_CINEMODE_VOLUME_FIRE",
        "description": "0.60",
        "prefix": "bj_CINEMODE_VOLUME_FIRE"
    },
    "bj_SPEECH_VOLUME_UNITMOVEMENT": {
        "body": "bj_SPEECH_VOLUME_UNITMOVEMENT",
        "description": "0.25",
        "prefix": "bj_SPEECH_VOLUME_UNITMOVEMENT"
    },
    "bj_SPEECH_VOLUME_UNITSOUNDS": {
        "body": "bj_SPEECH_VOLUME_UNITSOUNDS",
        "description": "0.00",
        "prefix": "bj_SPEECH_VOLUME_UNITSOUNDS"
    },
    "bj_SPEECH_VOLUME_COMBAT": {
        "body": "bj_SPEECH_VOLUME_COMBAT",
        "description": "0.25",
        "prefix": "bj_SPEECH_VOLUME_COMBAT"
    },
    "bj_SPEECH_VOLUME_SPELLS": {
        "body": "bj_SPEECH_VOLUME_SPELLS",
        "description": "0.25",
        "prefix": "bj_SPEECH_VOLUME_SPELLS"
    },
    "bj_SPEECH_VOLUME_UI": {
        "body": "bj_SPEECH_VOLUME_UI",
        "description": "0.00",
        "prefix": "bj_SPEECH_VOLUME_UI"
    },
    "bj_SPEECH_VOLUME_MUSIC": {
        "body": "bj_SPEECH_VOLUME_MUSIC",
        "description": "0.55",
        "prefix": "bj_SPEECH_VOLUME_MUSIC"
    },
    "bj_SPEECH_VOLUME_AMBIENTSOUNDS": {
        "body": "bj_SPEECH_VOLUME_AMBIENTSOUNDS",
        "description": "1.00",
        "prefix": "bj_SPEECH_VOLUME_AMBIENTSOUNDS"
    },
    "bj_SPEECH_VOLUME_FIRE": {
        "body": "bj_SPEECH_VOLUME_FIRE",
        "description": "0.60",
        "prefix": "bj_SPEECH_VOLUME_FIRE"
    },
    "bj_SMARTPAN_TRESHOLD_PAN": {
        "body": "bj_SMARTPAN_TRESHOLD_PAN",
        "description": "500",
        "prefix": "bj_SMARTPAN_TRESHOLD_PAN"
    },
    "bj_SMARTPAN_TRESHOLD_SNAP": {
        "body": "bj_SMARTPAN_TRESHOLD_SNAP",
        "description": "3500",
        "prefix": "bj_SMARTPAN_TRESHOLD_SNAP"
    },
    "bj_MAX_QUEUED_TRIGGERS": {
        "body": "bj_MAX_QUEUED_TRIGGERS",
        "description": "100",
        "prefix": "bj_MAX_QUEUED_TRIGGERS"
    },
    "bj_QUEUED_TRIGGER_TIMEOUT": {
        "body": "bj_QUEUED_TRIGGER_TIMEOUT",
        "description": "180.00",
        "prefix": "bj_QUEUED_TRIGGER_TIMEOUT"
    },
    "bj_CAMPAIGN_INDEX_T": {
        "body": "bj_CAMPAIGN_INDEX_T",
        "description": "0",
        "prefix": "bj_CAMPAIGN_INDEX_T"
    },
    "bj_CAMPAIGN_INDEX_H": {
        "body": "bj_CAMPAIGN_INDEX_H",
        "description": "1",
        "prefix": "bj_CAMPAIGN_INDEX_H"
    },
    "bj_CAMPAIGN_INDEX_U": {
        "body": "bj_CAMPAIGN_INDEX_U",
        "description": "2",
        "prefix": "bj_CAMPAIGN_INDEX_U"
    },
    "bj_CAMPAIGN_INDEX_O": {
        "body": "bj_CAMPAIGN_INDEX_O",
        "description": "3",
        "prefix": "bj_CAMPAIGN_INDEX_O"
    },
    "bj_CAMPAIGN_INDEX_N": {
        "body": "bj_CAMPAIGN_INDEX_N",
        "description": "4",
        "prefix": "bj_CAMPAIGN_INDEX_N"
    },
    "bj_CAMPAIGN_INDEX_XN": {
        "body": "bj_CAMPAIGN_INDEX_XN",
        "description": "5",
        "prefix": "bj_CAMPAIGN_INDEX_XN"
    },
    "bj_CAMPAIGN_INDEX_XH": {
        "body": "bj_CAMPAIGN_INDEX_XH",
        "description": "6",
        "prefix": "bj_CAMPAIGN_INDEX_XH"
    },
    "bj_CAMPAIGN_INDEX_XU": {
        "body": "bj_CAMPAIGN_INDEX_XU",
        "description": "7",
        "prefix": "bj_CAMPAIGN_INDEX_XU"
    },
    "bj_CAMPAIGN_INDEX_XO": {
        "body": "bj_CAMPAIGN_INDEX_XO",
        "description": "8",
        "prefix": "bj_CAMPAIGN_INDEX_XO"
    },
    "bj_CAMPAIGN_OFFSET_T": {
        "body": "bj_CAMPAIGN_OFFSET_T",
        "description": "0",
        "prefix": "bj_CAMPAIGN_OFFSET_T"
    },
    "bj_CAMPAIGN_OFFSET_H": {
        "body": "bj_CAMPAIGN_OFFSET_H",
        "description": "1",
        "prefix": "bj_CAMPAIGN_OFFSET_H"
    },
    "bj_CAMPAIGN_OFFSET_U": {
        "body": "bj_CAMPAIGN_OFFSET_U",
        "description": "2",
        "prefix": "bj_CAMPAIGN_OFFSET_U"
    },
    "bj_CAMPAIGN_OFFSET_O": {
        "body": "bj_CAMPAIGN_OFFSET_O",
        "description": "3",
        "prefix": "bj_CAMPAIGN_OFFSET_O"
    },
    "bj_CAMPAIGN_OFFSET_N": {
        "body": "bj_CAMPAIGN_OFFSET_N",
        "description": "4",
        "prefix": "bj_CAMPAIGN_OFFSET_N"
    },
    "bj_CAMPAIGN_OFFSET_XN": {
        "body": "bj_CAMPAIGN_OFFSET_XN",
        "description": "0",
        "prefix": "bj_CAMPAIGN_OFFSET_XN"
    },
    "bj_CAMPAIGN_OFFSET_XH": {
        "body": "bj_CAMPAIGN_OFFSET_XH",
        "description": "1",
        "prefix": "bj_CAMPAIGN_OFFSET_XH"
    },
    "bj_CAMPAIGN_OFFSET_XU": {
        "body": "bj_CAMPAIGN_OFFSET_XU",
        "description": "2",
        "prefix": "bj_CAMPAIGN_OFFSET_XU"
    },
    "bj_CAMPAIGN_OFFSET_XO": {
        "body": "bj_CAMPAIGN_OFFSET_XO",
        "description": "3",
        "prefix": "bj_CAMPAIGN_OFFSET_XO"
    },
    "bj_MISSION_INDEX_T00": {
        "body": "bj_MISSION_INDEX_T00",
        "description": "bj_CAMPAIGN_OFFSET_T * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_T00"
    },
    "bj_MISSION_INDEX_T01": {
        "body": "bj_MISSION_INDEX_T01",
        "description": "bj_CAMPAIGN_OFFSET_T * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_T01"
    },
    "bj_MISSION_INDEX_H00": {
        "body": "bj_MISSION_INDEX_H00",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_H00"
    },
    "bj_MISSION_INDEX_H01": {
        "body": "bj_MISSION_INDEX_H01",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_H01"
    },
    "bj_MISSION_INDEX_H02": {
        "body": "bj_MISSION_INDEX_H02",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_H02"
    },
    "bj_MISSION_INDEX_H03": {
        "body": "bj_MISSION_INDEX_H03",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_H03"
    },
    "bj_MISSION_INDEX_H04": {
        "body": "bj_MISSION_INDEX_H04",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_H04"
    },
    "bj_MISSION_INDEX_H05": {
        "body": "bj_MISSION_INDEX_H05",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_H05"
    },
    "bj_MISSION_INDEX_H06": {
        "body": "bj_MISSION_INDEX_H06",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_H06"
    },
    "bj_MISSION_INDEX_H07": {
        "body": "bj_MISSION_INDEX_H07",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_H07"
    },
    "bj_MISSION_INDEX_H08": {
        "body": "bj_MISSION_INDEX_H08",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_H08"
    },
    "bj_MISSION_INDEX_H09": {
        "body": "bj_MISSION_INDEX_H09",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_H09"
    },
    "bj_MISSION_INDEX_H10": {
        "body": "bj_MISSION_INDEX_H10",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 10",
        "prefix": "bj_MISSION_INDEX_H10"
    },
    "bj_MISSION_INDEX_H11": {
        "body": "bj_MISSION_INDEX_H11",
        "description": "bj_CAMPAIGN_OFFSET_H * 1000 + 11",
        "prefix": "bj_MISSION_INDEX_H11"
    },
    "bj_MISSION_INDEX_U00": {
        "body": "bj_MISSION_INDEX_U00",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_U00"
    },
    "bj_MISSION_INDEX_U01": {
        "body": "bj_MISSION_INDEX_U01",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_U01"
    },
    "bj_MISSION_INDEX_U02": {
        "body": "bj_MISSION_INDEX_U02",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_U02"
    },
    "bj_MISSION_INDEX_U03": {
        "body": "bj_MISSION_INDEX_U03",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_U03"
    },
    "bj_MISSION_INDEX_U05": {
        "body": "bj_MISSION_INDEX_U05",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_U05"
    },
    "bj_MISSION_INDEX_U07": {
        "body": "bj_MISSION_INDEX_U07",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_U07"
    },
    "bj_MISSION_INDEX_U08": {
        "body": "bj_MISSION_INDEX_U08",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_U08"
    },
    "bj_MISSION_INDEX_U09": {
        "body": "bj_MISSION_INDEX_U09",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_U09"
    },
    "bj_MISSION_INDEX_U10": {
        "body": "bj_MISSION_INDEX_U10",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_U10"
    },
    "bj_MISSION_INDEX_U11": {
        "body": "bj_MISSION_INDEX_U11",
        "description": "bj_CAMPAIGN_OFFSET_U * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_U11"
    },
    "bj_MISSION_INDEX_O00": {
        "body": "bj_MISSION_INDEX_O00",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_O00"
    },
    "bj_MISSION_INDEX_O01": {
        "body": "bj_MISSION_INDEX_O01",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_O01"
    },
    "bj_MISSION_INDEX_O02": {
        "body": "bj_MISSION_INDEX_O02",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_O02"
    },
    "bj_MISSION_INDEX_O03": {
        "body": "bj_MISSION_INDEX_O03",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_O03"
    },
    "bj_MISSION_INDEX_O04": {
        "body": "bj_MISSION_INDEX_O04",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_O04"
    },
    "bj_MISSION_INDEX_O05": {
        "body": "bj_MISSION_INDEX_O05",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_O05"
    },
    "bj_MISSION_INDEX_O06": {
        "body": "bj_MISSION_INDEX_O06",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_O06"
    },
    "bj_MISSION_INDEX_O07": {
        "body": "bj_MISSION_INDEX_O07",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_O07"
    },
    "bj_MISSION_INDEX_O08": {
        "body": "bj_MISSION_INDEX_O08",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_O08"
    },
    "bj_MISSION_INDEX_O09": {
        "body": "bj_MISSION_INDEX_O09",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_O09"
    },
    "bj_MISSION_INDEX_O10": {
        "body": "bj_MISSION_INDEX_O10",
        "description": "bj_CAMPAIGN_OFFSET_O * 1000 + 10",
        "prefix": "bj_MISSION_INDEX_O10"
    },
    "bj_MISSION_INDEX_N00": {
        "body": "bj_MISSION_INDEX_N00",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_N00"
    },
    "bj_MISSION_INDEX_N01": {
        "body": "bj_MISSION_INDEX_N01",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_N01"
    },
    "bj_MISSION_INDEX_N02": {
        "body": "bj_MISSION_INDEX_N02",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_N02"
    },
    "bj_MISSION_INDEX_N03": {
        "body": "bj_MISSION_INDEX_N03",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_N03"
    },
    "bj_MISSION_INDEX_N04": {
        "body": "bj_MISSION_INDEX_N04",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_N04"
    },
    "bj_MISSION_INDEX_N05": {
        "body": "bj_MISSION_INDEX_N05",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_N05"
    },
    "bj_MISSION_INDEX_N06": {
        "body": "bj_MISSION_INDEX_N06",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_N06"
    },
    "bj_MISSION_INDEX_N07": {
        "body": "bj_MISSION_INDEX_N07",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_N07"
    },
    "bj_MISSION_INDEX_N08": {
        "body": "bj_MISSION_INDEX_N08",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_N08"
    },
    "bj_MISSION_INDEX_N09": {
        "body": "bj_MISSION_INDEX_N09",
        "description": "bj_CAMPAIGN_OFFSET_N * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_N09"
    },
    "bj_MISSION_INDEX_XN00": {
        "body": "bj_MISSION_INDEX_XN00",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_XN00"
    },
    "bj_MISSION_INDEX_XN01": {
        "body": "bj_MISSION_INDEX_XN01",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_XN01"
    },
    "bj_MISSION_INDEX_XN02": {
        "body": "bj_MISSION_INDEX_XN02",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_XN02"
    },
    "bj_MISSION_INDEX_XN03": {
        "body": "bj_MISSION_INDEX_XN03",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_XN03"
    },
    "bj_MISSION_INDEX_XN04": {
        "body": "bj_MISSION_INDEX_XN04",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_XN04"
    },
    "bj_MISSION_INDEX_XN05": {
        "body": "bj_MISSION_INDEX_XN05",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_XN05"
    },
    "bj_MISSION_INDEX_XN06": {
        "body": "bj_MISSION_INDEX_XN06",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_XN06"
    },
    "bj_MISSION_INDEX_XN07": {
        "body": "bj_MISSION_INDEX_XN07",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_XN07"
    },
    "bj_MISSION_INDEX_XN08": {
        "body": "bj_MISSION_INDEX_XN08",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_XN08"
    },
    "bj_MISSION_INDEX_XN09": {
        "body": "bj_MISSION_INDEX_XN09",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_XN09"
    },
    "bj_MISSION_INDEX_XN10": {
        "body": "bj_MISSION_INDEX_XN10",
        "description": "bj_CAMPAIGN_OFFSET_XN * 1000 + 10",
        "prefix": "bj_MISSION_INDEX_XN10"
    },
    "bj_MISSION_INDEX_XH00": {
        "body": "bj_MISSION_INDEX_XH00",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_XH00"
    },
    "bj_MISSION_INDEX_XH01": {
        "body": "bj_MISSION_INDEX_XH01",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_XH01"
    },
    "bj_MISSION_INDEX_XH02": {
        "body": "bj_MISSION_INDEX_XH02",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_XH02"
    },
    "bj_MISSION_INDEX_XH03": {
        "body": "bj_MISSION_INDEX_XH03",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_XH03"
    },
    "bj_MISSION_INDEX_XH04": {
        "body": "bj_MISSION_INDEX_XH04",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_XH04"
    },
    "bj_MISSION_INDEX_XH05": {
        "body": "bj_MISSION_INDEX_XH05",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_XH05"
    },
    "bj_MISSION_INDEX_XH06": {
        "body": "bj_MISSION_INDEX_XH06",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_XH06"
    },
    "bj_MISSION_INDEX_XH07": {
        "body": "bj_MISSION_INDEX_XH07",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_XH07"
    },
    "bj_MISSION_INDEX_XH08": {
        "body": "bj_MISSION_INDEX_XH08",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_XH08"
    },
    "bj_MISSION_INDEX_XH09": {
        "body": "bj_MISSION_INDEX_XH09",
        "description": "bj_CAMPAIGN_OFFSET_XH * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_XH09"
    },
    "bj_MISSION_INDEX_XU00": {
        "body": "bj_MISSION_INDEX_XU00",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_XU00"
    },
    "bj_MISSION_INDEX_XU01": {
        "body": "bj_MISSION_INDEX_XU01",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_XU01"
    },
    "bj_MISSION_INDEX_XU02": {
        "body": "bj_MISSION_INDEX_XU02",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_XU02"
    },
    "bj_MISSION_INDEX_XU03": {
        "body": "bj_MISSION_INDEX_XU03",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_XU03"
    },
    "bj_MISSION_INDEX_XU04": {
        "body": "bj_MISSION_INDEX_XU04",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 4",
        "prefix": "bj_MISSION_INDEX_XU04"
    },
    "bj_MISSION_INDEX_XU05": {
        "body": "bj_MISSION_INDEX_XU05",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 5",
        "prefix": "bj_MISSION_INDEX_XU05"
    },
    "bj_MISSION_INDEX_XU06": {
        "body": "bj_MISSION_INDEX_XU06",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 6",
        "prefix": "bj_MISSION_INDEX_XU06"
    },
    "bj_MISSION_INDEX_XU07": {
        "body": "bj_MISSION_INDEX_XU07",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 7",
        "prefix": "bj_MISSION_INDEX_XU07"
    },
    "bj_MISSION_INDEX_XU08": {
        "body": "bj_MISSION_INDEX_XU08",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 8",
        "prefix": "bj_MISSION_INDEX_XU08"
    },
    "bj_MISSION_INDEX_XU09": {
        "body": "bj_MISSION_INDEX_XU09",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 9",
        "prefix": "bj_MISSION_INDEX_XU09"
    },
    "bj_MISSION_INDEX_XU10": {
        "body": "bj_MISSION_INDEX_XU10",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 10",
        "prefix": "bj_MISSION_INDEX_XU10"
    },
    "bj_MISSION_INDEX_XU11": {
        "body": "bj_MISSION_INDEX_XU11",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 11",
        "prefix": "bj_MISSION_INDEX_XU11"
    },
    "bj_MISSION_INDEX_XU12": {
        "body": "bj_MISSION_INDEX_XU12",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 12",
        "prefix": "bj_MISSION_INDEX_XU12"
    },
    "bj_MISSION_INDEX_XU13": {
        "body": "bj_MISSION_INDEX_XU13",
        "description": "bj_CAMPAIGN_OFFSET_XU * 1000 + 13",
        "prefix": "bj_MISSION_INDEX_XU13"
    },
    "bj_MISSION_INDEX_XO00": {
        "body": "bj_MISSION_INDEX_XO00",
        "description": "bj_CAMPAIGN_OFFSET_XO * 1000 + 0",
        "prefix": "bj_MISSION_INDEX_XO00"
    },
    "bj_MISSION_INDEX_XO01": {
        "body": "bj_MISSION_INDEX_XO01",
        "description": "bj_CAMPAIGN_OFFSET_XO * 1000 + 1",
        "prefix": "bj_MISSION_INDEX_XO01"
    },
    "bj_MISSION_INDEX_XO02": {
        "body": "bj_MISSION_INDEX_XO02",
        "description": "bj_CAMPAIGN_OFFSET_XO * 1000 + 2",
        "prefix": "bj_MISSION_INDEX_XO02"
    },
    "bj_MISSION_INDEX_XO03": {
        "body": "bj_MISSION_INDEX_XO03",
        "description": "bj_CAMPAIGN_OFFSET_XO * 1000 + 3",
        "prefix": "bj_MISSION_INDEX_XO03"
    },
    "bj_CINEMATICINDEX_TOP": {
        "body": "bj_CINEMATICINDEX_TOP",
        "description": "0",
        "prefix": "bj_CINEMATICINDEX_TOP"
    },
    "bj_CINEMATICINDEX_HOP": {
        "body": "bj_CINEMATICINDEX_HOP",
        "description": "1",
        "prefix": "bj_CINEMATICINDEX_HOP"
    },
    "bj_CINEMATICINDEX_HED": {
        "body": "bj_CINEMATICINDEX_HED",
        "description": "2",
        "prefix": "bj_CINEMATICINDEX_HED"
    },
    "bj_CINEMATICINDEX_OOP": {
        "body": "bj_CINEMATICINDEX_OOP",
        "description": "3",
        "prefix": "bj_CINEMATICINDEX_OOP"
    },
    "bj_CINEMATICINDEX_OED": {
        "body": "bj_CINEMATICINDEX_OED",
        "description": "4",
        "prefix": "bj_CINEMATICINDEX_OED"
    },
    "bj_CINEMATICINDEX_UOP": {
        "body": "bj_CINEMATICINDEX_UOP",
        "description": "5",
        "prefix": "bj_CINEMATICINDEX_UOP"
    },
    "bj_CINEMATICINDEX_UED": {
        "body": "bj_CINEMATICINDEX_UED",
        "description": "6",
        "prefix": "bj_CINEMATICINDEX_UED"
    },
    "bj_CINEMATICINDEX_NOP": {
        "body": "bj_CINEMATICINDEX_NOP",
        "description": "7",
        "prefix": "bj_CINEMATICINDEX_NOP"
    },
    "bj_CINEMATICINDEX_NED": {
        "body": "bj_CINEMATICINDEX_NED",
        "description": "8",
        "prefix": "bj_CINEMATICINDEX_NED"
    },
    "bj_CINEMATICINDEX_XOP": {
        "body": "bj_CINEMATICINDEX_XOP",
        "description": "9",
        "prefix": "bj_CINEMATICINDEX_XOP"
    },
    "bj_CINEMATICINDEX_XED": {
        "body": "bj_CINEMATICINDEX_XED",
        "description": "10",
        "prefix": "bj_CINEMATICINDEX_XED"
    },
    "bj_ALLIANCE_UNALLIED": {
        "body": "bj_ALLIANCE_UNALLIED",
        "description": "0",
        "prefix": "bj_ALLIANCE_UNALLIED"
    },
    "bj_ALLIANCE_UNALLIED_VISION": {
        "body": "bj_ALLIANCE_UNALLIED_VISION",
        "description": "1",
        "prefix": "bj_ALLIANCE_UNALLIED_VISION"
    },
    "bj_ALLIANCE_ALLIED": {
        "body": "bj_ALLIANCE_ALLIED",
        "description": "2",
        "prefix": "bj_ALLIANCE_ALLIED"
    },
    "bj_ALLIANCE_ALLIED_VISION": {
        "body": "bj_ALLIANCE_ALLIED_VISION",
        "description": "3",
        "prefix": "bj_ALLIANCE_ALLIED_VISION"
    },
    "bj_ALLIANCE_ALLIED_UNITS": {
        "body": "bj_ALLIANCE_ALLIED_UNITS",
        "description": "4",
        "prefix": "bj_ALLIANCE_ALLIED_UNITS"
    },
    "bj_ALLIANCE_ALLIED_ADVUNITS": {
        "body": "bj_ALLIANCE_ALLIED_ADVUNITS",
        "description": "5",
        "prefix": "bj_ALLIANCE_ALLIED_ADVUNITS"
    },
    "bj_ALLIANCE_NEUTRAL": {
        "body": "bj_ALLIANCE_NEUTRAL",
        "description": "6",
        "prefix": "bj_ALLIANCE_NEUTRAL"
    },
    "bj_ALLIANCE_NEUTRAL_VISION": {
        "body": "bj_ALLIANCE_NEUTRAL_VISION",
        "description": "7",
        "prefix": "bj_ALLIANCE_NEUTRAL_VISION"
    },
    "bj_KEYEVENTTYPE_DEPRESS": {
        "body": "bj_KEYEVENTTYPE_DEPRESS",
        "description": "0",
        "prefix": "bj_KEYEVENTTYPE_DEPRESS"
    },
    "bj_KEYEVENTTYPE_RELEASE": {
        "body": "bj_KEYEVENTTYPE_RELEASE",
        "description": "1",
        "prefix": "bj_KEYEVENTTYPE_RELEASE"
    },
    "bj_KEYEVENTKEY_LEFT": {
        "body": "bj_KEYEVENTKEY_LEFT",
        "description": "0",
        "prefix": "bj_KEYEVENTKEY_LEFT"
    },
    "bj_KEYEVENTKEY_RIGHT": {
        "body": "bj_KEYEVENTKEY_RIGHT",
        "description": "1",
        "prefix": "bj_KEYEVENTKEY_RIGHT"
    },
    "bj_KEYEVENTKEY_DOWN": {
        "body": "bj_KEYEVENTKEY_DOWN",
        "description": "2",
        "prefix": "bj_KEYEVENTKEY_DOWN"
    },
    "bj_KEYEVENTKEY_UP": {
        "body": "bj_KEYEVENTKEY_UP",
        "description": "3",
        "prefix": "bj_KEYEVENTKEY_UP"
    },
    "bj_MOUSEEVENTTYPE_DOWN": {
        "body": "bj_MOUSEEVENTTYPE_DOWN",
        "description": "0",
        "prefix": "bj_MOUSEEVENTTYPE_DOWN"
    },
    "bj_MOUSEEVENTTYPE_UP": {
        "body": "bj_MOUSEEVENTTYPE_UP",
        "description": "1",
        "prefix": "bj_MOUSEEVENTTYPE_UP"
    },
    "bj_MOUSEEVENTTYPE_MOVE": {
        "body": "bj_MOUSEEVENTTYPE_MOVE",
        "description": "2",
        "prefix": "bj_MOUSEEVENTTYPE_MOVE"
    },
    "bj_TIMETYPE_ADD": {
        "body": "bj_TIMETYPE_ADD",
        "description": "0",
        "prefix": "bj_TIMETYPE_ADD"
    },
    "bj_TIMETYPE_SET": {
        "body": "bj_TIMETYPE_SET",
        "description": "1",
        "prefix": "bj_TIMETYPE_SET"
    },
    "bj_TIMETYPE_SUB": {
        "body": "bj_TIMETYPE_SUB",
        "description": "2",
        "prefix": "bj_TIMETYPE_SUB"
    },
    "bj_CAMERABOUNDS_ADJUST_ADD": {
        "body": "bj_CAMERABOUNDS_ADJUST_ADD",
        "description": "0",
        "prefix": "bj_CAMERABOUNDS_ADJUST_ADD"
    },
    "bj_CAMERABOUNDS_ADJUST_SUB": {
        "body": "bj_CAMERABOUNDS_ADJUST_SUB",
        "description": "1",
        "prefix": "bj_CAMERABOUNDS_ADJUST_SUB"
    },
    "bj_QUESTTYPE_REQ_DISCOVERED": {
        "body": "bj_QUESTTYPE_REQ_DISCOVERED",
        "description": "0",
        "prefix": "bj_QUESTTYPE_REQ_DISCOVERED"
    },
    "bj_QUESTTYPE_REQ_UNDISCOVERED": {
        "body": "bj_QUESTTYPE_REQ_UNDISCOVERED",
        "description": "1",
        "prefix": "bj_QUESTTYPE_REQ_UNDISCOVERED"
    },
    "bj_QUESTTYPE_OPT_DISCOVERED": {
        "body": "bj_QUESTTYPE_OPT_DISCOVERED",
        "description": "2",
        "prefix": "bj_QUESTTYPE_OPT_DISCOVERED"
    },
    "bj_QUESTTYPE_OPT_UNDISCOVERED": {
        "body": "bj_QUESTTYPE_OPT_UNDISCOVERED",
        "description": "3",
        "prefix": "bj_QUESTTYPE_OPT_UNDISCOVERED"
    },
    "bj_QUESTMESSAGE_DISCOVERED": {
        "body": "bj_QUESTMESSAGE_DISCOVERED",
        "description": "0",
        "prefix": "bj_QUESTMESSAGE_DISCOVERED"
    },
    "bj_QUESTMESSAGE_UPDATED": {
        "body": "bj_QUESTMESSAGE_UPDATED",
        "description": "1",
        "prefix": "bj_QUESTMESSAGE_UPDATED"
    },
    "bj_QUESTMESSAGE_COMPLETED": {
        "body": "bj_QUESTMESSAGE_COMPLETED",
        "description": "2",
        "prefix": "bj_QUESTMESSAGE_COMPLETED"
    },
    "bj_QUESTMESSAGE_FAILED": {
        "body": "bj_QUESTMESSAGE_FAILED",
        "description": "3",
        "prefix": "bj_QUESTMESSAGE_FAILED"
    },
    "bj_QUESTMESSAGE_REQUIREMENT": {
        "body": "bj_QUESTMESSAGE_REQUIREMENT",
        "description": "4",
        "prefix": "bj_QUESTMESSAGE_REQUIREMENT"
    },
    "bj_QUESTMESSAGE_MISSIONFAILED": {
        "body": "bj_QUESTMESSAGE_MISSIONFAILED",
        "description": "5",
        "prefix": "bj_QUESTMESSAGE_MISSIONFAILED"
    },
    "bj_QUESTMESSAGE_ALWAYSHINT": {
        "body": "bj_QUESTMESSAGE_ALWAYSHINT",
        "description": "6",
        "prefix": "bj_QUESTMESSAGE_ALWAYSHINT"
    },
    "bj_QUESTMESSAGE_HINT": {
        "body": "bj_QUESTMESSAGE_HINT",
        "description": "7",
        "prefix": "bj_QUESTMESSAGE_HINT"
    },
    "bj_QUESTMESSAGE_SECRET": {
        "body": "bj_QUESTMESSAGE_SECRET",
        "description": "8",
        "prefix": "bj_QUESTMESSAGE_SECRET"
    },
    "bj_QUESTMESSAGE_UNITACQUIRED": {
        "body": "bj_QUESTMESSAGE_UNITACQUIRED",
        "description": "9",
        "prefix": "bj_QUESTMESSAGE_UNITACQUIRED"
    },
    "bj_QUESTMESSAGE_UNITAVAILABLE": {
        "body": "bj_QUESTMESSAGE_UNITAVAILABLE",
        "description": "10",
        "prefix": "bj_QUESTMESSAGE_UNITAVAILABLE"
    },
    "bj_QUESTMESSAGE_ITEMACQUIRED": {
        "body": "bj_QUESTMESSAGE_ITEMACQUIRED",
        "description": "11",
        "prefix": "bj_QUESTMESSAGE_ITEMACQUIRED"
    },
    "bj_QUESTMESSAGE_WARNING": {
        "body": "bj_QUESTMESSAGE_WARNING",
        "description": "12",
        "prefix": "bj_QUESTMESSAGE_WARNING"
    },
    "bj_SORTTYPE_SORTBYVALUE": {
        "body": "bj_SORTTYPE_SORTBYVALUE",
        "description": "0",
        "prefix": "bj_SORTTYPE_SORTBYVALUE"
    },
    "bj_SORTTYPE_SORTBYPLAYER": {
        "body": "bj_SORTTYPE_SORTBYPLAYER",
        "description": "1",
        "prefix": "bj_SORTTYPE_SORTBYPLAYER"
    },
    "bj_SORTTYPE_SORTBYLABEL": {
        "body": "bj_SORTTYPE_SORTBYLABEL",
        "description": "2",
        "prefix": "bj_SORTTYPE_SORTBYLABEL"
    },
    "bj_CINEFADETYPE_FADEIN": {
        "body": "bj_CINEFADETYPE_FADEIN",
        "description": "0",
        "prefix": "bj_CINEFADETYPE_FADEIN"
    },
    "bj_CINEFADETYPE_FADEOUT": {
        "body": "bj_CINEFADETYPE_FADEOUT",
        "description": "1",
        "prefix": "bj_CINEFADETYPE_FADEOUT"
    },
    "bj_CINEFADETYPE_FADEOUTIN": {
        "body": "bj_CINEFADETYPE_FADEOUTIN",
        "description": "2",
        "prefix": "bj_CINEFADETYPE_FADEOUTIN"
    },
    "bj_REMOVEBUFFS_POSITIVE": {
        "body": "bj_REMOVEBUFFS_POSITIVE",
        "description": "0",
        "prefix": "bj_REMOVEBUFFS_POSITIVE"
    },
    "bj_REMOVEBUFFS_NEGATIVE": {
        "body": "bj_REMOVEBUFFS_NEGATIVE",
        "description": "1",
        "prefix": "bj_REMOVEBUFFS_NEGATIVE"
    },
    "bj_REMOVEBUFFS_ALL": {
        "body": "bj_REMOVEBUFFS_ALL",
        "description": "2",
        "prefix": "bj_REMOVEBUFFS_ALL"
    },
    "bj_REMOVEBUFFS_NONTLIFE": {
        "body": "bj_REMOVEBUFFS_NONTLIFE",
        "description": "3",
        "prefix": "bj_REMOVEBUFFS_NONTLIFE"
    },
    "bj_BUFF_POLARITY_POSITIVE": {
        "body": "bj_BUFF_POLARITY_POSITIVE",
        "description": "0",
        "prefix": "bj_BUFF_POLARITY_POSITIVE"
    },
    "bj_BUFF_POLARITY_NEGATIVE": {
        "body": "bj_BUFF_POLARITY_NEGATIVE",
        "description": "1",
        "prefix": "bj_BUFF_POLARITY_NEGATIVE"
    },
    "bj_BUFF_POLARITY_EITHER": {
        "body": "bj_BUFF_POLARITY_EITHER",
        "description": "2",
        "prefix": "bj_BUFF_POLARITY_EITHER"
    },
    "bj_BUFF_RESIST_MAGIC": {
        "body": "bj_BUFF_RESIST_MAGIC",
        "description": "0",
        "prefix": "bj_BUFF_RESIST_MAGIC"
    },
    "bj_BUFF_RESIST_PHYSICAL": {
        "body": "bj_BUFF_RESIST_PHYSICAL",
        "description": "1",
        "prefix": "bj_BUFF_RESIST_PHYSICAL"
    },
    "bj_BUFF_RESIST_EITHER": {
        "body": "bj_BUFF_RESIST_EITHER",
        "description": "2",
        "prefix": "bj_BUFF_RESIST_EITHER"
    },
    "bj_BUFF_RESIST_BOTH": {
        "body": "bj_BUFF_RESIST_BOTH",
        "description": "3",
        "prefix": "bj_BUFF_RESIST_BOTH"
    },
    "bj_HEROSTAT_STR": {
        "body": "bj_HEROSTAT_STR",
        "description": "0",
        "prefix": "bj_HEROSTAT_STR"
    },
    "bj_HEROSTAT_AGI": {
        "body": "bj_HEROSTAT_AGI",
        "description": "1",
        "prefix": "bj_HEROSTAT_AGI"
    },
    "bj_HEROSTAT_INT": {
        "body": "bj_HEROSTAT_INT",
        "description": "2",
        "prefix": "bj_HEROSTAT_INT"
    },
    "bj_MODIFYMETHOD_ADD": {
        "body": "bj_MODIFYMETHOD_ADD",
        "description": "0",
        "prefix": "bj_MODIFYMETHOD_ADD"
    },
    "bj_MODIFYMETHOD_SUB": {
        "body": "bj_MODIFYMETHOD_SUB",
        "description": "1",
        "prefix": "bj_MODIFYMETHOD_SUB"
    },
    "bj_MODIFYMETHOD_SET": {
        "body": "bj_MODIFYMETHOD_SET",
        "description": "2",
        "prefix": "bj_MODIFYMETHOD_SET"
    },
    "bj_UNIT_STATE_METHOD_ABSOLUTE": {
        "body": "bj_UNIT_STATE_METHOD_ABSOLUTE",
        "description": "0",
        "prefix": "bj_UNIT_STATE_METHOD_ABSOLUTE"
    },
    "bj_UNIT_STATE_METHOD_RELATIVE": {
        "body": "bj_UNIT_STATE_METHOD_RELATIVE",
        "description": "1",
        "prefix": "bj_UNIT_STATE_METHOD_RELATIVE"
    },
    "bj_UNIT_STATE_METHOD_DEFAULTS": {
        "body": "bj_UNIT_STATE_METHOD_DEFAULTS",
        "description": "2",
        "prefix": "bj_UNIT_STATE_METHOD_DEFAULTS"
    },
    "bj_UNIT_STATE_METHOD_MAXIMUM": {
        "body": "bj_UNIT_STATE_METHOD_MAXIMUM",
        "description": "3",
        "prefix": "bj_UNIT_STATE_METHOD_MAXIMUM"
    },
    "bj_GATEOPERATION_CLOSE": {
        "body": "bj_GATEOPERATION_CLOSE",
        "description": "0",
        "prefix": "bj_GATEOPERATION_CLOSE"
    },
    "bj_GATEOPERATION_OPEN": {
        "body": "bj_GATEOPERATION_OPEN",
        "description": "1",
        "prefix": "bj_GATEOPERATION_OPEN"
    },
    "bj_GATEOPERATION_DESTROY": {
        "body": "bj_GATEOPERATION_DESTROY",
        "description": "2",
        "prefix": "bj_GATEOPERATION_DESTROY"
    },
    "bj_GAMECACHE_BOOLEAN": {
        "body": "bj_GAMECACHE_BOOLEAN",
        "description": "0",
        "prefix": "bj_GAMECACHE_BOOLEAN"
    },
    "bj_GAMECACHE_INTEGER": {
        "body": "bj_GAMECACHE_INTEGER",
        "description": "1",
        "prefix": "bj_GAMECACHE_INTEGER"
    },
    "bj_GAMECACHE_REAL": {
        "body": "bj_GAMECACHE_REAL",
        "description": "2",
        "prefix": "bj_GAMECACHE_REAL"
    },
    "bj_GAMECACHE_UNIT": {
        "body": "bj_GAMECACHE_UNIT",
        "description": "3",
        "prefix": "bj_GAMECACHE_UNIT"
    },
    "bj_GAMECACHE_STRING": {
        "body": "bj_GAMECACHE_STRING",
        "description": "4",
        "prefix": "bj_GAMECACHE_STRING"
    },
    "bj_HASHTABLE_BOOLEAN": {
        "body": "bj_HASHTABLE_BOOLEAN",
        "description": "0",
        "prefix": "bj_HASHTABLE_BOOLEAN"
    },
    "bj_HASHTABLE_INTEGER": {
        "body": "bj_HASHTABLE_INTEGER",
        "description": "1",
        "prefix": "bj_HASHTABLE_INTEGER"
    },
    "bj_HASHTABLE_REAL": {
        "body": "bj_HASHTABLE_REAL",
        "description": "2",
        "prefix": "bj_HASHTABLE_REAL"
    },
    "bj_HASHTABLE_STRING": {
        "body": "bj_HASHTABLE_STRING",
        "description": "3",
        "prefix": "bj_HASHTABLE_STRING"
    },
    "bj_HASHTABLE_HANDLE": {
        "body": "bj_HASHTABLE_HANDLE",
        "description": "4",
        "prefix": "bj_HASHTABLE_HANDLE"
    },
    "bj_ITEM_STATUS_HIDDEN": {
        "body": "bj_ITEM_STATUS_HIDDEN",
        "description": "0",
        "prefix": "bj_ITEM_STATUS_HIDDEN"
    },
    "bj_ITEM_STATUS_OWNED": {
        "body": "bj_ITEM_STATUS_OWNED",
        "description": "1",
        "prefix": "bj_ITEM_STATUS_OWNED"
    },
    "bj_ITEM_STATUS_INVULNERABLE": {
        "body": "bj_ITEM_STATUS_INVULNERABLE",
        "description": "2",
        "prefix": "bj_ITEM_STATUS_INVULNERABLE"
    },
    "bj_ITEM_STATUS_POWERUP": {
        "body": "bj_ITEM_STATUS_POWERUP",
        "description": "3",
        "prefix": "bj_ITEM_STATUS_POWERUP"
    },
    "bj_ITEM_STATUS_SELLABLE": {
        "body": "bj_ITEM_STATUS_SELLABLE",
        "description": "4",
        "prefix": "bj_ITEM_STATUS_SELLABLE"
    },
    "bj_ITEM_STATUS_PAWNABLE": {
        "body": "bj_ITEM_STATUS_PAWNABLE",
        "description": "5",
        "prefix": "bj_ITEM_STATUS_PAWNABLE"
    },
    "bj_ITEMCODE_STATUS_POWERUP": {
        "body": "bj_ITEMCODE_STATUS_POWERUP",
        "description": "0",
        "prefix": "bj_ITEMCODE_STATUS_POWERUP"
    },
    "bj_ITEMCODE_STATUS_SELLABLE": {
        "body": "bj_ITEMCODE_STATUS_SELLABLE",
        "description": "1",
        "prefix": "bj_ITEMCODE_STATUS_SELLABLE"
    },
    "bj_ITEMCODE_STATUS_PAWNABLE": {
        "body": "bj_ITEMCODE_STATUS_PAWNABLE",
        "description": "2",
        "prefix": "bj_ITEMCODE_STATUS_PAWNABLE"
    },
    "bj_MINIMAPPINGSTYLE_SIMPLE": {
        "body": "bj_MINIMAPPINGSTYLE_SIMPLE",
        "description": "0",
        "prefix": "bj_MINIMAPPINGSTYLE_SIMPLE"
    },
    "bj_MINIMAPPINGSTYLE_FLASHY": {
        "body": "bj_MINIMAPPINGSTYLE_FLASHY",
        "description": "1",
        "prefix": "bj_MINIMAPPINGSTYLE_FLASHY"
    },
    "bj_MINIMAPPINGSTYLE_ATTACK": {
        "body": "bj_MINIMAPPINGSTYLE_ATTACK",
        "description": "2",
        "prefix": "bj_MINIMAPPINGSTYLE_ATTACK"
    },
    "bj_CORPSE_MAX_DEATH_TIME": {
        "body": "bj_CORPSE_MAX_DEATH_TIME",
        "description": "8.00",
        "prefix": "bj_CORPSE_MAX_DEATH_TIME"
    },
    "bj_CORPSETYPE_FLESH": {
        "body": "bj_CORPSETYPE_FLESH",
        "description": "0",
        "prefix": "bj_CORPSETYPE_FLESH"
    },
    "bj_CORPSETYPE_BONE": {
        "body": "bj_CORPSETYPE_BONE",
        "description": "1",
        "prefix": "bj_CORPSETYPE_BONE"
    },
    "bj_ELEVATOR_BLOCKER_CODE": {
        "body": "bj_ELEVATOR_BLOCKER_CODE",
        "description": "'DTep'",
        "prefix": "bj_ELEVATOR_BLOCKER_CODE"
    },
    "bj_ELEVATOR_CODE01": {
        "body": "bj_ELEVATOR_CODE01",
        "description": "'DTrf'",
        "prefix": "bj_ELEVATOR_CODE01"
    },
    "bj_ELEVATOR_CODE02": {
        "body": "bj_ELEVATOR_CODE02",
        "description": "'DTrx'",
        "prefix": "bj_ELEVATOR_CODE02"
    },
    "bj_ELEVATOR_WALL_TYPE_ALL": {
        "body": "bj_ELEVATOR_WALL_TYPE_ALL",
        "description": "0",
        "prefix": "bj_ELEVATOR_WALL_TYPE_ALL"
    },
    "bj_ELEVATOR_WALL_TYPE_EAST": {
        "body": "bj_ELEVATOR_WALL_TYPE_EAST",
        "description": "1",
        "prefix": "bj_ELEVATOR_WALL_TYPE_EAST"
    },
    "bj_ELEVATOR_WALL_TYPE_NORTH": {
        "body": "bj_ELEVATOR_WALL_TYPE_NORTH",
        "description": "2",
        "prefix": "bj_ELEVATOR_WALL_TYPE_NORTH"
    },
    "bj_ELEVATOR_WALL_TYPE_SOUTH": {
        "body": "bj_ELEVATOR_WALL_TYPE_SOUTH",
        "description": "3",
        "prefix": "bj_ELEVATOR_WALL_TYPE_SOUTH"
    },
    "bj_ELEVATOR_WALL_TYPE_WEST": {
        "body": "bj_ELEVATOR_WALL_TYPE_WEST",
        "description": "4",
        "prefix": "bj_ELEVATOR_WALL_TYPE_WEST"
    },
    "bj_FORCE_ALL_PLAYERS": {
        "body": "bj_FORCE_ALL_PLAYERS",
        "description": "null",
        "prefix": "bj_FORCE_ALL_PLAYERS"
    },
    "bj_FORCE_PLAYER": {
        "body": "bj_FORCE_PLAYER",
        "description": "array",
        "prefix": "bj_FORCE_PLAYER"
    },
    "bj_MELEE_MAX_TWINKED_HEROES": {
        "body": "bj_MELEE_MAX_TWINKED_HEROES",
        "description": "0",
        "prefix": "bj_MELEE_MAX_TWINKED_HEROES"
    },
    "bj_mapInitialPlayableArea": {
        "body": "bj_mapInitialPlayableArea",
        "description": "null",
        "prefix": "bj_mapInitialPlayableArea"
    },
    "bj_mapInitialCameraBounds": {
        "body": "bj_mapInitialCameraBounds",
        "description": "null",
        "prefix": "bj_mapInitialCameraBounds"
    },
    "bj_forLoopAIndex": {
        "body": "bj_forLoopAIndex",
        "description": "0",
        "prefix": "bj_forLoopAIndex"
    },
    "bj_forLoopBIndex": {
        "body": "bj_forLoopBIndex",
        "description": "0",
        "prefix": "bj_forLoopBIndex"
    },
    "bj_forLoopAIndexEnd": {
        "body": "bj_forLoopAIndexEnd",
        "description": "0",
        "prefix": "bj_forLoopAIndexEnd"
    },
    "bj_forLoopBIndexEnd": {
        "body": "bj_forLoopBIndexEnd",
        "description": "0",
        "prefix": "bj_forLoopBIndexEnd"
    },
    "bj_slotControlReady": {
        "body": "bj_slotControlReady",
        "description": "false",
        "prefix": "bj_slotControlReady"
    },
    "bj_slotControlUsed": {
        "body": "bj_slotControlUsed",
        "description": "array",
        "prefix": "bj_slotControlUsed"
    },
    "bj_slotControl": {
        "body": "bj_slotControl",
        "description": "array",
        "prefix": "bj_slotControl"
    },
    "bj_gameStartedTimer": {
        "body": "bj_gameStartedTimer",
        "description": "null",
        "prefix": "bj_gameStartedTimer"
    },
    "bj_gameStarted": {
        "body": "bj_gameStarted",
        "description": "false",
        "prefix": "bj_gameStarted"
    },
    "bj_volumeGroupsTimer": {
        "body": "bj_volumeGroupsTimer",
        "description": "CreateTimer()",
        "prefix": "bj_volumeGroupsTimer"
    },
    "bj_isSinglePlayer": {
        "body": "bj_isSinglePlayer",
        "description": "false",
        "prefix": "bj_isSinglePlayer"
    },
    "bj_dncSoundsDay": {
        "body": "bj_dncSoundsDay",
        "description": "null",
        "prefix": "bj_dncSoundsDay"
    },
    "bj_dncSoundsNight": {
        "body": "bj_dncSoundsNight",
        "description": "null",
        "prefix": "bj_dncSoundsNight"
    },
    "bj_dayAmbientSound": {
        "body": "bj_dayAmbientSound",
        "description": "null",
        "prefix": "bj_dayAmbientSound"
    },
    "bj_nightAmbientSound": {
        "body": "bj_nightAmbientSound",
        "description": "null",
        "prefix": "bj_nightAmbientSound"
    },
    "bj_dncSoundsDawn": {
        "body": "bj_dncSoundsDawn",
        "description": "null",
        "prefix": "bj_dncSoundsDawn"
    },
    "bj_dncSoundsDusk": {
        "body": "bj_dncSoundsDusk",
        "description": "null",
        "prefix": "bj_dncSoundsDusk"
    },
    "bj_dawnSound": {
        "body": "bj_dawnSound",
        "description": "null",
        "prefix": "bj_dawnSound"
    },
    "bj_duskSound": {
        "body": "bj_duskSound",
        "description": "null",
        "prefix": "bj_duskSound"
    },
    "bj_useDawnDuskSounds": {
        "body": "bj_useDawnDuskSounds",
        "description": "true",
        "prefix": "bj_useDawnDuskSounds"
    },
    "bj_dncIsDaytime": {
        "body": "bj_dncIsDaytime",
        "description": "false",
        "prefix": "bj_dncIsDaytime"
    },
    "bj_rescueSound": {
        "body": "bj_rescueSound",
        "description": "null",
        "prefix": "bj_rescueSound"
    },
    "bj_questDiscoveredSound": {
        "body": "bj_questDiscoveredSound",
        "description": "null",
        "prefix": "bj_questDiscoveredSound"
    },
    "bj_questUpdatedSound": {
        "body": "bj_questUpdatedSound",
        "description": "null",
        "prefix": "bj_questUpdatedSound"
    },
    "bj_questCompletedSound": {
        "body": "bj_questCompletedSound",
        "description": "null",
        "prefix": "bj_questCompletedSound"
    },
    "bj_questFailedSound": {
        "body": "bj_questFailedSound",
        "description": "null",
        "prefix": "bj_questFailedSound"
    },
    "bj_questHintSound": {
        "body": "bj_questHintSound",
        "description": "null",
        "prefix": "bj_questHintSound"
    },
    "bj_questSecretSound": {
        "body": "bj_questSecretSound",
        "description": "null",
        "prefix": "bj_questSecretSound"
    },
    "bj_questItemAcquiredSound": {
        "body": "bj_questItemAcquiredSound",
        "description": "null",
        "prefix": "bj_questItemAcquiredSound"
    },
    "bj_questWarningSound": {
        "body": "bj_questWarningSound",
        "description": "null",
        "prefix": "bj_questWarningSound"
    },
    "bj_victoryDialogSound": {
        "body": "bj_victoryDialogSound",
        "description": "null",
        "prefix": "bj_victoryDialogSound"
    },
    "bj_defeatDialogSound": {
        "body": "bj_defeatDialogSound",
        "description": "null",
        "prefix": "bj_defeatDialogSound"
    },
    "bj_stockItemPurchased": {
        "body": "bj_stockItemPurchased",
        "description": "null",
        "prefix": "bj_stockItemPurchased"
    },
    "bj_stockUpdateTimer": {
        "body": "bj_stockUpdateTimer",
        "description": "null",
        "prefix": "bj_stockUpdateTimer"
    },
    "bj_stockAllowedPermanent": {
        "body": "bj_stockAllowedPermanent",
        "description": "array",
        "prefix": "bj_stockAllowedPermanent"
    },
    "bj_stockAllowedCharged": {
        "body": "bj_stockAllowedCharged",
        "description": "array",
        "prefix": "bj_stockAllowedCharged"
    },
    "bj_stockAllowedArtifact": {
        "body": "bj_stockAllowedArtifact",
        "description": "array",
        "prefix": "bj_stockAllowedArtifact"
    },
    "bj_stockPickedItemLevel": {
        "body": "bj_stockPickedItemLevel",
        "description": "0",
        "prefix": "bj_stockPickedItemLevel"
    },
    "bj_meleeVisibilityTrained": {
        "body": "bj_meleeVisibilityTrained",
        "description": "null",
        "prefix": "bj_meleeVisibilityTrained"
    },
    "bj_meleeVisibilityIsDay": {
        "body": "bj_meleeVisibilityIsDay",
        "description": "true",
        "prefix": "bj_meleeVisibilityIsDay"
    },
    "bj_meleeGrantHeroItems": {
        "body": "bj_meleeGrantHeroItems",
        "description": "false",
        "prefix": "bj_meleeGrantHeroItems"
    },
    "bj_meleeNearestMineToLoc": {
        "body": "bj_meleeNearestMineToLoc",
        "description": "null",
        "prefix": "bj_meleeNearestMineToLoc"
    },
    "bj_meleeNearestMine": {
        "body": "bj_meleeNearestMine",
        "description": "null",
        "prefix": "bj_meleeNearestMine"
    },
    "bj_meleeNearestMineDist": {
        "body": "bj_meleeNearestMineDist",
        "description": "0.00",
        "prefix": "bj_meleeNearestMineDist"
    },
    "bj_meleeGameOver": {
        "body": "bj_meleeGameOver",
        "description": "false",
        "prefix": "bj_meleeGameOver"
    },
    "bj_meleeDefeated": {
        "body": "bj_meleeDefeated",
        "description": "array",
        "prefix": "bj_meleeDefeated"
    },
    "bj_meleeVictoried": {
        "body": "bj_meleeVictoried",
        "description": "array",
        "prefix": "bj_meleeVictoried"
    },
    "bj_ghoul": {
        "body": "bj_ghoul",
        "description": "array",
        "prefix": "bj_ghoul"
    },
    "bj_crippledTimer": {
        "body": "bj_crippledTimer",
        "description": "array",
        "prefix": "bj_crippledTimer"
    },
    "bj_crippledTimerWindows": {
        "body": "bj_crippledTimerWindows",
        "description": "array",
        "prefix": "bj_crippledTimerWindows"
    },
    "bj_playerIsCrippled": {
        "body": "bj_playerIsCrippled",
        "description": "array",
        "prefix": "bj_playerIsCrippled"
    },
    "bj_playerIsExposed": {
        "body": "bj_playerIsExposed",
        "description": "array",
        "prefix": "bj_playerIsExposed"
    },
    "bj_finishSoonAllExposed": {
        "body": "bj_finishSoonAllExposed",
        "description": "false",
        "prefix": "bj_finishSoonAllExposed"
    },
    "bj_finishSoonTimerDialog": {
        "body": "bj_finishSoonTimerDialog",
        "description": "null",
        "prefix": "bj_finishSoonTimerDialog"
    },
    "bj_meleeTwinkedHeroes": {
        "body": "bj_meleeTwinkedHeroes",
        "description": "array",
        "prefix": "bj_meleeTwinkedHeroes"
    },
    "bj_rescueUnitBehavior": {
        "body": "bj_rescueUnitBehavior",
        "description": "null",
        "prefix": "bj_rescueUnitBehavior"
    },
    "bj_rescueChangeColorUnit": {
        "body": "bj_rescueChangeColorUnit",
        "description": "true",
        "prefix": "bj_rescueChangeColorUnit"
    },
    "bj_rescueChangeColorBldg": {
        "body": "bj_rescueChangeColorBldg",
        "description": "true",
        "prefix": "bj_rescueChangeColorBldg"
    },
    "bj_cineSceneEndingTimer": {
        "body": "bj_cineSceneEndingTimer",
        "description": "null",
        "prefix": "bj_cineSceneEndingTimer"
    },
    "bj_cineSceneLastSound": {
        "body": "bj_cineSceneLastSound",
        "description": "null",
        "prefix": "bj_cineSceneLastSound"
    },
    "bj_cineSceneBeingSkipped": {
        "body": "bj_cineSceneBeingSkipped",
        "description": "null",
        "prefix": "bj_cineSceneBeingSkipped"
    },
    "bj_cineModePriorSpeed": {
        "body": "bj_cineModePriorSpeed",
        "description": "MAP_SPEED_NORMAL",
        "prefix": "bj_cineModePriorSpeed"
    },
    "bj_cineModePriorFogSetting": {
        "body": "bj_cineModePriorFogSetting",
        "description": "false",
        "prefix": "bj_cineModePriorFogSetting"
    },
    "bj_cineModePriorMaskSetting": {
        "body": "bj_cineModePriorMaskSetting",
        "description": "false",
        "prefix": "bj_cineModePriorMaskSetting"
    },
    "bj_cineModeAlreadyIn": {
        "body": "bj_cineModeAlreadyIn",
        "description": "false",
        "prefix": "bj_cineModeAlreadyIn"
    },
    "bj_cineModePriorDawnDusk": {
        "body": "bj_cineModePriorDawnDusk",
        "description": "false",
        "prefix": "bj_cineModePriorDawnDusk"
    },
    "bj_cineModeSavedSeed": {
        "body": "bj_cineModeSavedSeed",
        "description": "0",
        "prefix": "bj_cineModeSavedSeed"
    },
    "bj_cineFadeFinishTimer": {
        "body": "bj_cineFadeFinishTimer",
        "description": "null",
        "prefix": "bj_cineFadeFinishTimer"
    },
    "bj_cineFadeContinueTimer": {
        "body": "bj_cineFadeContinueTimer",
        "description": "null",
        "prefix": "bj_cineFadeContinueTimer"
    },
    "bj_cineFadeContinueRed": {
        "body": "bj_cineFadeContinueRed",
        "description": "0",
        "prefix": "bj_cineFadeContinueRed"
    },
    "bj_cineFadeContinueGreen": {
        "body": "bj_cineFadeContinueGreen",
        "description": "0",
        "prefix": "bj_cineFadeContinueGreen"
    },
    "bj_cineFadeContinueBlue": {
        "body": "bj_cineFadeContinueBlue",
        "description": "0",
        "prefix": "bj_cineFadeContinueBlue"
    },
    "bj_cineFadeContinueTrans": {
        "body": "bj_cineFadeContinueTrans",
        "description": "0",
        "prefix": "bj_cineFadeContinueTrans"
    },
    "bj_cineFadeContinueDuration": {
        "body": "bj_cineFadeContinueDuration",
        "description": "0",
        "prefix": "bj_cineFadeContinueDuration"
    },
    "bj_cineFadeContinueTex": {
        "body": "bj_cineFadeContinueTex",
        "description": """",
        "prefix": "bj_cineFadeContinueTex"
    },
    "bj_queuedExecTotal": {
        "body": "bj_queuedExecTotal",
        "description": "0",
        "prefix": "bj_queuedExecTotal"
    },
    "bj_queuedExecTriggers": {
        "body": "bj_queuedExecTriggers",
        "description": "array",
        "prefix": "bj_queuedExecTriggers"
    },
    "bj_queuedExecUseConds": {
        "body": "bj_queuedExecUseConds",
        "description": "array",
        "prefix": "bj_queuedExecUseConds"
    },
    "bj_queuedExecTimeoutTimer": {
        "body": "bj_queuedExecTimeoutTimer",
        "description": "CreateTimer()",
        "prefix": "bj_queuedExecTimeoutTimer"
    },
    "bj_queuedExecTimeout": {
        "body": "bj_queuedExecTimeout",
        "description": "null",
        "prefix": "bj_queuedExecTimeout"
    },
    "bj_destInRegionDiesCount": {
        "body": "bj_destInRegionDiesCount",
        "description": "0",
        "prefix": "bj_destInRegionDiesCount"
    },
    "bj_destInRegionDiesTrig": {
        "body": "bj_destInRegionDiesTrig",
        "description": "null",
        "prefix": "bj_destInRegionDiesTrig"
    },
    "bj_groupCountUnits": {
        "body": "bj_groupCountUnits",
        "description": "0",
        "prefix": "bj_groupCountUnits"
    },
    "bj_forceCountPlayers": {
        "body": "bj_forceCountPlayers",
        "description": "0",
        "prefix": "bj_forceCountPlayers"
    },
    "bj_groupEnumTypeId": {
        "body": "bj_groupEnumTypeId",
        "description": "0",
        "prefix": "bj_groupEnumTypeId"
    },
    "bj_groupEnumOwningPlayer": {
        "body": "bj_groupEnumOwningPlayer",
        "description": "null",
        "prefix": "bj_groupEnumOwningPlayer"
    },
    "bj_groupAddGroupDest": {
        "body": "bj_groupAddGroupDest",
        "description": "null",
        "prefix": "bj_groupAddGroupDest"
    },
    "bj_groupRemoveGroupDest": {
        "body": "bj_groupRemoveGroupDest",
        "description": "null",
        "prefix": "bj_groupRemoveGroupDest"
    },
    "bj_groupRandomConsidered": {
        "body": "bj_groupRandomConsidered",
        "description": "0",
        "prefix": "bj_groupRandomConsidered"
    },
    "bj_groupRandomCurrentPick": {
        "body": "bj_groupRandomCurrentPick",
        "description": "null",
        "prefix": "bj_groupRandomCurrentPick"
    },
    "bj_groupLastCreatedDest": {
        "body": "bj_groupLastCreatedDest",
        "description": "null",
        "prefix": "bj_groupLastCreatedDest"
    },
    "bj_randomSubGroupGroup": {
        "body": "bj_randomSubGroupGroup",
        "description": "null",
        "prefix": "bj_randomSubGroupGroup"
    },
    "bj_randomSubGroupWant": {
        "body": "bj_randomSubGroupWant",
        "description": "0",
        "prefix": "bj_randomSubGroupWant"
    },
    "bj_randomSubGroupTotal": {
        "body": "bj_randomSubGroupTotal",
        "description": "0",
        "prefix": "bj_randomSubGroupTotal"
    },
    "bj_randomSubGroupChance": {
        "body": "bj_randomSubGroupChance",
        "description": "0",
        "prefix": "bj_randomSubGroupChance"
    },
    "bj_destRandomConsidered": {
        "body": "bj_destRandomConsidered",
        "description": "0",
        "prefix": "bj_destRandomConsidered"
    },
    "bj_destRandomCurrentPick": {
        "body": "bj_destRandomCurrentPick",
        "description": "null",
        "prefix": "bj_destRandomCurrentPick"
    },
    "bj_elevatorWallBlocker": {
        "body": "bj_elevatorWallBlocker",
        "description": "null",
        "prefix": "bj_elevatorWallBlocker"
    },
    "bj_elevatorNeighbor": {
        "body": "bj_elevatorNeighbor",
        "description": "null",
        "prefix": "bj_elevatorNeighbor"
    },
    "bj_itemRandomConsidered": {
        "body": "bj_itemRandomConsidered",
        "description": "0",
        "prefix": "bj_itemRandomConsidered"
    },
    "bj_itemRandomCurrentPick": {
        "body": "bj_itemRandomCurrentPick",
        "description": "null",
        "prefix": "bj_itemRandomCurrentPick"
    },
    "bj_forceRandomConsidered": {
        "body": "bj_forceRandomConsidered",
        "description": "0",
        "prefix": "bj_forceRandomConsidered"
    },
    "bj_forceRandomCurrentPick": {
        "body": "bj_forceRandomCurrentPick",
        "description": "null",
        "prefix": "bj_forceRandomCurrentPick"
    },
    "bj_makeUnitRescuableUnit": {
        "body": "bj_makeUnitRescuableUnit",
        "description": "null",
        "prefix": "bj_makeUnitRescuableUnit"
    },
    "bj_makeUnitRescuableFlag": {
        "body": "bj_makeUnitRescuableFlag",
        "description": "true",
        "prefix": "bj_makeUnitRescuableFlag"
    },
    "bj_pauseAllUnitsFlag": {
        "body": "bj_pauseAllUnitsFlag",
        "description": "true",
        "prefix": "bj_pauseAllUnitsFlag"
    },
    "bj_enumDestructableCenter": {
        "body": "bj_enumDestructableCenter",
        "description": "null",
        "prefix": "bj_enumDestructableCenter"
    },
    "bj_enumDestructableRadius": {
        "body": "bj_enumDestructableRadius",
        "description": "0",
        "prefix": "bj_enumDestructableRadius"
    },
    "bj_setPlayerTargetColor": {
        "body": "bj_setPlayerTargetColor",
        "description": "null",
        "prefix": "bj_setPlayerTargetColor"
    },
    "bj_isUnitGroupDeadResult": {
        "body": "bj_isUnitGroupDeadResult",
        "description": "true",
        "prefix": "bj_isUnitGroupDeadResult"
    },
    "bj_isUnitGroupEmptyResult": {
        "body": "bj_isUnitGroupEmptyResult",
        "description": "true",
        "prefix": "bj_isUnitGroupEmptyResult"
    },
    "bj_isUnitGroupInRectResult": {
        "body": "bj_isUnitGroupInRectResult",
        "description": "true",
        "prefix": "bj_isUnitGroupInRectResult"
    },
    "bj_isUnitGroupInRectRect": {
        "body": "bj_isUnitGroupInRectRect",
        "description": "null",
        "prefix": "bj_isUnitGroupInRectRect"
    },
    "bj_changeLevelShowScores": {
        "body": "bj_changeLevelShowScores",
        "description": "false",
        "prefix": "bj_changeLevelShowScores"
    },
    "bj_changeLevelMapName": {
        "body": "bj_changeLevelMapName",
        "description": "null",
        "prefix": "bj_changeLevelMapName"
    },
    "bj_suspendDecayFleshGroup": {
        "body": "bj_suspendDecayFleshGroup",
        "description": "CreateGroup()",
        "prefix": "bj_suspendDecayFleshGroup"
    },
    "bj_suspendDecayBoneGroup": {
        "body": "bj_suspendDecayBoneGroup",
        "description": "CreateGroup()",
        "prefix": "bj_suspendDecayBoneGroup"
    },
    "bj_delayedSuspendDecayTimer": {
        "body": "bj_delayedSuspendDecayTimer",
        "description": "CreateTimer()",
        "prefix": "bj_delayedSuspendDecayTimer"
    },
    "bj_delayedSuspendDecayTrig": {
        "body": "bj_delayedSuspendDecayTrig",
        "description": "null",
        "prefix": "bj_delayedSuspendDecayTrig"
    },
    "bj_livingPlayerUnitsTypeId": {
        "body": "bj_livingPlayerUnitsTypeId",
        "description": "0",
        "prefix": "bj_livingPlayerUnitsTypeId"
    },
    "bj_lastDyingWidget": {
        "body": "bj_lastDyingWidget",
        "description": "null",
        "prefix": "bj_lastDyingWidget"
    },
    "bj_randDistCount": {
        "body": "bj_randDistCount",
        "description": "0",
        "prefix": "bj_randDistCount"
    },
    "bj_randDistID": {
        "body": "bj_randDistID",
        "description": "array",
        "prefix": "bj_randDistID"
    },
    "bj_randDistChance": {
        "body": "bj_randDistChance",
        "description": "array",
        "prefix": "bj_randDistChance"
    },
    "bj_lastCreatedUnit": {
        "body": "bj_lastCreatedUnit",
        "description": "null",
        "prefix": "bj_lastCreatedUnit"
    },
    "bj_lastCreatedItem": {
        "body": "bj_lastCreatedItem",
        "description": "null",
        "prefix": "bj_lastCreatedItem"
    },
    "bj_lastRemovedItem": {
        "body": "bj_lastRemovedItem",
        "description": "null",
        "prefix": "bj_lastRemovedItem"
    },
    "bj_lastHauntedGoldMine": {
        "body": "bj_lastHauntedGoldMine",
        "description": "null",
        "prefix": "bj_lastHauntedGoldMine"
    },
    "bj_lastCreatedDestructable": {
        "body": "bj_lastCreatedDestructable",
        "description": "null",
        "prefix": "bj_lastCreatedDestructable"
    },
    "bj_lastCreatedGroup": {
        "body": "bj_lastCreatedGroup",
        "description": "CreateGroup()",
        "prefix": "bj_lastCreatedGroup"
    },
    "bj_lastCreatedFogModifier": {
        "body": "bj_lastCreatedFogModifier",
        "description": "null",
        "prefix": "bj_lastCreatedFogModifier"
    },
    "bj_lastCreatedEffect": {
        "body": "bj_lastCreatedEffect",
        "description": "null",
        "prefix": "bj_lastCreatedEffect"
    },
    "bj_lastCreatedWeatherEffect": {
        "body": "bj_lastCreatedWeatherEffect",
        "description": "null",
        "prefix": "bj_lastCreatedWeatherEffect"
    },
    "bj_lastCreatedTerrainDeformation": {
        "body": "bj_lastCreatedTerrainDeformation",
        "description": "null",
        "prefix": "bj_lastCreatedTerrainDeformation"
    },
    "bj_lastCreatedQuest": {
        "body": "bj_lastCreatedQuest",
        "description": "null",
        "prefix": "bj_lastCreatedQuest"
    },
    "bj_lastCreatedQuestItem": {
        "body": "bj_lastCreatedQuestItem",
        "description": "null",
        "prefix": "bj_lastCreatedQuestItem"
    },
    "bj_lastCreatedDefeatCondition": {
        "body": "bj_lastCreatedDefeatCondition",
        "description": "null",
        "prefix": "bj_lastCreatedDefeatCondition"
    },
    "bj_lastStartedTimer": {
        "body": "bj_lastStartedTimer",
        "description": "CreateTimer()",
        "prefix": "bj_lastStartedTimer"
    },
    "bj_lastCreatedTimerDialog": {
        "body": "bj_lastCreatedTimerDialog",
        "description": "null",
        "prefix": "bj_lastCreatedTimerDialog"
    },
    "bj_lastCreatedLeaderboard": {
        "body": "bj_lastCreatedLeaderboard",
        "description": "null",
        "prefix": "bj_lastCreatedLeaderboard"
    },
    "bj_lastCreatedMultiboard": {
        "body": "bj_lastCreatedMultiboard",
        "description": "null",
        "prefix": "bj_lastCreatedMultiboard"
    },
    "bj_lastPlayedSound": {
        "body": "bj_lastPlayedSound",
        "description": "null",
        "prefix": "bj_lastPlayedSound"
    },
    "bj_lastPlayedMusic": {
        "body": "bj_lastPlayedMusic",
        "description": """",
        "prefix": "bj_lastPlayedMusic"
    },
    "bj_lastTransmissionDuration": {
        "body": "bj_lastTransmissionDuration",
        "description": "0",
        "prefix": "bj_lastTransmissionDuration"
    },
    "bj_lastCreatedGameCache": {
        "body": "bj_lastCreatedGameCache",
        "description": "null",
        "prefix": "bj_lastCreatedGameCache"
    },
    "bj_lastCreatedHashtable": {
        "body": "bj_lastCreatedHashtable",
        "description": "null",
        "prefix": "bj_lastCreatedHashtable"
    },
    "bj_lastLoadedUnit": {
        "body": "bj_lastLoadedUnit",
        "description": "null",
        "prefix": "bj_lastLoadedUnit"
    },
    "bj_lastCreatedButton": {
        "body": "bj_lastCreatedButton",
        "description": "null",
        "prefix": "bj_lastCreatedButton"
    },
    "bj_lastReplacedUnit": {
        "body": "bj_lastReplacedUnit",
        "description": "null",
        "prefix": "bj_lastReplacedUnit"
    },
    "bj_lastCreatedTextTag": {
        "body": "bj_lastCreatedTextTag",
        "description": "null",
        "prefix": "bj_lastCreatedTextTag"
    },
    "bj_lastCreatedLightning": {
        "body": "bj_lastCreatedLightning",
        "description": "null",
        "prefix": "bj_lastCreatedLightning"
    },
    "bj_lastCreatedImage": {
        "body": "bj_lastCreatedImage",
        "description": "null",
        "prefix": "bj_lastCreatedImage"
    },
    "bj_lastCreatedUbersplat": {
        "body": "bj_lastCreatedUbersplat",
        "description": "null",
        "prefix": "bj_lastCreatedUbersplat"
    },
    "filterIssueHauntOrderAtLocBJ": {
        "body": "filterIssueHauntOrderAtLocBJ",
        "description": "null",
        "prefix": "filterIssueHauntOrderAtLocBJ"
    },
    "filterEnumDestructablesInCircleBJ": {
        "body": "filterEnumDestructablesInCircleBJ",
        "description": "null",
        "prefix": "filterEnumDestructablesInCircleBJ"
    },
    "filterGetUnitsInRectOfPlayer": {
        "body": "filterGetUnitsInRectOfPlayer",
        "description": "null",
        "prefix": "filterGetUnitsInRectOfPlayer"
    },
    "filterGetUnitsOfTypeIdAll": {
        "body": "filterGetUnitsOfTypeIdAll",
        "description": "null",
        "prefix": "filterGetUnitsOfTypeIdAll"
    },
    "filterGetUnitsOfPlayerAndTypeId": {
        "body": "filterGetUnitsOfPlayerAndTypeId",
        "description": "null",
        "prefix": "filterGetUnitsOfPlayerAndTypeId"
    },
    "filterMeleeTrainedUnitIsHeroBJ": {
        "body": "filterMeleeTrainedUnitIsHeroBJ",
        "description": "null",
        "prefix": "filterMeleeTrainedUnitIsHeroBJ"
    },
    "filterLivingPlayerUnitsOfTypeId": {
        "body": "filterLivingPlayerUnitsOfTypeId",
        "description": "null",
        "prefix": "filterLivingPlayerUnitsOfTypeId"
    },
    "bj_wantDestroyGroup": {
        "body": "bj_wantDestroyGroup",
        "description": "false",
        "prefix": "bj_wantDestroyGroup"
    },
    "bj_lastInstObjFuncSuccessful": {
        "body": "bj_lastInstObjFuncSuccessful",
        "description": "true",
        "prefix": "bj_lastInstObjFuncSuccessful"
    },
    "BJDebugMsg": {
        "body": "BJDebugMsg(${1:msg})",
        "description": "BJDebugMsg (string msg)",
        "prefix": "BJDebugMsg"
    },
    "RMinBJ": {
        "body": "RMinBJ(${1:a}, ${2:b})",
        "description": "RMinBJ (real a, real b)",
        "prefix": "RMinBJ"
    },
    "RMaxBJ": {
        "body": "RMaxBJ(${1:a}, ${2:b})",
        "description": "RMaxBJ (real a, real b)",
        "prefix": "RMaxBJ"
    },
    "RAbsBJ": {
        "body": "RAbsBJ(${1:a})",
        "description": "RAbsBJ (real a)",
        "prefix": "RAbsBJ"
    },
    "RSignBJ": {
        "body": "RSignBJ(${1:a})",
        "description": "RSignBJ (real a)",
        "prefix": "RSignBJ"
    },
    "IMinBJ": {
        "body": "IMinBJ(${1:a}, ${2:b})",
        "description": "IMinBJ (integer a, integer b)",
        "prefix": "IMinBJ"
    },
    "IMaxBJ": {
        "body": "IMaxBJ(${1:a}, ${2:b})",
        "description": "IMaxBJ (integer a, integer b)",
        "prefix": "IMaxBJ"
    },
    "IAbsBJ": {
        "body": "IAbsBJ(${1:a})",
        "description": "IAbsBJ (integer a)",
        "prefix": "IAbsBJ"
    },
    "ISignBJ": {
        "body": "ISignBJ(${1:a})",
        "description": "ISignBJ (integer a)",
        "prefix": "ISignBJ"
    },
    "SinBJ": {
        "body": "SinBJ(${1:degrees})",
        "description": "SinBJ (real degrees)",
        "prefix": "SinBJ"
    },
    "CosBJ": {
        "body": "CosBJ(${1:degrees})",
        "description": "CosBJ (real degrees)",
        "prefix": "CosBJ"
    },
    "TanBJ": {
        "body": "TanBJ(${1:degrees})",
        "description": "TanBJ (real degrees)",
        "prefix": "TanBJ"
    },
    "AsinBJ": {
        "body": "AsinBJ(${1:degrees})",
        "description": "AsinBJ (real degrees)",
        "prefix": "AsinBJ"
    },
    "AcosBJ": {
        "body": "AcosBJ(${1:degrees})",
        "description": "AcosBJ (real degrees)",
        "prefix": "AcosBJ"
    },
    "AtanBJ": {
        "body": "AtanBJ(${1:degrees})",
        "description": "AtanBJ (real degrees)",
        "prefix": "AtanBJ"
    },
    "Atan2BJ": {
        "body": "Atan2BJ(${1:y}, ${2:x})",
        "description": "Atan2BJ (real y, real x)",
        "prefix": "Atan2BJ"
    },
    "AngleBetweenPoints": {
        "body": "AngleBetweenPoints(${1:locA}, ${2:locB})",
        "description": "AngleBetweenPoints (location locA, location locB)",
        "prefix": "AngleBetweenPoints"
    },
    "DistanceBetweenPoints": {
        "body": "DistanceBetweenPoints(${1:locA}, ${2:locB})",
        "description": "DistanceBetweenPoints (location locA, location locB)",
        "prefix": "DistanceBetweenPoints"
    },
    "PolarProjectionBJ": {
        "body": "PolarProjectionBJ(${1:source}, ${2:dist}, ${3:angle})",
        "description": "PolarProjectionBJ (location source, real dist, real angle)",
        "prefix": "PolarProjectionBJ"
    },
    "GetRandomDirectionDeg": {
        "body": "GetRandomDirectionDeg()",
        "description": "GetRandomDirectionDeg ()",
        "prefix": "GetRandomDirectionDeg"
    },
    "GetRandomPercentageBJ": {
        "body": "GetRandomPercentageBJ()",
        "description": "GetRandomPercentageBJ ()",
        "prefix": "GetRandomPercentageBJ"
    },
    "GetRandomLocInRect": {
        "body": "GetRandomLocInRect(${1:whichRect})",
        "description": "GetRandomLocInRect (rect whichRect)",
        "prefix": "GetRandomLocInRect"
    },
    "ModuloInteger": {
        "body": "ModuloInteger(${1:dividend}, ${2:divisor})",
        "description": "ModuloInteger (integer dividend, integer divisor)",
        "prefix": "ModuloInteger"
    },
    "ModuloReal": {
        "body": "ModuloReal(${1:dividend}, ${2:divisor})",
        "description": "ModuloReal (real dividend, real divisor)",
        "prefix": "ModuloReal"
    },
    "OffsetLocation": {
        "body": "OffsetLocation(${1:loc}, ${2:dx}, ${3:dy})",
        "description": "OffsetLocation (location loc, real dx, real dy)",
        "prefix": "OffsetLocation"
    },
    "OffsetRectBJ": {
        "body": "OffsetRectBJ(${1:r}, ${2:dx}, ${3:dy})",
        "description": "OffsetRectBJ (rect r, real dx, real dy)",
        "prefix": "OffsetRectBJ"
    },
    "RectFromCenterSizeBJ": {
        "body": "RectFromCenterSizeBJ(${1:center}, ${2:width}, ${3:height})",
        "description": "RectFromCenterSizeBJ (location center, real width, real height)",
        "prefix": "RectFromCenterSizeBJ"
    },
    "RectContainsCoords": {
        "body": "RectContainsCoords(${1:r}, ${2:x}, ${3:y})",
        "description": "RectContainsCoords (rect r, real x, real y)",
        "prefix": "RectContainsCoords"
    },
    "RectContainsLoc": {
        "body": "RectContainsLoc(${1:r}, ${2:loc})",
        "description": "RectContainsLoc (rect r, location loc)",
        "prefix": "RectContainsLoc"
    },
    "RectContainsUnit": {
        "body": "RectContainsUnit(${1:r}, ${2:whichUnit})",
        "description": "RectContainsUnit (rect r, unit whichUnit)",
        "prefix": "RectContainsUnit"
    },
    "RectContainsItem": {
        "body": "RectContainsItem(${1:whichItem}, ${2:r})",
        "description": "RectContainsItem (item whichItem, rect r)",
        "prefix": "RectContainsItem"
    },
    "ConditionalTriggerExecute": {
        "body": "ConditionalTriggerExecute(${1:trig})",
        "description": "ConditionalTriggerExecute (trigger trig)",
        "prefix": "ConditionalTriggerExecute"
    },
    "TriggerExecuteBJ": {
        "body": "TriggerExecuteBJ(${1:trig}, ${2:checkConditions})",
        "description": "TriggerExecuteBJ (trigger trig, boolean checkConditions)",
        "prefix": "TriggerExecuteBJ"
    },
    "PostTriggerExecuteBJ": {
        "body": "PostTriggerExecuteBJ(${1:trig}, ${2:checkConditions})",
        "description": "PostTriggerExecuteBJ (trigger trig, boolean checkConditions)",
        "prefix": "PostTriggerExecuteBJ"
    },
    "QueuedTriggerCheck": {
        "body": "QueuedTriggerCheck()",
        "description": "QueuedTriggerCheck ()",
        "prefix": "QueuedTriggerCheck"
    },
    "QueuedTriggerGetIndex": {
        "body": "QueuedTriggerGetIndex(${1:trig})",
        "description": "QueuedTriggerGetIndex (trigger trig)",
        "prefix": "QueuedTriggerGetIndex"
    },
    "QueuedTriggerRemoveByIndex": {
        "body": "QueuedTriggerRemoveByIndex(${1:trigIndex})",
        "description": "QueuedTriggerRemoveByIndex (integer trigIndex)",
        "prefix": "QueuedTriggerRemoveByIndex"
    },
    "QueuedTriggerAttemptExec": {
        "body": "QueuedTriggerAttemptExec()",
        "description": "QueuedTriggerAttemptExec ()",
        "prefix": "QueuedTriggerAttemptExec"
    },
    "QueuedTriggerAddBJ": {
        "body": "QueuedTriggerAddBJ(${1:trig}, ${2:checkConditions})",
        "description": "QueuedTriggerAddBJ (trigger trig, boolean checkConditions)",
        "prefix": "QueuedTriggerAddBJ"
    },
    "QueuedTriggerRemoveBJ": {
        "body": "QueuedTriggerRemoveBJ(${1:trig})",
        "description": "QueuedTriggerRemoveBJ (trigger trig)",
        "prefix": "QueuedTriggerRemoveBJ"
    },
    "QueuedTriggerDoneBJ": {
        "body": "QueuedTriggerDoneBJ()",
        "description": "QueuedTriggerDoneBJ ()",
        "prefix": "QueuedTriggerDoneBJ"
    },
    "QueuedTriggerClearBJ": {
        "body": "QueuedTriggerClearBJ()",
        "description": "QueuedTriggerClearBJ ()",
        "prefix": "QueuedTriggerClearBJ"
    },
    "QueuedTriggerClearInactiveBJ": {
        "body": "QueuedTriggerClearInactiveBJ()",
        "description": "QueuedTriggerClearInactiveBJ ()",
        "prefix": "QueuedTriggerClearInactiveBJ"
    },
    "QueuedTriggerCountBJ": {
        "body": "QueuedTriggerCountBJ()",
        "description": "QueuedTriggerCountBJ ()",
        "prefix": "QueuedTriggerCountBJ"
    },
    "IsTriggerQueueEmptyBJ": {
        "body": "IsTriggerQueueEmptyBJ()",
        "description": "IsTriggerQueueEmptyBJ ()",
        "prefix": "IsTriggerQueueEmptyBJ"
    },
    "IsTriggerQueuedBJ": {
        "body": "IsTriggerQueuedBJ(${1:trig})",
        "description": "IsTriggerQueuedBJ (trigger trig)",
        "prefix": "IsTriggerQueuedBJ"
    },
    "GetForLoopIndexA": {
        "body": "GetForLoopIndexA()",
        "description": "GetForLoopIndexA ()",
        "prefix": "GetForLoopIndexA"
    },
    "SetForLoopIndexA": {
        "body": "SetForLoopIndexA(${1:newIndex})",
        "description": "SetForLoopIndexA (integer newIndex)",
        "prefix": "SetForLoopIndexA"
    },
    "GetForLoopIndexB": {
        "body": "GetForLoopIndexB()",
        "description": "GetForLoopIndexB ()",
        "prefix": "GetForLoopIndexB"
    },
    "SetForLoopIndexB": {
        "body": "SetForLoopIndexB(${1:newIndex})",
        "description": "SetForLoopIndexB (integer newIndex)",
        "prefix": "SetForLoopIndexB"
    },
    "PolledWait": {
        "body": "PolledWait(${1:duration})",
        "description": "PolledWait (real duration)",
        "prefix": "PolledWait"
    },
    "IntegerTertiaryOp": {
        "body": "IntegerTertiaryOp(${1:flag}, ${2:valueA}, ${3:valueB})",
        "description": "IntegerTertiaryOp (boolean flag, integer valueA, integer valueB)",
        "prefix": "IntegerTertiaryOp"
    },
    "DoNothing": {
        "body": "DoNothing()",
        "description": "DoNothing ()",
        "prefix": "DoNothing"
    },
    "CommentString": {
        "body": "CommentString(${1:commentString})",
        "description": "CommentString (string commentString)",
        "prefix": "CommentString"
    },
    "StringIdentity": {
        "body": "StringIdentity(${1:theString})",
        "description": "StringIdentity (string theString)",
        "prefix": "StringIdentity"
    },
    "GetBooleanAnd": {
        "body": "GetBooleanAnd(${1:valueA}, ${2:valueB})",
        "description": "GetBooleanAnd (boolean valueA, boolean valueB)",
        "prefix": "GetBooleanAnd"
    },
    "GetBooleanOr": {
        "body": "GetBooleanOr(${1:valueA}, ${2:valueB})",
        "description": "GetBooleanOr (boolean valueA, boolean valueB)",
        "prefix": "GetBooleanOr"
    },
    "PercentToInt": {
        "body": "PercentToInt(${1:percentage}, ${2:max})",
        "description": "PercentToInt (real percentage, integer max)",
        "prefix": "PercentToInt"
    },
    "PercentTo255": {
        "body": "PercentTo255(${1:percentage})",
        "description": "PercentTo255 (real percentage)",
        "prefix": "PercentTo255"
    },
    "GetTimeOfDay": {
        "body": "GetTimeOfDay()",
        "description": "GetTimeOfDay ()",
        "prefix": "GetTimeOfDay"
    },
    "SetTimeOfDay": {
        "body": "SetTimeOfDay(${1:whatTime})",
        "description": "SetTimeOfDay (real whatTime)",
        "prefix": "SetTimeOfDay"
    },
    "SetTimeOfDayScalePercentBJ": {
        "body": "SetTimeOfDayScalePercentBJ(${1:scalePercent})",
        "description": "SetTimeOfDayScalePercentBJ (real scalePercent)",
        "prefix": "SetTimeOfDayScalePercentBJ"
    },
    "GetTimeOfDayScalePercentBJ": {
        "body": "GetTimeOfDayScalePercentBJ()",
        "description": "GetTimeOfDayScalePercentBJ ()",
        "prefix": "GetTimeOfDayScalePercentBJ"
    },
    "PlaySound": {
        "body": "PlaySound(${1:soundName})",
        "description": "PlaySound (string soundName)",
        "prefix": "PlaySound"
    },
    "CompareLocationsBJ": {
        "body": "CompareLocationsBJ(${1:A}, ${2:B})",
        "description": "CompareLocationsBJ (location A, location B)",
        "prefix": "CompareLocationsBJ"
    },
    "CompareRectsBJ": {
        "body": "CompareRectsBJ(${1:A}, ${2:B})",
        "description": "CompareRectsBJ (rect A, rect B)",
        "prefix": "CompareRectsBJ"
    },
    "GetRectFromCircleBJ": {
        "body": "GetRectFromCircleBJ(${1:center}, ${2:radius})",
        "description": "GetRectFromCircleBJ (location center, real radius)",
        "prefix": "GetRectFromCircleBJ"
    },
    "GetCurrentCameraSetup": {
        "body": "GetCurrentCameraSetup()",
        "description": "GetCurrentCameraSetup ()",
        "prefix": "GetCurrentCameraSetup"
    },
    "CameraSetupApplyForPlayer": {
        "body": "CameraSetupApplyForPlayer(${1:doPan}, ${2:whichSetup}, ${3:whichPlayer}, ${4:duration})",
        "description": "CameraSetupApplyForPlayer (boolean doPan, camerasetup whichSetup, player whichPlayer, real duration)",
        "prefix": "CameraSetupApplyForPlayer"
    },
    "CameraSetupGetFieldSwap": {
        "body": "CameraSetupGetFieldSwap(${1:whichField}, ${2:whichSetup})",
        "description": "CameraSetupGetFieldSwap (camerafield whichField, camerasetup whichSetup)",
        "prefix": "CameraSetupGetFieldSwap"
    },
    "SetCameraFieldForPlayer": {
        "body": "SetCameraFieldForPlayer(${1:whichPlayer}, ${2:whichField}, ${3:value}, ${4:duration})",
        "description": "SetCameraFieldForPlayer (player whichPlayer, camerafield whichField, real value, real duration)",
        "prefix": "SetCameraFieldForPlayer"
    },
    "SetCameraTargetControllerNoZForPlayer": {
        "body": "SetCameraTargetControllerNoZForPlayer(${1:whichPlayer}, ${2:whichUnit}, ${3:xoffset}, ${4:yoffset}, ${5:inheritOrientation})",
        "description": "SetCameraTargetControllerNoZForPlayer (player whichPlayer, unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation)",
        "prefix": "SetCameraTargetControllerNoZForPlayer"
    },
    "SetCameraPositionForPlayer": {
        "body": "SetCameraPositionForPlayer(${1:whichPlayer}, ${2:x}, ${3:y})",
        "description": "SetCameraPositionForPlayer (player whichPlayer, real x, real y)",
        "prefix": "SetCameraPositionForPlayer"
    },
    "SetCameraPositionLocForPlayer": {
        "body": "SetCameraPositionLocForPlayer(${1:whichPlayer}, ${2:loc})",
        "description": "SetCameraPositionLocForPlayer (player whichPlayer, location loc)",
        "prefix": "SetCameraPositionLocForPlayer"
    },
    "RotateCameraAroundLocBJ": {
        "body": "RotateCameraAroundLocBJ(${1:degrees}, ${2:loc}, ${3:whichPlayer}, ${4:duration})",
        "description": "RotateCameraAroundLocBJ (real degrees, location loc, player whichPlayer, real duration)",
        "prefix": "RotateCameraAroundLocBJ"
    },
    "PanCameraToForPlayer": {
        "body": "PanCameraToForPlayer(${1:whichPlayer}, ${2:x}, ${3:y})",
        "description": "PanCameraToForPlayer (player whichPlayer, real x, real y)",
        "prefix": "PanCameraToForPlayer"
    },
    "PanCameraToLocForPlayer": {
        "body": "PanCameraToLocForPlayer(${1:whichPlayer}, ${2:loc})",
        "description": "PanCameraToLocForPlayer (player whichPlayer, location loc)",
        "prefix": "PanCameraToLocForPlayer"
    },
    "PanCameraToTimedForPlayer": {
        "body": "PanCameraToTimedForPlayer(${1:whichPlayer}, ${2:x}, ${3:y}, ${4:duration})",
        "description": "PanCameraToTimedForPlayer (player whichPlayer, real x, real y, real duration)",
        "prefix": "PanCameraToTimedForPlayer"
    },
    "PanCameraToTimedLocForPlayer": {
        "body": "PanCameraToTimedLocForPlayer(${1:whichPlayer}, ${2:loc}, ${3:duration})",
        "description": "PanCameraToTimedLocForPlayer (player whichPlayer, location loc, real duration)",
        "prefix": "PanCameraToTimedLocForPlayer"
    },
    "PanCameraToTimedLocWithZForPlayer": {
        "body": "PanCameraToTimedLocWithZForPlayer(${1:whichPlayer}, ${2:loc}, ${3:zOffset}, ${4:duration})",
        "description": "PanCameraToTimedLocWithZForPlayer (player whichPlayer, location loc, real zOffset, real duration)",
        "prefix": "PanCameraToTimedLocWithZForPlayer"
    },
    "SmartCameraPanBJ": {
        "body": "SmartCameraPanBJ(${1:whichPlayer}, ${2:loc}, ${3:duration})",
        "description": "SmartCameraPanBJ (player whichPlayer, location loc, real duration)",
        "prefix": "SmartCameraPanBJ"
    },
    "SetCinematicCameraForPlayer": {
        "body": "SetCinematicCameraForPlayer(${1:whichPlayer}, ${2:cameraModelFile})",
        "description": "SetCinematicCameraForPlayer (player whichPlayer, string cameraModelFile)",
        "prefix": "SetCinematicCameraForPlayer"
    },
    "ResetToGameCameraForPlayer": {
        "body": "ResetToGameCameraForPlayer(${1:whichPlayer}, ${2:duration})",
        "description": "ResetToGameCameraForPlayer (player whichPlayer, real duration)",
        "prefix": "ResetToGameCameraForPlayer"
    },
    "CameraSetSourceNoiseForPlayer": {
        "body": "CameraSetSourceNoiseForPlayer(${1:whichPlayer}, ${2:magnitude}, ${3:velocity})",
        "description": "CameraSetSourceNoiseForPlayer (player whichPlayer, real magnitude, real velocity)",
        "prefix": "CameraSetSourceNoiseForPlayer"
    },
    "CameraSetTargetNoiseForPlayer": {
        "body": "CameraSetTargetNoiseForPlayer(${1:whichPlayer}, ${2:magnitude}, ${3:velocity})",
        "description": "CameraSetTargetNoiseForPlayer (player whichPlayer, real magnitude, real velocity)",
        "prefix": "CameraSetTargetNoiseForPlayer"
    },
    "CameraSetEQNoiseForPlayer": {
        "body": "CameraSetEQNoiseForPlayer(${1:whichPlayer}, ${2:magnitude})",
        "description": "CameraSetEQNoiseForPlayer (player whichPlayer, real magnitude)",
        "prefix": "CameraSetEQNoiseForPlayer"
    },
    "CameraClearNoiseForPlayer": {
        "body": "CameraClearNoiseForPlayer(${1:whichPlayer})",
        "description": "CameraClearNoiseForPlayer (player whichPlayer)",
        "prefix": "CameraClearNoiseForPlayer"
    },
    "GetCurrentCameraBoundsMapRectBJ": {
        "body": "GetCurrentCameraBoundsMapRectBJ()",
        "description": "GetCurrentCameraBoundsMapRectBJ ()",
        "prefix": "GetCurrentCameraBoundsMapRectBJ"
    },
    "GetCameraBoundsMapRect": {
        "body": "GetCameraBoundsMapRect()",
        "description": "GetCameraBoundsMapRect ()",
        "prefix": "GetCameraBoundsMapRect"
    },
    "GetPlayableMapRect": {
        "body": "GetPlayableMapRect()",
        "description": "GetPlayableMapRect ()",
        "prefix": "GetPlayableMapRect"
    },
    "GetEntireMapRect": {
        "body": "GetEntireMapRect()",
        "description": "GetEntireMapRect ()",
        "prefix": "GetEntireMapRect"
    },
    "SetCameraBoundsToRect": {
        "body": "SetCameraBoundsToRect(${1:r})",
        "description": "SetCameraBoundsToRect (rect r)",
        "prefix": "SetCameraBoundsToRect"
    },
    "SetCameraBoundsToRectForPlayerBJ": {
        "body": "SetCameraBoundsToRectForPlayerBJ(${1:whichPlayer}, ${2:r})",
        "description": "SetCameraBoundsToRectForPlayerBJ (player whichPlayer, rect r)",
        "prefix": "SetCameraBoundsToRectForPlayerBJ"
    },
    "AdjustCameraBoundsBJ": {
        "body": "AdjustCameraBoundsBJ(${1:adjustMethod}, ${2:dxWest}, ${3:dxEast}, ${4:dyNorth}, ${5:dySouth})",
        "description": "AdjustCameraBoundsBJ (integer adjustMethod, real dxWest, real dxEast, real dyNorth, real dySouth)",
        "prefix": "AdjustCameraBoundsBJ"
    },
    "AdjustCameraBoundsForPlayerBJ": {
        "body": "AdjustCameraBoundsForPlayerBJ(${1:adjustMethod}, ${2:whichPlayer}, ${3:dxWest}, ${4:dxEast}, ${5:dyNorth}, ${6:dySouth})",
        "description": "AdjustCameraBoundsForPlayerBJ (integer adjustMethod, player whichPlayer, real dxWest, real dxEast, real dyNorth, real dySouth)",
        "prefix": "AdjustCameraBoundsForPlayerBJ"
    },
    "SetCameraQuickPositionForPlayer": {
        "body": "SetCameraQuickPositionForPlayer(${1:whichPlayer}, ${2:x}, ${3:y})",
        "description": "SetCameraQuickPositionForPlayer (player whichPlayer, real x, real y)",
        "prefix": "SetCameraQuickPositionForPlayer"
    },
    "SetCameraQuickPositionLocForPlayer": {
        "body": "SetCameraQuickPositionLocForPlayer(${1:whichPlayer}, ${2:loc})",
        "description": "SetCameraQuickPositionLocForPlayer (player whichPlayer, location loc)",
        "prefix": "SetCameraQuickPositionLocForPlayer"
    },
    "SetCameraQuickPositionLoc": {
        "body": "SetCameraQuickPositionLoc(${1:loc})",
        "description": "SetCameraQuickPositionLoc (location loc)",
        "prefix": "SetCameraQuickPositionLoc"
    },
    "StopCameraForPlayerBJ": {
        "body": "StopCameraForPlayerBJ(${1:whichPlayer})",
        "description": "StopCameraForPlayerBJ (player whichPlayer)",
        "prefix": "StopCameraForPlayerBJ"
    },
    "SetCameraOrientControllerForPlayerBJ": {
        "body": "SetCameraOrientControllerForPlayerBJ(${1:whichPlayer}, ${2:whichUnit}, ${3:xoffset}, ${4:yoffset})",
        "description": "SetCameraOrientControllerForPlayerBJ (player whichPlayer, unit whichUnit, real xoffset, real yoffset)",
        "prefix": "SetCameraOrientControllerForPlayerBJ"
    },
    "CameraSetSmoothingFactorBJ": {
        "body": "CameraSetSmoothingFactorBJ(${1:factor})",
        "description": "CameraSetSmoothingFactorBJ (real factor)",
        "prefix": "CameraSetSmoothingFactorBJ"
    },
    "CameraResetSmoothingFactorBJ": {
        "body": "CameraResetSmoothingFactorBJ()",
        "description": "CameraResetSmoothingFactorBJ ()",
        "prefix": "CameraResetSmoothingFactorBJ"
    },
    "DisplayTextToForce": {
        "body": "DisplayTextToForce(${1:toForce}, ${2:message})",
        "description": "DisplayTextToForce (force toForce, string message)",
        "prefix": "DisplayTextToForce"
    },
    "DisplayTimedTextToForce": {
        "body": "DisplayTimedTextToForce(${1:toForce}, ${2:duration}, ${3:message})",
        "description": "DisplayTimedTextToForce (force toForce, real duration, string message)",
        "prefix": "DisplayTimedTextToForce"
    },
    "ClearTextMessagesBJ": {
        "body": "ClearTextMessagesBJ(${1:toForce})",
        "description": "ClearTextMessagesBJ (force toForce)",
        "prefix": "ClearTextMessagesBJ"
    },
    "SubStringBJ": {
        "body": "SubStringBJ(${1:source}, ${2:start}, ${3:end})",
        "description": "SubStringBJ (string source, integer start, integer end)",
        "prefix": "SubStringBJ"
    },
    "GetHandleIdBJ": {
        "body": "GetHandleIdBJ(${1:h})",
        "description": "GetHandleIdBJ (handle h)",
        "prefix": "GetHandleIdBJ"
    },
    "StringHashBJ": {
        "body": "StringHashBJ(${1:s})",
        "description": "StringHashBJ (string s)",
        "prefix": "StringHashBJ"
    },
    "TriggerRegisterTimerEventPeriodic": {
        "body": "TriggerRegisterTimerEventPeriodic(${1:trig}, ${2:timeout})",
        "description": "TriggerRegisterTimerEventPeriodic (trigger trig, real timeout)",
        "prefix": "TriggerRegisterTimerEventPeriodic"
    },
    "TriggerRegisterTimerEventSingle": {
        "body": "TriggerRegisterTimerEventSingle(${1:trig}, ${2:timeout})",
        "description": "TriggerRegisterTimerEventSingle (trigger trig, real timeout)",
        "prefix": "TriggerRegisterTimerEventSingle"
    },
    "TriggerRegisterTimerExpireEventBJ": {
        "body": "TriggerRegisterTimerExpireEventBJ(${1:trig}, ${2:t})",
        "description": "TriggerRegisterTimerExpireEventBJ (trigger trig, timer t)",
        "prefix": "TriggerRegisterTimerExpireEventBJ"
    },
    "TriggerRegisterPlayerUnitEventSimple": {
        "body": "TriggerRegisterPlayerUnitEventSimple(${1:trig}, ${2:whichPlayer}, ${3:whichEvent})",
        "description": "TriggerRegisterPlayerUnitEventSimple (trigger trig, player whichPlayer, playerunitevent whichEvent)",
        "prefix": "TriggerRegisterPlayerUnitEventSimple"
    },
    "TriggerRegisterAnyUnitEventBJ": {
        "body": "TriggerRegisterAnyUnitEventBJ(${1:trig}, ${2:whichEvent})",
        "description": "TriggerRegisterAnyUnitEventBJ (trigger trig, playerunitevent whichEvent)",
        "prefix": "TriggerRegisterAnyUnitEventBJ"
    },
    "TriggerRegisterPlayerSelectionEventBJ": {
        "body": "TriggerRegisterPlayerSelectionEventBJ(${1:trig}, ${2:whichPlayer}, ${3:selected})",
        "description": "TriggerRegisterPlayerSelectionEventBJ (trigger trig, player whichPlayer, boolean selected)",
        "prefix": "TriggerRegisterPlayerSelectionEventBJ"
    },
    "TriggerRegisterPlayerKeyEventBJ": {
        "body": "TriggerRegisterPlayerKeyEventBJ(${1:trig}, ${2:whichPlayer}, ${3:keType}, ${4:keKey})",
        "description": "TriggerRegisterPlayerKeyEventBJ (trigger trig, player whichPlayer, integer keType, integer keKey)",
        "prefix": "TriggerRegisterPlayerKeyEventBJ"
    },
    "TriggerRegisterPlayerMouseEventBJ": {
        "body": "TriggerRegisterPlayerMouseEventBJ(${1:trig}, ${2:whichPlayer}, ${3:meType})",
        "description": "TriggerRegisterPlayerMouseEventBJ (trigger trig, player whichPlayer, integer meType)",
        "prefix": "TriggerRegisterPlayerMouseEventBJ"
    },
    "TriggerRegisterPlayerEventVictory": {
        "body": "TriggerRegisterPlayerEventVictory(${1:trig}, ${2:whichPlayer})",
        "description": "TriggerRegisterPlayerEventVictory (trigger trig, player whichPlayer)",
        "prefix": "TriggerRegisterPlayerEventVictory"
    },
    "TriggerRegisterPlayerEventDefeat": {
        "body": "TriggerRegisterPlayerEventDefeat(${1:trig}, ${2:whichPlayer})",
        "description": "TriggerRegisterPlayerEventDefeat (trigger trig, player whichPlayer)",
        "prefix": "TriggerRegisterPlayerEventDefeat"
    },
    "TriggerRegisterPlayerEventLeave": {
        "body": "TriggerRegisterPlayerEventLeave(${1:trig}, ${2:whichPlayer})",
        "description": "TriggerRegisterPlayerEventLeave (trigger trig, player whichPlayer)",
        "prefix": "TriggerRegisterPlayerEventLeave"
    },
    "TriggerRegisterPlayerEventAllianceChanged": {
        "body": "TriggerRegisterPlayerEventAllianceChanged(${1:trig}, ${2:whichPlayer})",
        "description": "TriggerRegisterPlayerEventAllianceChanged (trigger trig, player whichPlayer)",
        "prefix": "TriggerRegisterPlayerEventAllianceChanged"
    },
    "TriggerRegisterPlayerEventEndCinematic": {
        "body": "TriggerRegisterPlayerEventEndCinematic(${1:trig}, ${2:whichPlayer})",
        "description": "TriggerRegisterPlayerEventEndCinematic (trigger trig, player whichPlayer)",
        "prefix": "TriggerRegisterPlayerEventEndCinematic"
    },
    "TriggerRegisterGameStateEventTimeOfDay": {
        "body": "TriggerRegisterGameStateEventTimeOfDay(${1:trig}, ${2:opcode}, ${3:limitval})",
        "description": "TriggerRegisterGameStateEventTimeOfDay (trigger trig, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterGameStateEventTimeOfDay"
    },
    "TriggerRegisterEnterRegionSimple": {
        "body": "TriggerRegisterEnterRegionSimple(${1:trig}, ${2:whichRegion})",
        "description": "TriggerRegisterEnterRegionSimple (trigger trig, region whichRegion)",
        "prefix": "TriggerRegisterEnterRegionSimple"
    },
    "TriggerRegisterLeaveRegionSimple": {
        "body": "TriggerRegisterLeaveRegionSimple(${1:trig}, ${2:whichRegion})",
        "description": "TriggerRegisterLeaveRegionSimple (trigger trig, region whichRegion)",
        "prefix": "TriggerRegisterLeaveRegionSimple"
    },
    "TriggerRegisterEnterRectSimple": {
        "body": "TriggerRegisterEnterRectSimple(${1:trig}, ${2:r})",
        "description": "TriggerRegisterEnterRectSimple (trigger trig, rect r)",
        "prefix": "TriggerRegisterEnterRectSimple"
    },
    "TriggerRegisterLeaveRectSimple": {
        "body": "TriggerRegisterLeaveRectSimple(${1:trig}, ${2:r})",
        "description": "TriggerRegisterLeaveRectSimple (trigger trig, rect r)",
        "prefix": "TriggerRegisterLeaveRectSimple"
    },
    "TriggerRegisterDistanceBetweenUnits": {
        "body": "TriggerRegisterDistanceBetweenUnits(${1:trig}, ${2:whichUnit}, ${3:condition}, ${4:range})",
        "description": "TriggerRegisterDistanceBetweenUnits (trigger trig, unit whichUnit, boolexpr condition, real range)",
        "prefix": "TriggerRegisterDistanceBetweenUnits"
    },
    "TriggerRegisterUnitInRangeSimple": {
        "body": "TriggerRegisterUnitInRangeSimple(${1:trig}, ${2:range}, ${3:whichUnit})",
        "description": "TriggerRegisterUnitInRangeSimple (trigger trig, real range, unit whichUnit)",
        "prefix": "TriggerRegisterUnitInRangeSimple"
    },
    "TriggerRegisterUnitLifeEvent": {
        "body": "TriggerRegisterUnitLifeEvent(${1:trig}, ${2:whichUnit}, ${3:opcode}, ${4:limitval})",
        "description": "TriggerRegisterUnitLifeEvent (trigger trig, unit whichUnit, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterUnitLifeEvent"
    },
    "TriggerRegisterUnitManaEvent": {
        "body": "TriggerRegisterUnitManaEvent(${1:trig}, ${2:whichUnit}, ${3:opcode}, ${4:limitval})",
        "description": "TriggerRegisterUnitManaEvent (trigger trig, unit whichUnit, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterUnitManaEvent"
    },
    "TriggerRegisterDialogEventBJ": {
        "body": "TriggerRegisterDialogEventBJ(${1:trig}, ${2:whichDialog})",
        "description": "TriggerRegisterDialogEventBJ (trigger trig, dialog whichDialog)",
        "prefix": "TriggerRegisterDialogEventBJ"
    },
    "TriggerRegisterShowSkillEventBJ": {
        "body": "TriggerRegisterShowSkillEventBJ(${1:trig})",
        "description": "TriggerRegisterShowSkillEventBJ (trigger trig)",
        "prefix": "TriggerRegisterShowSkillEventBJ"
    },
    "TriggerRegisterBuildSubmenuEventBJ": {
        "body": "TriggerRegisterBuildSubmenuEventBJ(${1:trig})",
        "description": "TriggerRegisterBuildSubmenuEventBJ (trigger trig)",
        "prefix": "TriggerRegisterBuildSubmenuEventBJ"
    },
    "TriggerRegisterGameLoadedEventBJ": {
        "body": "TriggerRegisterGameLoadedEventBJ(${1:trig})",
        "description": "TriggerRegisterGameLoadedEventBJ (trigger trig)",
        "prefix": "TriggerRegisterGameLoadedEventBJ"
    },
    "TriggerRegisterGameSavedEventBJ": {
        "body": "TriggerRegisterGameSavedEventBJ(${1:trig})",
        "description": "TriggerRegisterGameSavedEventBJ (trigger trig)",
        "prefix": "TriggerRegisterGameSavedEventBJ"
    },
    "RegisterDestDeathInRegionEnum": {
        "body": "RegisterDestDeathInRegionEnum()",
        "description": "RegisterDestDeathInRegionEnum ()",
        "prefix": "RegisterDestDeathInRegionEnum"
    },
    "TriggerRegisterDestDeathInRegionEvent": {
        "body": "TriggerRegisterDestDeathInRegionEvent(${1:trig}, ${2:r})",
        "description": "TriggerRegisterDestDeathInRegionEvent (trigger trig, rect r)",
        "prefix": "TriggerRegisterDestDeathInRegionEvent"
    },
    "AddWeatherEffectSaveLast": {
        "body": "AddWeatherEffectSaveLast(${1:where}, ${2:effectID})",
        "description": "AddWeatherEffectSaveLast (rect where, integer effectID)",
        "prefix": "AddWeatherEffectSaveLast"
    },
    "GetLastCreatedWeatherEffect": {
        "body": "GetLastCreatedWeatherEffect()",
        "description": "GetLastCreatedWeatherEffect ()",
        "prefix": "GetLastCreatedWeatherEffect"
    },
    "RemoveWeatherEffectBJ": {
        "body": "RemoveWeatherEffectBJ(${1:whichWeatherEffect})",
        "description": "RemoveWeatherEffectBJ (weathereffect whichWeatherEffect)",
        "prefix": "RemoveWeatherEffectBJ"
    },
    "TerrainDeformationCraterBJ": {
        "body": "TerrainDeformationCraterBJ(${1:duration}, ${2:permanent}, ${3:where}, ${4:radius}, ${5:depth})",
        "description": "TerrainDeformationCraterBJ (real duration, boolean permanent, location where, real radius, real depth)",
        "prefix": "TerrainDeformationCraterBJ"
    },
    "TerrainDeformationRippleBJ": {
        "body": "TerrainDeformationRippleBJ(${1:duration}, ${2:limitNeg}, ${3:where}, ${4:startRadius}, ${5:endRadius}, ${6:depth}, ${7:wavePeriod}, ${8:waveWidth})",
        "description": "TerrainDeformationRippleBJ (real duration, boolean limitNeg, location where, real startRadius, real endRadius, real depth, real wavePeriod, real waveWidth)",
        "prefix": "TerrainDeformationRippleBJ"
    },
    "TerrainDeformationWaveBJ": {
        "body": "TerrainDeformationWaveBJ(${1:duration}, ${2:source}, ${3:target}, ${4:radius}, ${5:depth}, ${6:trailDelay})",
        "description": "TerrainDeformationWaveBJ (real duration, location source, location target, real radius, real depth, real trailDelay)",
        "prefix": "TerrainDeformationWaveBJ"
    },
    "TerrainDeformationRandomBJ": {
        "body": "TerrainDeformationRandomBJ(${1:duration}, ${2:where}, ${3:radius}, ${4:minDelta}, ${5:maxDelta}, ${6:updateInterval})",
        "description": "TerrainDeformationRandomBJ (real duration, location where, real radius, real minDelta, real maxDelta, real updateInterval)",
        "prefix": "TerrainDeformationRandomBJ"
    },
    "TerrainDeformationStopBJ": {
        "body": "TerrainDeformationStopBJ(${1:deformation}, ${2:duration})",
        "description": "TerrainDeformationStopBJ (terraindeformation deformation, real duration)",
        "prefix": "TerrainDeformationStopBJ"
    },
    "GetLastCreatedTerrainDeformation": {
        "body": "GetLastCreatedTerrainDeformation()",
        "description": "GetLastCreatedTerrainDeformation ()",
        "prefix": "GetLastCreatedTerrainDeformation"
    },
    "AddLightningLoc": {
        "body": "AddLightningLoc(${1:codeName}, ${2:where1}, ${3:where2})",
        "description": "AddLightningLoc (string codeName, location where1, location where2)",
        "prefix": "AddLightningLoc"
    },
    "DestroyLightningBJ": {
        "body": "DestroyLightningBJ(${1:whichBolt})",
        "description": "DestroyLightningBJ (lightning whichBolt)",
        "prefix": "DestroyLightningBJ"
    },
    "MoveLightningLoc": {
        "body": "MoveLightningLoc(${1:whichBolt}, ${2:where1}, ${3:where2})",
        "description": "MoveLightningLoc (lightning whichBolt, location where1, location where2)",
        "prefix": "MoveLightningLoc"
    },
    "GetLightningColorABJ": {
        "body": "GetLightningColorABJ(${1:whichBolt})",
        "description": "GetLightningColorABJ (lightning whichBolt)",
        "prefix": "GetLightningColorABJ"
    },
    "GetLightningColorRBJ": {
        "body": "GetLightningColorRBJ(${1:whichBolt})",
        "description": "GetLightningColorRBJ (lightning whichBolt)",
        "prefix": "GetLightningColorRBJ"
    },
    "GetLightningColorGBJ": {
        "body": "GetLightningColorGBJ(${1:whichBolt})",
        "description": "GetLightningColorGBJ (lightning whichBolt)",
        "prefix": "GetLightningColorGBJ"
    },
    "GetLightningColorBBJ": {
        "body": "GetLightningColorBBJ(${1:whichBolt})",
        "description": "GetLightningColorBBJ (lightning whichBolt)",
        "prefix": "GetLightningColorBBJ"
    },
    "SetLightningColorBJ": {
        "body": "SetLightningColorBJ(${1:whichBolt}, ${2:r}, ${3:g}, ${4:b}, ${5:a})",
        "description": "SetLightningColorBJ (lightning whichBolt, real r, real g, real b, real a)",
        "prefix": "SetLightningColorBJ"
    },
    "GetLastCreatedLightningBJ": {
        "body": "GetLastCreatedLightningBJ()",
        "description": "GetLastCreatedLightningBJ ()",
        "prefix": "GetLastCreatedLightningBJ"
    },
    "GetAbilityEffectBJ": {
        "body": "GetAbilityEffectBJ(${1:abilcode}, ${2:t}, ${3:index})",
        "description": "GetAbilityEffectBJ (integer abilcode, effecttype t, integer index)",
        "prefix": "GetAbilityEffectBJ"
    },
    "GetAbilitySoundBJ": {
        "body": "GetAbilitySoundBJ(${1:abilcode}, ${2:t})",
        "description": "GetAbilitySoundBJ (integer abilcode, soundtype t)",
        "prefix": "GetAbilitySoundBJ"
    },
    "GetTerrainCliffLevelBJ": {
        "body": "GetTerrainCliffLevelBJ(${1:where})",
        "description": "GetTerrainCliffLevelBJ (location where)",
        "prefix": "GetTerrainCliffLevelBJ"
    },
    "GetTerrainTypeBJ": {
        "body": "GetTerrainTypeBJ(${1:where})",
        "description": "GetTerrainTypeBJ (location where)",
        "prefix": "GetTerrainTypeBJ"
    },
    "GetTerrainVarianceBJ": {
        "body": "GetTerrainVarianceBJ(${1:where})",
        "description": "GetTerrainVarianceBJ (location where)",
        "prefix": "GetTerrainVarianceBJ"
    },
    "SetTerrainTypeBJ": {
        "body": "SetTerrainTypeBJ(${1:where}, ${2:terrainType}, ${3:variation}, ${4:area}, ${5:shape})",
        "description": "SetTerrainTypeBJ (location where, integer terrainType, integer variation, integer area, integer shape)",
        "prefix": "SetTerrainTypeBJ"
    },
    "IsTerrainPathableBJ": {
        "body": "IsTerrainPathableBJ(${1:where}, ${2:t})",
        "description": "IsTerrainPathableBJ (location where, pathingtype t)",
        "prefix": "IsTerrainPathableBJ"
    },
    "SetTerrainPathableBJ": {
        "body": "SetTerrainPathableBJ(${1:where}, ${2:t}, ${3:flag})",
        "description": "SetTerrainPathableBJ (location where, pathingtype t, boolean flag)",
        "prefix": "SetTerrainPathableBJ"
    },
    "SetWaterBaseColorBJ": {
        "body": "SetWaterBaseColorBJ(${1:red}, ${2:green}, ${3:blue}, ${4:transparency})",
        "description": "SetWaterBaseColorBJ (real red, real green, real blue, real transparency)",
        "prefix": "SetWaterBaseColorBJ"
    },
    "CreateFogModifierRectSimple": {
        "body": "CreateFogModifierRectSimple(${1:whichPlayer}, ${2:whichFogState}, ${3:r}, ${4:afterUnits})",
        "description": "CreateFogModifierRectSimple (player whichPlayer, fogstate whichFogState, rect r, boolean afterUnits)",
        "prefix": "CreateFogModifierRectSimple"
    },
    "CreateFogModifierRadiusLocSimple": {
        "body": "CreateFogModifierRadiusLocSimple(${1:whichPlayer}, ${2:whichFogState}, ${3:center}, ${4:radius}, ${5:afterUnits})",
        "description": "CreateFogModifierRadiusLocSimple (player whichPlayer, fogstate whichFogState, location center, real radius, boolean afterUnits)",
        "prefix": "CreateFogModifierRadiusLocSimple"
    },
    "CreateFogModifierRectBJ": {
        "body": "CreateFogModifierRectBJ(${1:enabled}, ${2:whichPlayer}, ${3:whichFogState}, ${4:r})",
        "description": "CreateFogModifierRectBJ (boolean enabled, player whichPlayer, fogstate whichFogState, rect r)",
        "prefix": "CreateFogModifierRectBJ"
    },
    "CreateFogModifierRadiusLocBJ": {
        "body": "CreateFogModifierRadiusLocBJ(${1:enabled}, ${2:whichPlayer}, ${3:whichFogState}, ${4:center}, ${5:radius})",
        "description": "CreateFogModifierRadiusLocBJ (boolean enabled, player whichPlayer, fogstate whichFogState, location center, real radius)",
        "prefix": "CreateFogModifierRadiusLocBJ"
    },
    "GetLastCreatedFogModifier": {
        "body": "GetLastCreatedFogModifier()",
        "description": "GetLastCreatedFogModifier ()",
        "prefix": "GetLastCreatedFogModifier"
    },
    "FogEnableOn": {
        "body": "FogEnableOn()",
        "description": "FogEnableOn ()",
        "prefix": "FogEnableOn"
    },
    "FogEnableOff": {
        "body": "FogEnableOff()",
        "description": "FogEnableOff ()",
        "prefix": "FogEnableOff"
    },
    "FogMaskEnableOn": {
        "body": "FogMaskEnableOn()",
        "description": "FogMaskEnableOn ()",
        "prefix": "FogMaskEnableOn"
    },
    "FogMaskEnableOff": {
        "body": "FogMaskEnableOff()",
        "description": "FogMaskEnableOff ()",
        "prefix": "FogMaskEnableOff"
    },
    "UseTimeOfDayBJ": {
        "body": "UseTimeOfDayBJ(${1:flag})",
        "description": "UseTimeOfDayBJ (boolean flag)",
        "prefix": "UseTimeOfDayBJ"
    },
    "SetTerrainFogExBJ": {
        "body": "SetTerrainFogExBJ(${1:style}, ${2:zstart}, ${3:zend}, ${4:density}, ${5:red}, ${6:green}, ${7:blue})",
        "description": "SetTerrainFogExBJ (integer style, real zstart, real zend, real density, real red, real green, real blue)",
        "prefix": "SetTerrainFogExBJ"
    },
    "ResetTerrainFogBJ": {
        "body": "ResetTerrainFogBJ()",
        "description": "ResetTerrainFogBJ ()",
        "prefix": "ResetTerrainFogBJ"
    },
    "SetDoodadAnimationBJ": {
        "body": "SetDoodadAnimationBJ(${1:animName}, ${2:doodadID}, ${3:radius}, ${4:center})",
        "description": "SetDoodadAnimationBJ (string animName, integer doodadID, real radius, location center)",
        "prefix": "SetDoodadAnimationBJ"
    },
    "SetDoodadAnimationRectBJ": {
        "body": "SetDoodadAnimationRectBJ(${1:animName}, ${2:doodadID}, ${3:r})",
        "description": "SetDoodadAnimationRectBJ (string animName, integer doodadID, rect r)",
        "prefix": "SetDoodadAnimationRectBJ"
    },
    "AddUnitAnimationPropertiesBJ": {
        "body": "AddUnitAnimationPropertiesBJ(${1:add}, ${2:animProperties}, ${3:whichUnit})",
        "description": "AddUnitAnimationPropertiesBJ (boolean add, string animProperties, unit whichUnit)",
        "prefix": "AddUnitAnimationPropertiesBJ"
    },
    "CreateImageBJ": {
        "body": "CreateImageBJ(${1:file}, ${2:size}, ${3:where}, ${4:zOffset}, ${5:imageType})",
        "description": "CreateImageBJ (string file, real size, location where, real zOffset, integer imageType)",
        "prefix": "CreateImageBJ"
    },
    "ShowImageBJ": {
        "body": "ShowImageBJ(${1:flag}, ${2:whichImage})",
        "description": "ShowImageBJ (boolean flag, image whichImage)",
        "prefix": "ShowImageBJ"
    },
    "SetImagePositionBJ": {
        "body": "SetImagePositionBJ(${1:whichImage}, ${2:where}, ${3:zOffset})",
        "description": "SetImagePositionBJ (image whichImage, location where, real zOffset)",
        "prefix": "SetImagePositionBJ"
    },
    "SetImageColorBJ": {
        "body": "SetImageColorBJ(${1:whichImage}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "SetImageColorBJ (image whichImage, real red, real green, real blue, real alpha)",
        "prefix": "SetImageColorBJ"
    },
    "GetLastCreatedImage": {
        "body": "GetLastCreatedImage()",
        "description": "GetLastCreatedImage ()",
        "prefix": "GetLastCreatedImage"
    },
    "CreateUbersplatBJ": {
        "body": "CreateUbersplatBJ(${1:where}, ${2:name}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha}, ${7:forcePaused}, ${8:noBirthTime})",
        "description": "CreateUbersplatBJ (location where, string name, real red, real green, real blue, real alpha, boolean forcePaused, boolean noBirthTime)",
        "prefix": "CreateUbersplatBJ"
    },
    "ShowUbersplatBJ": {
        "body": "ShowUbersplatBJ(${1:flag}, ${2:whichSplat})",
        "description": "ShowUbersplatBJ (boolean flag, ubersplat whichSplat)",
        "prefix": "ShowUbersplatBJ"
    },
    "GetLastCreatedUbersplat": {
        "body": "GetLastCreatedUbersplat()",
        "description": "GetLastCreatedUbersplat ()",
        "prefix": "GetLastCreatedUbersplat"
    },
    "PlaySoundBJ": {
        "body": "PlaySoundBJ(${1:soundHandle})",
        "description": "PlaySoundBJ (sound soundHandle)",
        "prefix": "PlaySoundBJ"
    },
    "StopSoundBJ": {
        "body": "StopSoundBJ(${1:soundHandle}, ${2:fadeOut})",
        "description": "StopSoundBJ (sound soundHandle, boolean fadeOut)",
        "prefix": "StopSoundBJ"
    },
    "SetSoundVolumeBJ": {
        "body": "SetSoundVolumeBJ(${1:soundHandle}, ${2:volumePercent})",
        "description": "SetSoundVolumeBJ (sound soundHandle, real volumePercent)",
        "prefix": "SetSoundVolumeBJ"
    },
    "SetSoundOffsetBJ": {
        "body": "SetSoundOffsetBJ(${1:newOffset}, ${2:soundHandle})",
        "description": "SetSoundOffsetBJ (real newOffset, sound soundHandle)",
        "prefix": "SetSoundOffsetBJ"
    },
    "SetSoundDistanceCutoffBJ": {
        "body": "SetSoundDistanceCutoffBJ(${1:soundHandle}, ${2:cutoff})",
        "description": "SetSoundDistanceCutoffBJ (sound soundHandle, real cutoff)",
        "prefix": "SetSoundDistanceCutoffBJ"
    },
    "SetSoundPitchBJ": {
        "body": "SetSoundPitchBJ(${1:soundHandle}, ${2:pitch})",
        "description": "SetSoundPitchBJ (sound soundHandle, real pitch)",
        "prefix": "SetSoundPitchBJ"
    },
    "SetSoundPositionLocBJ": {
        "body": "SetSoundPositionLocBJ(${1:soundHandle}, ${2:loc}, ${3:z})",
        "description": "SetSoundPositionLocBJ (sound soundHandle, location loc, real z)",
        "prefix": "SetSoundPositionLocBJ"
    },
    "AttachSoundToUnitBJ": {
        "body": "AttachSoundToUnitBJ(${1:soundHandle}, ${2:whichUnit})",
        "description": "AttachSoundToUnitBJ (sound soundHandle, unit whichUnit)",
        "prefix": "AttachSoundToUnitBJ"
    },
    "SetSoundConeAnglesBJ": {
        "body": "SetSoundConeAnglesBJ(${1:soundHandle}, ${2:inside}, ${3:outside}, ${4:outsideVolumePercent})",
        "description": "SetSoundConeAnglesBJ (sound soundHandle, real inside, real outside, real outsideVolumePercent)",
        "prefix": "SetSoundConeAnglesBJ"
    },
    "KillSoundWhenDoneBJ": {
        "body": "KillSoundWhenDoneBJ(${1:soundHandle})",
        "description": "KillSoundWhenDoneBJ (sound soundHandle)",
        "prefix": "KillSoundWhenDoneBJ"
    },
    "PlaySoundAtPointBJ": {
        "body": "PlaySoundAtPointBJ(${1:soundHandle}, ${2:volumePercent}, ${3:loc}, ${4:z})",
        "description": "PlaySoundAtPointBJ (sound soundHandle, real volumePercent, location loc, real z)",
        "prefix": "PlaySoundAtPointBJ"
    },
    "PlaySoundOnUnitBJ": {
        "body": "PlaySoundOnUnitBJ(${1:soundHandle}, ${2:volumePercent}, ${3:whichUnit})",
        "description": "PlaySoundOnUnitBJ (sound soundHandle, real volumePercent, unit whichUnit)",
        "prefix": "PlaySoundOnUnitBJ"
    },
    "PlaySoundFromOffsetBJ": {
        "body": "PlaySoundFromOffsetBJ(${1:soundHandle}, ${2:volumePercent}, ${3:startingOffset})",
        "description": "PlaySoundFromOffsetBJ (sound soundHandle, real volumePercent, real startingOffset)",
        "prefix": "PlaySoundFromOffsetBJ"
    },
    "PlayMusicBJ": {
        "body": "PlayMusicBJ(${1:musicFileName})",
        "description": "PlayMusicBJ (string musicFileName)",
        "prefix": "PlayMusicBJ"
    },
    "PlayMusicExBJ": {
        "body": "PlayMusicExBJ(${1:musicFileName}, ${2:startingOffset}, ${3:fadeInTime})",
        "description": "PlayMusicExBJ (string musicFileName, real startingOffset, real fadeInTime)",
        "prefix": "PlayMusicExBJ"
    },
    "SetMusicOffsetBJ": {
        "body": "SetMusicOffsetBJ(${1:newOffset})",
        "description": "SetMusicOffsetBJ (real newOffset)",
        "prefix": "SetMusicOffsetBJ"
    },
    "PlayThematicMusicBJ": {
        "body": "PlayThematicMusicBJ(${1:musicName})",
        "description": "PlayThematicMusicBJ (string musicName)",
        "prefix": "PlayThematicMusicBJ"
    },
    "PlayThematicMusicExBJ": {
        "body": "PlayThematicMusicExBJ(${1:musicName}, ${2:startingOffset})",
        "description": "PlayThematicMusicExBJ (string musicName, real startingOffset)",
        "prefix": "PlayThematicMusicExBJ"
    },
    "SetThematicMusicOffsetBJ": {
        "body": "SetThematicMusicOffsetBJ(${1:newOffset})",
        "description": "SetThematicMusicOffsetBJ (real newOffset)",
        "prefix": "SetThematicMusicOffsetBJ"
    },
    "EndThematicMusicBJ": {
        "body": "EndThematicMusicBJ()",
        "description": "EndThematicMusicBJ ()",
        "prefix": "EndThematicMusicBJ"
    },
    "StopMusicBJ": {
        "body": "StopMusicBJ(${1:fadeOut})",
        "description": "StopMusicBJ (boolean fadeOut)",
        "prefix": "StopMusicBJ"
    },
    "ResumeMusicBJ": {
        "body": "ResumeMusicBJ()",
        "description": "ResumeMusicBJ ()",
        "prefix": "ResumeMusicBJ"
    },
    "SetMusicVolumeBJ": {
        "body": "SetMusicVolumeBJ(${1:volumePercent})",
        "description": "SetMusicVolumeBJ (real volumePercent)",
        "prefix": "SetMusicVolumeBJ"
    },
    "GetSoundDurationBJ": {
        "body": "GetSoundDurationBJ(${1:soundHandle})",
        "description": "GetSoundDurationBJ (sound soundHandle)",
        "prefix": "GetSoundDurationBJ"
    },
    "GetSoundFileDurationBJ": {
        "body": "GetSoundFileDurationBJ(${1:musicFileName})",
        "description": "GetSoundFileDurationBJ (string musicFileName)",
        "prefix": "GetSoundFileDurationBJ"
    },
    "GetLastPlayedSound": {
        "body": "GetLastPlayedSound()",
        "description": "GetLastPlayedSound ()",
        "prefix": "GetLastPlayedSound"
    },
    "GetLastPlayedMusic": {
        "body": "GetLastPlayedMusic()",
        "description": "GetLastPlayedMusic ()",
        "prefix": "GetLastPlayedMusic"
    },
    "VolumeGroupSetVolumeBJ": {
        "body": "VolumeGroupSetVolumeBJ(${1:vgroup}, ${2:percent})",
        "description": "VolumeGroupSetVolumeBJ (volumegroup vgroup, real percent)",
        "prefix": "VolumeGroupSetVolumeBJ"
    },
    "SetCineModeVolumeGroupsImmediateBJ": {
        "body": "SetCineModeVolumeGroupsImmediateBJ()",
        "description": "SetCineModeVolumeGroupsImmediateBJ ()",
        "prefix": "SetCineModeVolumeGroupsImmediateBJ"
    },
    "SetCineModeVolumeGroupsBJ": {
        "body": "SetCineModeVolumeGroupsBJ()",
        "description": "SetCineModeVolumeGroupsBJ ()",
        "prefix": "SetCineModeVolumeGroupsBJ"
    },
    "SetSpeechVolumeGroupsImmediateBJ": {
        "body": "SetSpeechVolumeGroupsImmediateBJ()",
        "description": "SetSpeechVolumeGroupsImmediateBJ ()",
        "prefix": "SetSpeechVolumeGroupsImmediateBJ"
    },
    "SetSpeechVolumeGroupsBJ": {
        "body": "SetSpeechVolumeGroupsBJ()",
        "description": "SetSpeechVolumeGroupsBJ ()",
        "prefix": "SetSpeechVolumeGroupsBJ"
    },
    "VolumeGroupResetImmediateBJ": {
        "body": "VolumeGroupResetImmediateBJ()",
        "description": "VolumeGroupResetImmediateBJ ()",
        "prefix": "VolumeGroupResetImmediateBJ"
    },
    "VolumeGroupResetBJ": {
        "body": "VolumeGroupResetBJ()",
        "description": "VolumeGroupResetBJ ()",
        "prefix": "VolumeGroupResetBJ"
    },
    "GetSoundIsPlayingBJ": {
        "body": "GetSoundIsPlayingBJ(${1:soundHandle})",
        "description": "GetSoundIsPlayingBJ (sound soundHandle)",
        "prefix": "GetSoundIsPlayingBJ"
    },
    "WaitForSoundBJ": {
        "body": "WaitForSoundBJ(${1:soundHandle}, ${2:offset})",
        "description": "WaitForSoundBJ (sound soundHandle, real offset)",
        "prefix": "WaitForSoundBJ"
    },
    "SetMapMusicIndexedBJ": {
        "body": "SetMapMusicIndexedBJ(${1:musicName}, ${2:index})",
        "description": "SetMapMusicIndexedBJ (string musicName, integer index)",
        "prefix": "SetMapMusicIndexedBJ"
    },
    "SetMapMusicRandomBJ": {
        "body": "SetMapMusicRandomBJ(${1:musicName})",
        "description": "SetMapMusicRandomBJ (string musicName)",
        "prefix": "SetMapMusicRandomBJ"
    },
    "ClearMapMusicBJ": {
        "body": "ClearMapMusicBJ()",
        "description": "ClearMapMusicBJ ()",
        "prefix": "ClearMapMusicBJ"
    },
    "SetStackedSoundBJ": {
        "body": "SetStackedSoundBJ(${1:add}, ${2:soundHandle}, ${3:r})",
        "description": "SetStackedSoundBJ (boolean add, sound soundHandle, rect r)",
        "prefix": "SetStackedSoundBJ"
    },
    "StartSoundForPlayerBJ": {
        "body": "StartSoundForPlayerBJ(${1:whichPlayer}, ${2:soundHandle})",
        "description": "StartSoundForPlayerBJ (player whichPlayer, sound soundHandle)",
        "prefix": "StartSoundForPlayerBJ"
    },
    "VolumeGroupSetVolumeForPlayerBJ": {
        "body": "VolumeGroupSetVolumeForPlayerBJ(${1:whichPlayer}, ${2:vgroup}, ${3:scale})",
        "description": "VolumeGroupSetVolumeForPlayerBJ (player whichPlayer, volumegroup vgroup, real scale)",
        "prefix": "VolumeGroupSetVolumeForPlayerBJ"
    },
    "EnableDawnDusk": {
        "body": "EnableDawnDusk(${1:flag})",
        "description": "EnableDawnDusk (boolean flag)",
        "prefix": "EnableDawnDusk"
    },
    "IsDawnDuskEnabled": {
        "body": "IsDawnDuskEnabled()",
        "description": "IsDawnDuskEnabled ()",
        "prefix": "IsDawnDuskEnabled"
    },
    "SetAmbientDaySound": {
        "body": "SetAmbientDaySound(${1:inLabel})",
        "description": "SetAmbientDaySound (string inLabel)",
        "prefix": "SetAmbientDaySound"
    },
    "SetAmbientNightSound": {
        "body": "SetAmbientNightSound(${1:inLabel})",
        "description": "SetAmbientNightSound (string inLabel)",
        "prefix": "SetAmbientNightSound"
    },
    "AddSpecialEffectLocBJ": {
        "body": "AddSpecialEffectLocBJ(${1:where}, ${2:modelName})",
        "description": "AddSpecialEffectLocBJ (location where, string modelName)",
        "prefix": "AddSpecialEffectLocBJ"
    },
    "AddSpecialEffectTargetUnitBJ": {
        "body": "AddSpecialEffectTargetUnitBJ(${1:attachPointName}, ${2:targetWidget}, ${3:modelName})",
        "description": "AddSpecialEffectTargetUnitBJ (string attachPointName, widget targetWidget, string modelName)",
        "prefix": "AddSpecialEffectTargetUnitBJ"
    },
    "DestroyEffectBJ": {
        "body": "DestroyEffectBJ(${1:whichEffect})",
        "description": "DestroyEffectBJ (effect whichEffect)",
        "prefix": "DestroyEffectBJ"
    },
    "GetLastCreatedEffectBJ": {
        "body": "GetLastCreatedEffectBJ()",
        "description": "GetLastCreatedEffectBJ ()",
        "prefix": "GetLastCreatedEffectBJ"
    },
    "GetItemLoc": {
        "body": "GetItemLoc(${1:whichItem})",
        "description": "GetItemLoc (item whichItem)",
        "prefix": "GetItemLoc"
    },
    "GetItemLifeBJ": {
        "body": "GetItemLifeBJ(${1:whichWidget})",
        "description": "GetItemLifeBJ (widget whichWidget)",
        "prefix": "GetItemLifeBJ"
    },
    "SetItemLifeBJ": {
        "body": "SetItemLifeBJ(${1:whichWidget}, ${2:life})",
        "description": "SetItemLifeBJ (widget whichWidget, real life)",
        "prefix": "SetItemLifeBJ"
    },
    "AddHeroXPSwapped": {
        "body": "AddHeroXPSwapped(${1:xpToAdd}, ${2:whichHero}, ${3:showEyeCandy})",
        "description": "AddHeroXPSwapped (integer xpToAdd, unit whichHero, boolean showEyeCandy)",
        "prefix": "AddHeroXPSwapped"
    },
    "SetHeroLevelBJ": {
        "body": "SetHeroLevelBJ(${1:whichHero}, ${2:newLevel}, ${3:showEyeCandy})",
        "description": "SetHeroLevelBJ (unit whichHero, integer newLevel, boolean showEyeCandy)",
        "prefix": "SetHeroLevelBJ"
    },
    "DecUnitAbilityLevelSwapped": {
        "body": "DecUnitAbilityLevelSwapped(${1:abilcode}, ${2:whichUnit})",
        "description": "DecUnitAbilityLevelSwapped (integer abilcode, unit whichUnit)",
        "prefix": "DecUnitAbilityLevelSwapped"
    },
    "IncUnitAbilityLevelSwapped": {
        "body": "IncUnitAbilityLevelSwapped(${1:abilcode}, ${2:whichUnit})",
        "description": "IncUnitAbilityLevelSwapped (integer abilcode, unit whichUnit)",
        "prefix": "IncUnitAbilityLevelSwapped"
    },
    "SetUnitAbilityLevelSwapped": {
        "body": "SetUnitAbilityLevelSwapped(${1:abilcode}, ${2:whichUnit}, ${3:level})",
        "description": "SetUnitAbilityLevelSwapped (integer abilcode, unit whichUnit, integer level)",
        "prefix": "SetUnitAbilityLevelSwapped"
    },
    "GetUnitAbilityLevelSwapped": {
        "body": "GetUnitAbilityLevelSwapped(${1:abilcode}, ${2:whichUnit})",
        "description": "GetUnitAbilityLevelSwapped (integer abilcode, unit whichUnit)",
        "prefix": "GetUnitAbilityLevelSwapped"
    },
    "UnitHasBuffBJ": {
        "body": "UnitHasBuffBJ(${1:whichUnit}, ${2:buffcode})",
        "description": "UnitHasBuffBJ (unit whichUnit, integer buffcode)",
        "prefix": "UnitHasBuffBJ"
    },
    "UnitRemoveBuffBJ": {
        "body": "UnitRemoveBuffBJ(${1:buffcode}, ${2:whichUnit})",
        "description": "UnitRemoveBuffBJ (integer buffcode, unit whichUnit)",
        "prefix": "UnitRemoveBuffBJ"
    },
    "UnitAddItemSwapped": {
        "body": "UnitAddItemSwapped(${1:whichItem}, ${2:whichHero})",
        "description": "UnitAddItemSwapped (item whichItem, unit whichHero)",
        "prefix": "UnitAddItemSwapped"
    },
    "UnitAddItemByIdSwapped": {
        "body": "UnitAddItemByIdSwapped(${1:itemId}, ${2:whichHero})",
        "description": "UnitAddItemByIdSwapped (integer itemId, unit whichHero)",
        "prefix": "UnitAddItemByIdSwapped"
    },
    "UnitRemoveItemSwapped": {
        "body": "UnitRemoveItemSwapped(${1:whichItem}, ${2:whichHero})",
        "description": "UnitRemoveItemSwapped (item whichItem, unit whichHero)",
        "prefix": "UnitRemoveItemSwapped"
    },
    "UnitRemoveItemFromSlotSwapped": {
        "body": "UnitRemoveItemFromSlotSwapped(${1:itemSlot}, ${2:whichHero})",
        "description": "UnitRemoveItemFromSlotSwapped (integer itemSlot, unit whichHero)",
        "prefix": "UnitRemoveItemFromSlotSwapped"
    },
    "CreateItemLoc": {
        "body": "CreateItemLoc(${1:itemId}, ${2:loc})",
        "description": "CreateItemLoc (integer itemId, location loc)",
        "prefix": "CreateItemLoc"
    },
    "GetLastCreatedItem": {
        "body": "GetLastCreatedItem()",
        "description": "GetLastCreatedItem ()",
        "prefix": "GetLastCreatedItem"
    },
    "GetLastRemovedItem": {
        "body": "GetLastRemovedItem()",
        "description": "GetLastRemovedItem ()",
        "prefix": "GetLastRemovedItem"
    },
    "SetItemPositionLoc": {
        "body": "SetItemPositionLoc(${1:whichItem}, ${2:loc})",
        "description": "SetItemPositionLoc (item whichItem, location loc)",
        "prefix": "SetItemPositionLoc"
    },
    "GetLearnedSkillBJ": {
        "body": "GetLearnedSkillBJ()",
        "description": "GetLearnedSkillBJ ()",
        "prefix": "GetLearnedSkillBJ"
    },
    "SuspendHeroXPBJ": {
        "body": "SuspendHeroXPBJ(${1:flag}, ${2:whichHero})",
        "description": "SuspendHeroXPBJ (boolean flag, unit whichHero)",
        "prefix": "SuspendHeroXPBJ"
    },
    "SetPlayerHandicapXPBJ": {
        "body": "SetPlayerHandicapXPBJ(${1:whichPlayer}, ${2:handicapPercent})",
        "description": "SetPlayerHandicapXPBJ (player whichPlayer, real handicapPercent)",
        "prefix": "SetPlayerHandicapXPBJ"
    },
    "GetPlayerHandicapXPBJ": {
        "body": "GetPlayerHandicapXPBJ(${1:whichPlayer})",
        "description": "GetPlayerHandicapXPBJ (player whichPlayer)",
        "prefix": "GetPlayerHandicapXPBJ"
    },
    "SetPlayerHandicapBJ": {
        "body": "SetPlayerHandicapBJ(${1:whichPlayer}, ${2:handicapPercent})",
        "description": "SetPlayerHandicapBJ (player whichPlayer, real handicapPercent)",
        "prefix": "SetPlayerHandicapBJ"
    },
    "GetPlayerHandicapBJ": {
        "body": "GetPlayerHandicapBJ(${1:whichPlayer})",
        "description": "GetPlayerHandicapBJ (player whichPlayer)",
        "prefix": "GetPlayerHandicapBJ"
    },
    "GetHeroStatBJ": {
        "body": "GetHeroStatBJ(${1:whichStat}, ${2:whichHero}, ${3:includeBonuses})",
        "description": "GetHeroStatBJ (integer whichStat, unit whichHero, boolean includeBonuses)",
        "prefix": "GetHeroStatBJ"
    },
    "SetHeroStat": {
        "body": "SetHeroStat(${1:whichHero}, ${2:whichStat}, ${3:value})",
        "description": "SetHeroStat (unit whichHero, integer whichStat, integer value)",
        "prefix": "SetHeroStat"
    },
    "ModifyHeroStat": {
        "body": "ModifyHeroStat(${1:whichStat}, ${2:whichHero}, ${3:modifyMethod}, ${4:value})",
        "description": "ModifyHeroStat (integer whichStat, unit whichHero, integer modifyMethod, integer value)",
        "prefix": "ModifyHeroStat"
    },
    "ModifyHeroSkillPoints": {
        "body": "ModifyHeroSkillPoints(${1:whichHero}, ${2:modifyMethod}, ${3:value})",
        "description": "ModifyHeroSkillPoints (unit whichHero, integer modifyMethod, integer value)",
        "prefix": "ModifyHeroSkillPoints"
    },
    "UnitDropItemPointBJ": {
        "body": "UnitDropItemPointBJ(${1:whichUnit}, ${2:whichItem}, ${3:x}, ${4:y})",
        "description": "UnitDropItemPointBJ (unit whichUnit, item whichItem, real x, real y)",
        "prefix": "UnitDropItemPointBJ"
    },
    "UnitDropItemPointLoc": {
        "body": "UnitDropItemPointLoc(${1:whichUnit}, ${2:whichItem}, ${3:loc})",
        "description": "UnitDropItemPointLoc (unit whichUnit, item whichItem, location loc)",
        "prefix": "UnitDropItemPointLoc"
    },
    "UnitDropItemSlotBJ": {
        "body": "UnitDropItemSlotBJ(${1:whichUnit}, ${2:whichItem}, ${3:slot})",
        "description": "UnitDropItemSlotBJ (unit whichUnit, item whichItem, integer slot)",
        "prefix": "UnitDropItemSlotBJ"
    },
    "UnitDropItemTargetBJ": {
        "body": "UnitDropItemTargetBJ(${1:whichUnit}, ${2:whichItem}, ${3:target})",
        "description": "UnitDropItemTargetBJ (unit whichUnit, item whichItem, widget target)",
        "prefix": "UnitDropItemTargetBJ"
    },
    "UnitUseItemDestructable": {
        "body": "UnitUseItemDestructable(${1:whichUnit}, ${2:whichItem}, ${3:target})",
        "description": "UnitUseItemDestructable (unit whichUnit, item whichItem, widget target)",
        "prefix": "UnitUseItemDestructable"
    },
    "UnitUseItemPointLoc": {
        "body": "UnitUseItemPointLoc(${1:whichUnit}, ${2:whichItem}, ${3:loc})",
        "description": "UnitUseItemPointLoc (unit whichUnit, item whichItem, location loc)",
        "prefix": "UnitUseItemPointLoc"
    },
    "UnitItemInSlotBJ": {
        "body": "UnitItemInSlotBJ(${1:whichUnit}, ${2:itemSlot})",
        "description": "UnitItemInSlotBJ (unit whichUnit, integer itemSlot)",
        "prefix": "UnitItemInSlotBJ"
    },
    "GetInventoryIndexOfItemTypeBJ": {
        "body": "GetInventoryIndexOfItemTypeBJ(${1:whichUnit}, ${2:itemId})",
        "description": "GetInventoryIndexOfItemTypeBJ (unit whichUnit, integer itemId)",
        "prefix": "GetInventoryIndexOfItemTypeBJ"
    },
    "GetItemOfTypeFromUnitBJ": {
        "body": "GetItemOfTypeFromUnitBJ(${1:whichUnit}, ${2:itemId})",
        "description": "GetItemOfTypeFromUnitBJ (unit whichUnit, integer itemId)",
        "prefix": "GetItemOfTypeFromUnitBJ"
    },
    "UnitHasItemOfTypeBJ": {
        "body": "UnitHasItemOfTypeBJ(${1:whichUnit}, ${2:itemId})",
        "description": "UnitHasItemOfTypeBJ (unit whichUnit, integer itemId)",
        "prefix": "UnitHasItemOfTypeBJ"
    },
    "UnitInventoryCount": {
        "body": "UnitInventoryCount(${1:whichUnit})",
        "description": "UnitInventoryCount (unit whichUnit)",
        "prefix": "UnitInventoryCount"
    },
    "UnitInventorySizeBJ": {
        "body": "UnitInventorySizeBJ(${1:whichUnit})",
        "description": "UnitInventorySizeBJ (unit whichUnit)",
        "prefix": "UnitInventorySizeBJ"
    },
    "SetItemInvulnerableBJ": {
        "body": "SetItemInvulnerableBJ(${1:whichItem}, ${2:flag})",
        "description": "SetItemInvulnerableBJ (item whichItem, boolean flag)",
        "prefix": "SetItemInvulnerableBJ"
    },
    "SetItemDropOnDeathBJ": {
        "body": "SetItemDropOnDeathBJ(${1:whichItem}, ${2:flag})",
        "description": "SetItemDropOnDeathBJ (item whichItem, boolean flag)",
        "prefix": "SetItemDropOnDeathBJ"
    },
    "SetItemDroppableBJ": {
        "body": "SetItemDroppableBJ(${1:whichItem}, ${2:flag})",
        "description": "SetItemDroppableBJ (item whichItem, boolean flag)",
        "prefix": "SetItemDroppableBJ"
    },
    "SetItemPlayerBJ": {
        "body": "SetItemPlayerBJ(${1:whichItem}, ${2:whichPlayer}, ${3:changeColor})",
        "description": "SetItemPlayerBJ (item whichItem, player whichPlayer, boolean changeColor)",
        "prefix": "SetItemPlayerBJ"
    },
    "SetItemVisibleBJ": {
        "body": "SetItemVisibleBJ(${1:show}, ${2:whichItem})",
        "description": "SetItemVisibleBJ (boolean show, item whichItem)",
        "prefix": "SetItemVisibleBJ"
    },
    "IsItemHiddenBJ": {
        "body": "IsItemHiddenBJ(${1:whichItem})",
        "description": "IsItemHiddenBJ (item whichItem)",
        "prefix": "IsItemHiddenBJ"
    },
    "ChooseRandomItemBJ": {
        "body": "ChooseRandomItemBJ(${1:level})",
        "description": "ChooseRandomItemBJ (integer level)",
        "prefix": "ChooseRandomItemBJ"
    },
    "ChooseRandomItemExBJ": {
        "body": "ChooseRandomItemExBJ(${1:level}, ${2:whichType})",
        "description": "ChooseRandomItemExBJ (integer level, itemtype whichType)",
        "prefix": "ChooseRandomItemExBJ"
    },
    "ChooseRandomNPBuildingBJ": {
        "body": "ChooseRandomNPBuildingBJ()",
        "description": "ChooseRandomNPBuildingBJ ()",
        "prefix": "ChooseRandomNPBuildingBJ"
    },
    "ChooseRandomCreepBJ": {
        "body": "ChooseRandomCreepBJ(${1:level})",
        "description": "ChooseRandomCreepBJ (integer level)",
        "prefix": "ChooseRandomCreepBJ"
    },
    "EnumItemsInRectBJ": {
        "body": "EnumItemsInRectBJ(${1:r}, ${2:actionFunc})",
        "description": "EnumItemsInRectBJ (rect r, code actionFunc)",
        "prefix": "EnumItemsInRectBJ"
    },
    "RandomItemInRectBJEnum": {
        "body": "RandomItemInRectBJEnum()",
        "description": "RandomItemInRectBJEnum ()",
        "prefix": "RandomItemInRectBJEnum"
    },
    "RandomItemInRectBJ": {
        "body": "RandomItemInRectBJ(${1:r}, ${2:filter})",
        "description": "RandomItemInRectBJ (rect r, boolexpr filter)",
        "prefix": "RandomItemInRectBJ"
    },
    "RandomItemInRectSimpleBJ": {
        "body": "RandomItemInRectSimpleBJ(${1:r})",
        "description": "RandomItemInRectSimpleBJ (rect r)",
        "prefix": "RandomItemInRectSimpleBJ"
    },
    "CheckItemStatus": {
        "body": "CheckItemStatus(${1:whichItem}, ${2:status})",
        "description": "CheckItemStatus (item whichItem, integer status)",
        "prefix": "CheckItemStatus"
    },
    "CheckItemcodeStatus": {
        "body": "CheckItemcodeStatus(${1:itemId}, ${2:status})",
        "description": "CheckItemcodeStatus (integer itemId, integer status)",
        "prefix": "CheckItemcodeStatus"
    },
    "UnitId2OrderIdBJ": {
        "body": "UnitId2OrderIdBJ(${1:unitId})",
        "description": "UnitId2OrderIdBJ (integer unitId)",
        "prefix": "UnitId2OrderIdBJ"
    },
    "String2UnitIdBJ": {
        "body": "String2UnitIdBJ(${1:unitIdString})",
        "description": "String2UnitIdBJ (string unitIdString)",
        "prefix": "String2UnitIdBJ"
    },
    "UnitId2StringBJ": {
        "body": "UnitId2StringBJ(${1:unitId})",
        "description": "UnitId2StringBJ (integer unitId)",
        "prefix": "UnitId2StringBJ"
    },
    "String2OrderIdBJ": {
        "body": "String2OrderIdBJ(${1:orderIdString})",
        "description": "String2OrderIdBJ (string orderIdString)",
        "prefix": "String2OrderIdBJ"
    },
    "OrderId2StringBJ": {
        "body": "OrderId2StringBJ(${1:orderId})",
        "description": "OrderId2StringBJ (integer orderId)",
        "prefix": "OrderId2StringBJ"
    },
    "GetIssuedOrderIdBJ": {
        "body": "GetIssuedOrderIdBJ()",
        "description": "GetIssuedOrderIdBJ ()",
        "prefix": "GetIssuedOrderIdBJ"
    },
    "GetKillingUnitBJ": {
        "body": "GetKillingUnitBJ()",
        "description": "GetKillingUnitBJ ()",
        "prefix": "GetKillingUnitBJ"
    },
    "CreateUnitAtLocSaveLast": {
        "body": "CreateUnitAtLocSaveLast(${1:id}, ${2:unitid}, ${3:loc}, ${4:face})",
        "description": "CreateUnitAtLocSaveLast (player id, integer unitid, location loc, real face)",
        "prefix": "CreateUnitAtLocSaveLast"
    },
    "GetLastCreatedUnit": {
        "body": "GetLastCreatedUnit()",
        "description": "GetLastCreatedUnit ()",
        "prefix": "GetLastCreatedUnit"
    },
    "CreateNUnitsAtLoc": {
        "body": "CreateNUnitsAtLoc(${1:count}, ${2:unitId}, ${3:whichPlayer}, ${4:loc}, ${5:face})",
        "description": "CreateNUnitsAtLoc (integer count, integer unitId, player whichPlayer, location loc, real face)",
        "prefix": "CreateNUnitsAtLoc"
    },
    "CreateNUnitsAtLocFacingLocBJ": {
        "body": "CreateNUnitsAtLocFacingLocBJ(${1:count}, ${2:unitId}, ${3:whichPlayer}, ${4:loc}, ${5:lookAt})",
        "description": "CreateNUnitsAtLocFacingLocBJ (integer count, integer unitId, player whichPlayer, location loc, location lookAt)",
        "prefix": "CreateNUnitsAtLocFacingLocBJ"
    },
    "GetLastCreatedGroupEnum": {
        "body": "GetLastCreatedGroupEnum()",
        "description": "GetLastCreatedGroupEnum ()",
        "prefix": "GetLastCreatedGroupEnum"
    },
    "GetLastCreatedGroup": {
        "body": "GetLastCreatedGroup()",
        "description": "GetLastCreatedGroup ()",
        "prefix": "GetLastCreatedGroup"
    },
    "CreateCorpseLocBJ": {
        "body": "CreateCorpseLocBJ(${1:unitid}, ${2:whichPlayer}, ${3:loc})",
        "description": "CreateCorpseLocBJ (integer unitid, player whichPlayer, location loc)",
        "prefix": "CreateCorpseLocBJ"
    },
    "UnitSuspendDecayBJ": {
        "body": "UnitSuspendDecayBJ(${1:suspend}, ${2:whichUnit})",
        "description": "UnitSuspendDecayBJ (boolean suspend, unit whichUnit)",
        "prefix": "UnitSuspendDecayBJ"
    },
    "DelayedSuspendDecayStopAnimEnum": {
        "body": "DelayedSuspendDecayStopAnimEnum()",
        "description": "DelayedSuspendDecayStopAnimEnum ()",
        "prefix": "DelayedSuspendDecayStopAnimEnum"
    },
    "DelayedSuspendDecayBoneEnum": {
        "body": "DelayedSuspendDecayBoneEnum()",
        "description": "DelayedSuspendDecayBoneEnum ()",
        "prefix": "DelayedSuspendDecayBoneEnum"
    },
    "DelayedSuspendDecayFleshEnum": {
        "body": "DelayedSuspendDecayFleshEnum()",
        "description": "DelayedSuspendDecayFleshEnum ()",
        "prefix": "DelayedSuspendDecayFleshEnum"
    },
    "DelayedSuspendDecay": {
        "body": "DelayedSuspendDecay()",
        "description": "DelayedSuspendDecay ()",
        "prefix": "DelayedSuspendDecay"
    },
    "DelayedSuspendDecayCreate": {
        "body": "DelayedSuspendDecayCreate()",
        "description": "DelayedSuspendDecayCreate ()",
        "prefix": "DelayedSuspendDecayCreate"
    },
    "CreatePermanentCorpseLocBJ": {
        "body": "CreatePermanentCorpseLocBJ(${1:style}, ${2:unitid}, ${3:whichPlayer}, ${4:loc}, ${5:facing})",
        "description": "CreatePermanentCorpseLocBJ (integer style, integer unitid, player whichPlayer, location loc, real facing)",
        "prefix": "CreatePermanentCorpseLocBJ"
    },
    "GetUnitStateSwap": {
        "body": "GetUnitStateSwap(${1:whichState}, ${2:whichUnit})",
        "description": "GetUnitStateSwap (unitstate whichState, unit whichUnit)",
        "prefix": "GetUnitStateSwap"
    },
    "GetUnitStatePercent": {
        "body": "GetUnitStatePercent(${1:whichUnit}, ${2:whichState}, ${3:whichMaxState})",
        "description": "GetUnitStatePercent (unit whichUnit, unitstate whichState, unitstate whichMaxState)",
        "prefix": "GetUnitStatePercent"
    },
    "GetUnitLifePercent": {
        "body": "GetUnitLifePercent(${1:whichUnit})",
        "description": "GetUnitLifePercent (unit whichUnit)",
        "prefix": "GetUnitLifePercent"
    },
    "GetUnitManaPercent": {
        "body": "GetUnitManaPercent(${1:whichUnit})",
        "description": "GetUnitManaPercent (unit whichUnit)",
        "prefix": "GetUnitManaPercent"
    },
    "SelectUnitSingle": {
        "body": "SelectUnitSingle(${1:whichUnit})",
        "description": "SelectUnitSingle (unit whichUnit)",
        "prefix": "SelectUnitSingle"
    },
    "SelectGroupBJEnum": {
        "body": "SelectGroupBJEnum()",
        "description": "SelectGroupBJEnum ()",
        "prefix": "SelectGroupBJEnum"
    },
    "SelectGroupBJ": {
        "body": "SelectGroupBJ(${1:g})",
        "description": "SelectGroupBJ (group g)",
        "prefix": "SelectGroupBJ"
    },
    "SelectUnitAdd": {
        "body": "SelectUnitAdd(${1:whichUnit})",
        "description": "SelectUnitAdd (unit whichUnit)",
        "prefix": "SelectUnitAdd"
    },
    "SelectUnitRemove": {
        "body": "SelectUnitRemove(${1:whichUnit})",
        "description": "SelectUnitRemove (unit whichUnit)",
        "prefix": "SelectUnitRemove"
    },
    "ClearSelectionForPlayer": {
        "body": "ClearSelectionForPlayer(${1:whichPlayer})",
        "description": "ClearSelectionForPlayer (player whichPlayer)",
        "prefix": "ClearSelectionForPlayer"
    },
    "SelectUnitForPlayerSingle": {
        "body": "SelectUnitForPlayerSingle(${1:whichUnit}, ${2:whichPlayer})",
        "description": "SelectUnitForPlayerSingle (unit whichUnit, player whichPlayer)",
        "prefix": "SelectUnitForPlayerSingle"
    },
    "SelectGroupForPlayerBJ": {
        "body": "SelectGroupForPlayerBJ(${1:g}, ${2:whichPlayer})",
        "description": "SelectGroupForPlayerBJ (group g, player whichPlayer)",
        "prefix": "SelectGroupForPlayerBJ"
    },
    "SelectUnitAddForPlayer": {
        "body": "SelectUnitAddForPlayer(${1:whichUnit}, ${2:whichPlayer})",
        "description": "SelectUnitAddForPlayer (unit whichUnit, player whichPlayer)",
        "prefix": "SelectUnitAddForPlayer"
    },
    "SelectUnitRemoveForPlayer": {
        "body": "SelectUnitRemoveForPlayer(${1:whichUnit}, ${2:whichPlayer})",
        "description": "SelectUnitRemoveForPlayer (unit whichUnit, player whichPlayer)",
        "prefix": "SelectUnitRemoveForPlayer"
    },
    "SetUnitLifeBJ": {
        "body": "SetUnitLifeBJ(${1:whichUnit}, ${2:newValue})",
        "description": "SetUnitLifeBJ (unit whichUnit, real newValue)",
        "prefix": "SetUnitLifeBJ"
    },
    "SetUnitManaBJ": {
        "body": "SetUnitManaBJ(${1:whichUnit}, ${2:newValue})",
        "description": "SetUnitManaBJ (unit whichUnit, real newValue)",
        "prefix": "SetUnitManaBJ"
    },
    "SetUnitLifePercentBJ": {
        "body": "SetUnitLifePercentBJ(${1:whichUnit}, ${2:percent})",
        "description": "SetUnitLifePercentBJ (unit whichUnit, real percent)",
        "prefix": "SetUnitLifePercentBJ"
    },
    "SetUnitManaPercentBJ": {
        "body": "SetUnitManaPercentBJ(${1:whichUnit}, ${2:percent})",
        "description": "SetUnitManaPercentBJ (unit whichUnit, real percent)",
        "prefix": "SetUnitManaPercentBJ"
    },
    "IsUnitDeadBJ": {
        "body": "IsUnitDeadBJ(${1:whichUnit})",
        "description": "IsUnitDeadBJ (unit whichUnit)",
        "prefix": "IsUnitDeadBJ"
    },
    "IsUnitAliveBJ": {
        "body": "IsUnitAliveBJ(${1:whichUnit})",
        "description": "IsUnitAliveBJ (unit whichUnit)",
        "prefix": "IsUnitAliveBJ"
    },
    "IsUnitGroupDeadBJEnum": {
        "body": "IsUnitGroupDeadBJEnum()",
        "description": "IsUnitGroupDeadBJEnum ()",
        "prefix": "IsUnitGroupDeadBJEnum"
    },
    "IsUnitGroupDeadBJ": {
        "body": "IsUnitGroupDeadBJ(${1:g})",
        "description": "IsUnitGroupDeadBJ (group g)",
        "prefix": "IsUnitGroupDeadBJ"
    },
    "IsUnitGroupEmptyBJEnum": {
        "body": "IsUnitGroupEmptyBJEnum()",
        "description": "IsUnitGroupEmptyBJEnum ()",
        "prefix": "IsUnitGroupEmptyBJEnum"
    },
    "IsUnitGroupEmptyBJ": {
        "body": "IsUnitGroupEmptyBJ(${1:g})",
        "description": "IsUnitGroupEmptyBJ (group g)",
        "prefix": "IsUnitGroupEmptyBJ"
    },
    "IsUnitGroupInRectBJEnum": {
        "body": "IsUnitGroupInRectBJEnum()",
        "description": "IsUnitGroupInRectBJEnum ()",
        "prefix": "IsUnitGroupInRectBJEnum"
    },
    "IsUnitGroupInRectBJ": {
        "body": "IsUnitGroupInRectBJ(${1:g}, ${2:r})",
        "description": "IsUnitGroupInRectBJ (group g, rect r)",
        "prefix": "IsUnitGroupInRectBJ"
    },
    "IsUnitHiddenBJ": {
        "body": "IsUnitHiddenBJ(${1:whichUnit})",
        "description": "IsUnitHiddenBJ (unit whichUnit)",
        "prefix": "IsUnitHiddenBJ"
    },
    "ShowUnitHide": {
        "body": "ShowUnitHide(${1:whichUnit})",
        "description": "ShowUnitHide (unit whichUnit)",
        "prefix": "ShowUnitHide"
    },
    "ShowUnitShow": {
        "body": "ShowUnitShow(${1:whichUnit})",
        "description": "ShowUnitShow (unit whichUnit)",
        "prefix": "ShowUnitShow"
    },
    "IssueHauntOrderAtLocBJFilter": {
        "body": "IssueHauntOrderAtLocBJFilter()",
        "description": "IssueHauntOrderAtLocBJFilter ()",
        "prefix": "IssueHauntOrderAtLocBJFilter"
    },
    "IssueHauntOrderAtLocBJ": {
        "body": "IssueHauntOrderAtLocBJ(${1:whichPeon}, ${2:loc})",
        "description": "IssueHauntOrderAtLocBJ (unit whichPeon, location loc)",
        "prefix": "IssueHauntOrderAtLocBJ"
    },
    "IssueBuildOrderByIdLocBJ": {
        "body": "IssueBuildOrderByIdLocBJ(${1:whichPeon}, ${2:unitId}, ${3:loc})",
        "description": "IssueBuildOrderByIdLocBJ (unit whichPeon, integer unitId, location loc)",
        "prefix": "IssueBuildOrderByIdLocBJ"
    },
    "IssueTrainOrderByIdBJ": {
        "body": "IssueTrainOrderByIdBJ(${1:whichUnit}, ${2:unitId})",
        "description": "IssueTrainOrderByIdBJ (unit whichUnit, integer unitId)",
        "prefix": "IssueTrainOrderByIdBJ"
    },
    "GroupTrainOrderByIdBJ": {
        "body": "GroupTrainOrderByIdBJ(${1:g}, ${2:unitId})",
        "description": "GroupTrainOrderByIdBJ (group g, integer unitId)",
        "prefix": "GroupTrainOrderByIdBJ"
    },
    "IssueUpgradeOrderByIdBJ": {
        "body": "IssueUpgradeOrderByIdBJ(${1:whichUnit}, ${2:techId})",
        "description": "IssueUpgradeOrderByIdBJ (unit whichUnit, integer techId)",
        "prefix": "IssueUpgradeOrderByIdBJ"
    },
    "GetAttackedUnitBJ": {
        "body": "GetAttackedUnitBJ()",
        "description": "GetAttackedUnitBJ ()",
        "prefix": "GetAttackedUnitBJ"
    },
    "SetUnitFlyHeightBJ": {
        "body": "SetUnitFlyHeightBJ(${1:whichUnit}, ${2:newHeight}, ${3:rate})",
        "description": "SetUnitFlyHeightBJ (unit whichUnit, real newHeight, real rate)",
        "prefix": "SetUnitFlyHeightBJ"
    },
    "SetUnitTurnSpeedBJ": {
        "body": "SetUnitTurnSpeedBJ(${1:whichUnit}, ${2:turnSpeed})",
        "description": "SetUnitTurnSpeedBJ (unit whichUnit, real turnSpeed)",
        "prefix": "SetUnitTurnSpeedBJ"
    },
    "SetUnitPropWindowBJ": {
        "body": "SetUnitPropWindowBJ(${1:whichUnit}, ${2:propWindow})",
        "description": "SetUnitPropWindowBJ (unit whichUnit, real propWindow)",
        "prefix": "SetUnitPropWindowBJ"
    },
    "GetUnitPropWindowBJ": {
        "body": "GetUnitPropWindowBJ(${1:whichUnit})",
        "description": "GetUnitPropWindowBJ (unit whichUnit)",
        "prefix": "GetUnitPropWindowBJ"
    },
    "GetUnitDefaultPropWindowBJ": {
        "body": "GetUnitDefaultPropWindowBJ(${1:whichUnit})",
        "description": "GetUnitDefaultPropWindowBJ (unit whichUnit)",
        "prefix": "GetUnitDefaultPropWindowBJ"
    },
    "SetUnitBlendTimeBJ": {
        "body": "SetUnitBlendTimeBJ(${1:whichUnit}, ${2:blendTime})",
        "description": "SetUnitBlendTimeBJ (unit whichUnit, real blendTime)",
        "prefix": "SetUnitBlendTimeBJ"
    },
    "SetUnitAcquireRangeBJ": {
        "body": "SetUnitAcquireRangeBJ(${1:whichUnit}, ${2:acquireRange})",
        "description": "SetUnitAcquireRangeBJ (unit whichUnit, real acquireRange)",
        "prefix": "SetUnitAcquireRangeBJ"
    },
    "UnitSetCanSleepBJ": {
        "body": "UnitSetCanSleepBJ(${1:whichUnit}, ${2:canSleep})",
        "description": "UnitSetCanSleepBJ (unit whichUnit, boolean canSleep)",
        "prefix": "UnitSetCanSleepBJ"
    },
    "UnitCanSleepBJ": {
        "body": "UnitCanSleepBJ(${1:whichUnit})",
        "description": "UnitCanSleepBJ (unit whichUnit)",
        "prefix": "UnitCanSleepBJ"
    },
    "UnitWakeUpBJ": {
        "body": "UnitWakeUpBJ(${1:whichUnit})",
        "description": "UnitWakeUpBJ (unit whichUnit)",
        "prefix": "UnitWakeUpBJ"
    },
    "UnitIsSleepingBJ": {
        "body": "UnitIsSleepingBJ(${1:whichUnit})",
        "description": "UnitIsSleepingBJ (unit whichUnit)",
        "prefix": "UnitIsSleepingBJ"
    },
    "WakePlayerUnitsEnum": {
        "body": "WakePlayerUnitsEnum()",
        "description": "WakePlayerUnitsEnum ()",
        "prefix": "WakePlayerUnitsEnum"
    },
    "WakePlayerUnits": {
        "body": "WakePlayerUnits(${1:whichPlayer})",
        "description": "WakePlayerUnits (player whichPlayer)",
        "prefix": "WakePlayerUnits"
    },
    "EnableCreepSleepBJ": {
        "body": "EnableCreepSleepBJ(${1:enable})",
        "description": "EnableCreepSleepBJ (boolean enable)",
        "prefix": "EnableCreepSleepBJ"
    },
    "UnitGenerateAlarms": {
        "body": "UnitGenerateAlarms(${1:whichUnit}, ${2:generate})",
        "description": "UnitGenerateAlarms (unit whichUnit, boolean generate)",
        "prefix": "UnitGenerateAlarms"
    },
    "DoesUnitGenerateAlarms": {
        "body": "DoesUnitGenerateAlarms(${1:whichUnit})",
        "description": "DoesUnitGenerateAlarms (unit whichUnit)",
        "prefix": "DoesUnitGenerateAlarms"
    },
    "PauseAllUnitsBJEnum": {
        "body": "PauseAllUnitsBJEnum()",
        "description": "PauseAllUnitsBJEnum ()",
        "prefix": "PauseAllUnitsBJEnum"
    },
    "PauseAllUnitsBJ": {
        "body": "PauseAllUnitsBJ(${1:pause})",
        "description": "PauseAllUnitsBJ (boolean pause)",
        "prefix": "PauseAllUnitsBJ"
    },
    "PauseUnitBJ": {
        "body": "PauseUnitBJ(${1:pause}, ${2:whichUnit})",
        "description": "PauseUnitBJ (boolean pause, unit whichUnit)",
        "prefix": "PauseUnitBJ"
    },
    "IsUnitPausedBJ": {
        "body": "IsUnitPausedBJ(${1:whichUnit})",
        "description": "IsUnitPausedBJ (unit whichUnit)",
        "prefix": "IsUnitPausedBJ"
    },
    "UnitPauseTimedLifeBJ": {
        "body": "UnitPauseTimedLifeBJ(${1:flag}, ${2:whichUnit})",
        "description": "UnitPauseTimedLifeBJ (boolean flag, unit whichUnit)",
        "prefix": "UnitPauseTimedLifeBJ"
    },
    "UnitApplyTimedLifeBJ": {
        "body": "UnitApplyTimedLifeBJ(${1:duration}, ${2:buffId}, ${3:whichUnit})",
        "description": "UnitApplyTimedLifeBJ (real duration, integer buffId, unit whichUnit)",
        "prefix": "UnitApplyTimedLifeBJ"
    },
    "UnitShareVisionBJ": {
        "body": "UnitShareVisionBJ(${1:share}, ${2:whichUnit}, ${3:whichPlayer})",
        "description": "UnitShareVisionBJ (boolean share, unit whichUnit, player whichPlayer)",
        "prefix": "UnitShareVisionBJ"
    },
    "UnitRemoveBuffsBJ": {
        "body": "UnitRemoveBuffsBJ(${1:buffType}, ${2:whichUnit})",
        "description": "UnitRemoveBuffsBJ (integer buffType, unit whichUnit)",
        "prefix": "UnitRemoveBuffsBJ"
    },
    "UnitRemoveBuffsExBJ": {
        "body": "UnitRemoveBuffsExBJ(${1:polarity}, ${2:resist}, ${3:whichUnit}, ${4:bTLife}, ${5:bAura})",
        "description": "UnitRemoveBuffsExBJ (integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura)",
        "prefix": "UnitRemoveBuffsExBJ"
    },
    "UnitCountBuffsExBJ": {
        "body": "UnitCountBuffsExBJ(${1:polarity}, ${2:resist}, ${3:whichUnit}, ${4:bTLife}, ${5:bAura})",
        "description": "UnitCountBuffsExBJ (integer polarity, integer resist, unit whichUnit, boolean bTLife, boolean bAura)",
        "prefix": "UnitCountBuffsExBJ"
    },
    "UnitRemoveAbilityBJ": {
        "body": "UnitRemoveAbilityBJ(${1:abilityId}, ${2:whichUnit})",
        "description": "UnitRemoveAbilityBJ (integer abilityId, unit whichUnit)",
        "prefix": "UnitRemoveAbilityBJ"
    },
    "UnitAddAbilityBJ": {
        "body": "UnitAddAbilityBJ(${1:abilityId}, ${2:whichUnit})",
        "description": "UnitAddAbilityBJ (integer abilityId, unit whichUnit)",
        "prefix": "UnitAddAbilityBJ"
    },
    "UnitRemoveTypeBJ": {
        "body": "UnitRemoveTypeBJ(${1:whichType}, ${2:whichUnit})",
        "description": "UnitRemoveTypeBJ (unittype whichType, unit whichUnit)",
        "prefix": "UnitRemoveTypeBJ"
    },
    "UnitAddTypeBJ": {
        "body": "UnitAddTypeBJ(${1:whichType}, ${2:whichUnit})",
        "description": "UnitAddTypeBJ (unittype whichType, unit whichUnit)",
        "prefix": "UnitAddTypeBJ"
    },
    "UnitMakeAbilityPermanentBJ": {
        "body": "UnitMakeAbilityPermanentBJ(${1:permanent}, ${2:abilityId}, ${3:whichUnit})",
        "description": "UnitMakeAbilityPermanentBJ (boolean permanent, integer abilityId, unit whichUnit)",
        "prefix": "UnitMakeAbilityPermanentBJ"
    },
    "SetUnitExplodedBJ": {
        "body": "SetUnitExplodedBJ(${1:whichUnit}, ${2:exploded})",
        "description": "SetUnitExplodedBJ (unit whichUnit, boolean exploded)",
        "prefix": "SetUnitExplodedBJ"
    },
    "ExplodeUnitBJ": {
        "body": "ExplodeUnitBJ(${1:whichUnit})",
        "description": "ExplodeUnitBJ (unit whichUnit)",
        "prefix": "ExplodeUnitBJ"
    },
    "GetTransportUnitBJ": {
        "body": "GetTransportUnitBJ()",
        "description": "GetTransportUnitBJ ()",
        "prefix": "GetTransportUnitBJ"
    },
    "GetLoadedUnitBJ": {
        "body": "GetLoadedUnitBJ()",
        "description": "GetLoadedUnitBJ ()",
        "prefix": "GetLoadedUnitBJ"
    },
    "IsUnitInTransportBJ": {
        "body": "IsUnitInTransportBJ(${1:whichUnit}, ${2:whichTransport})",
        "description": "IsUnitInTransportBJ (unit whichUnit, unit whichTransport)",
        "prefix": "IsUnitInTransportBJ"
    },
    "IsUnitLoadedBJ": {
        "body": "IsUnitLoadedBJ(${1:whichUnit})",
        "description": "IsUnitLoadedBJ (unit whichUnit)",
        "prefix": "IsUnitLoadedBJ"
    },
    "IsUnitIllusionBJ": {
        "body": "IsUnitIllusionBJ(${1:whichUnit})",
        "description": "IsUnitIllusionBJ (unit whichUnit)",
        "prefix": "IsUnitIllusionBJ"
    },
    "ReplaceUnitBJ": {
        "body": "ReplaceUnitBJ(${1:whichUnit}, ${2:newUnitId}, ${3:unitStateMethod})",
        "description": "ReplaceUnitBJ (unit whichUnit, integer newUnitId, integer unitStateMethod)",
        "prefix": "ReplaceUnitBJ"
    },
    "GetLastReplacedUnitBJ": {
        "body": "GetLastReplacedUnitBJ()",
        "description": "GetLastReplacedUnitBJ ()",
        "prefix": "GetLastReplacedUnitBJ"
    },
    "SetUnitPositionLocFacingBJ": {
        "body": "SetUnitPositionLocFacingBJ(${1:whichUnit}, ${2:loc}, ${3:facing})",
        "description": "SetUnitPositionLocFacingBJ (unit whichUnit, location loc, real facing)",
        "prefix": "SetUnitPositionLocFacingBJ"
    },
    "SetUnitPositionLocFacingLocBJ": {
        "body": "SetUnitPositionLocFacingLocBJ(${1:whichUnit}, ${2:loc}, ${3:lookAt})",
        "description": "SetUnitPositionLocFacingLocBJ (unit whichUnit, location loc, location lookAt)",
        "prefix": "SetUnitPositionLocFacingLocBJ"
    },
    "AddItemToStockBJ": {
        "body": "AddItemToStockBJ(${1:itemId}, ${2:whichUnit}, ${3:currentStock}, ${4:stockMax})",
        "description": "AddItemToStockBJ (integer itemId, unit whichUnit, integer currentStock, integer stockMax)",
        "prefix": "AddItemToStockBJ"
    },
    "AddUnitToStockBJ": {
        "body": "AddUnitToStockBJ(${1:unitId}, ${2:whichUnit}, ${3:currentStock}, ${4:stockMax})",
        "description": "AddUnitToStockBJ (integer unitId, unit whichUnit, integer currentStock, integer stockMax)",
        "prefix": "AddUnitToStockBJ"
    },
    "RemoveItemFromStockBJ": {
        "body": "RemoveItemFromStockBJ(${1:itemId}, ${2:whichUnit})",
        "description": "RemoveItemFromStockBJ (integer itemId, unit whichUnit)",
        "prefix": "RemoveItemFromStockBJ"
    },
    "RemoveUnitFromStockBJ": {
        "body": "RemoveUnitFromStockBJ(${1:unitId}, ${2:whichUnit})",
        "description": "RemoveUnitFromStockBJ (integer unitId, unit whichUnit)",
        "prefix": "RemoveUnitFromStockBJ"
    },
    "SetUnitUseFoodBJ": {
        "body": "SetUnitUseFoodBJ(${1:enable}, ${2:whichUnit})",
        "description": "SetUnitUseFoodBJ (boolean enable, unit whichUnit)",
        "prefix": "SetUnitUseFoodBJ"
    },
    "UnitDamagePointLoc": {
        "body": "UnitDamagePointLoc(${1:whichUnit}, ${2:delay}, ${3:radius}, ${4:loc}, ${5:amount}, ${6:whichAttack}, ${7:whichDamage})",
        "description": "UnitDamagePointLoc (unit whichUnit, real delay, real radius, location loc, real amount, attacktype whichAttack, damagetype whichDamage)",
        "prefix": "UnitDamagePointLoc"
    },
    "UnitDamageTargetBJ": {
        "body": "UnitDamageTargetBJ(${1:whichUnit}, ${2:target}, ${3:amount}, ${4:whichAttack}, ${5:whichDamage})",
        "description": "UnitDamageTargetBJ (unit whichUnit, unit target, real amount, attacktype whichAttack, damagetype whichDamage)",
        "prefix": "UnitDamageTargetBJ"
    },
    "CreateDestructableLoc": {
        "body": "CreateDestructableLoc(${1:objectid}, ${2:loc}, ${3:facing}, ${4:scale}, ${5:variation})",
        "description": "CreateDestructableLoc (integer objectid, location loc, real facing, real scale, integer variation)",
        "prefix": "CreateDestructableLoc"
    },
    "CreateDeadDestructableLocBJ": {
        "body": "CreateDeadDestructableLocBJ(${1:objectid}, ${2:loc}, ${3:facing}, ${4:scale}, ${5:variation})",
        "description": "CreateDeadDestructableLocBJ (integer objectid, location loc, real facing, real scale, integer variation)",
        "prefix": "CreateDeadDestructableLocBJ"
    },
    "GetLastCreatedDestructable": {
        "body": "GetLastCreatedDestructable()",
        "description": "GetLastCreatedDestructable ()",
        "prefix": "GetLastCreatedDestructable"
    },
    "ShowDestructableBJ": {
        "body": "ShowDestructableBJ(${1:flag}, ${2:d})",
        "description": "ShowDestructableBJ (boolean flag, destructable d)",
        "prefix": "ShowDestructableBJ"
    },
    "SetDestructableInvulnerableBJ": {
        "body": "SetDestructableInvulnerableBJ(${1:d}, ${2:flag})",
        "description": "SetDestructableInvulnerableBJ (destructable d, boolean flag)",
        "prefix": "SetDestructableInvulnerableBJ"
    },
    "IsDestructableInvulnerableBJ": {
        "body": "IsDestructableInvulnerableBJ(${1:d})",
        "description": "IsDestructableInvulnerableBJ (destructable d)",
        "prefix": "IsDestructableInvulnerableBJ"
    },
    "GetDestructableLoc": {
        "body": "GetDestructableLoc(${1:whichDestructable})",
        "description": "GetDestructableLoc (destructable whichDestructable)",
        "prefix": "GetDestructableLoc"
    },
    "EnumDestructablesInRectAll": {
        "body": "EnumDestructablesInRectAll(${1:r}, ${2:actionFunc})",
        "description": "EnumDestructablesInRectAll (rect r, code actionFunc)",
        "prefix": "EnumDestructablesInRectAll"
    },
    "EnumDestructablesInCircleBJFilter": {
        "body": "EnumDestructablesInCircleBJFilter()",
        "description": "EnumDestructablesInCircleBJFilter ()",
        "prefix": "EnumDestructablesInCircleBJFilter"
    },
    "IsDestructableDeadBJ": {
        "body": "IsDestructableDeadBJ(${1:d})",
        "description": "IsDestructableDeadBJ (destructable d)",
        "prefix": "IsDestructableDeadBJ"
    },
    "IsDestructableAliveBJ": {
        "body": "IsDestructableAliveBJ(${1:d})",
        "description": "IsDestructableAliveBJ (destructable d)",
        "prefix": "IsDestructableAliveBJ"
    },
    "RandomDestructableInRectBJEnum": {
        "body": "RandomDestructableInRectBJEnum()",
        "description": "RandomDestructableInRectBJEnum ()",
        "prefix": "RandomDestructableInRectBJEnum"
    },
    "RandomDestructableInRectBJ": {
        "body": "RandomDestructableInRectBJ(${1:r}, ${2:filter})",
        "description": "RandomDestructableInRectBJ (rect r, boolexpr filter)",
        "prefix": "RandomDestructableInRectBJ"
    },
    "RandomDestructableInRectSimpleBJ": {
        "body": "RandomDestructableInRectSimpleBJ(${1:r})",
        "description": "RandomDestructableInRectSimpleBJ (rect r)",
        "prefix": "RandomDestructableInRectSimpleBJ"
    },
    "EnumDestructablesInCircleBJ": {
        "body": "EnumDestructablesInCircleBJ(${1:radius}, ${2:loc}, ${3:actionFunc})",
        "description": "EnumDestructablesInCircleBJ (real radius, location loc, code actionFunc)",
        "prefix": "EnumDestructablesInCircleBJ"
    },
    "SetDestructableLifePercentBJ": {
        "body": "SetDestructableLifePercentBJ(${1:d}, ${2:percent})",
        "description": "SetDestructableLifePercentBJ (destructable d, real percent)",
        "prefix": "SetDestructableLifePercentBJ"
    },
    "SetDestructableMaxLifeBJ": {
        "body": "SetDestructableMaxLifeBJ(${1:d}, ${2:max})",
        "description": "SetDestructableMaxLifeBJ (destructable d, real max)",
        "prefix": "SetDestructableMaxLifeBJ"
    },
    "ModifyGateBJ": {
        "body": "ModifyGateBJ(${1:gateOperation}, ${2:d})",
        "description": "ModifyGateBJ (integer gateOperation, destructable d)",
        "prefix": "ModifyGateBJ"
    },
    "GetElevatorHeight": {
        "body": "GetElevatorHeight(${1:d})",
        "description": "GetElevatorHeight (destructable d)",
        "prefix": "GetElevatorHeight"
    },
    "ChangeElevatorHeight": {
        "body": "ChangeElevatorHeight(${1:d}, ${2:newHeight})",
        "description": "ChangeElevatorHeight (destructable d, integer newHeight)",
        "prefix": "ChangeElevatorHeight"
    },
    "NudgeUnitsInRectEnum": {
        "body": "NudgeUnitsInRectEnum()",
        "description": "NudgeUnitsInRectEnum ()",
        "prefix": "NudgeUnitsInRectEnum"
    },
    "NudgeItemsInRectEnum": {
        "body": "NudgeItemsInRectEnum()",
        "description": "NudgeItemsInRectEnum ()",
        "prefix": "NudgeItemsInRectEnum"
    },
    "NudgeObjectsInRect": {
        "body": "NudgeObjectsInRect(${1:nudgeArea})",
        "description": "NudgeObjectsInRect (rect nudgeArea)",
        "prefix": "NudgeObjectsInRect"
    },
    "NearbyElevatorExistsEnum": {
        "body": "NearbyElevatorExistsEnum()",
        "description": "NearbyElevatorExistsEnum ()",
        "prefix": "NearbyElevatorExistsEnum"
    },
    "NearbyElevatorExists": {
        "body": "NearbyElevatorExists(${1:x}, ${2:y})",
        "description": "NearbyElevatorExists (real x, real y)",
        "prefix": "NearbyElevatorExists"
    },
    "FindElevatorWallBlockerEnum": {
        "body": "FindElevatorWallBlockerEnum()",
        "description": "FindElevatorWallBlockerEnum ()",
        "prefix": "FindElevatorWallBlockerEnum"
    },
    "ChangeElevatorWallBlocker": {
        "body": "ChangeElevatorWallBlocker(${1:x}, ${2:y}, ${3:facing}, ${4:open})",
        "description": "ChangeElevatorWallBlocker (real x, real y, real facing, boolean open)",
        "prefix": "ChangeElevatorWallBlocker"
    },
    "ChangeElevatorWalls": {
        "body": "ChangeElevatorWalls(${1:open}, ${2:walls}, ${3:d})",
        "description": "ChangeElevatorWalls (boolean open, integer walls, destructable d)",
        "prefix": "ChangeElevatorWalls"
    },
    "WaygateActivateBJ": {
        "body": "WaygateActivateBJ(${1:activate}, ${2:waygate})",
        "description": "WaygateActivateBJ (boolean activate, unit waygate)",
        "prefix": "WaygateActivateBJ"
    },
    "WaygateIsActiveBJ": {
        "body": "WaygateIsActiveBJ(${1:waygate})",
        "description": "WaygateIsActiveBJ (unit waygate)",
        "prefix": "WaygateIsActiveBJ"
    },
    "WaygateSetDestinationLocBJ": {
        "body": "WaygateSetDestinationLocBJ(${1:waygate}, ${2:loc})",
        "description": "WaygateSetDestinationLocBJ (unit waygate, location loc)",
        "prefix": "WaygateSetDestinationLocBJ"
    },
    "WaygateGetDestinationLocBJ": {
        "body": "WaygateGetDestinationLocBJ(${1:waygate})",
        "description": "WaygateGetDestinationLocBJ (unit waygate)",
        "prefix": "WaygateGetDestinationLocBJ"
    },
    "UnitSetUsesAltIconBJ": {
        "body": "UnitSetUsesAltIconBJ(${1:flag}, ${2:whichUnit})",
        "description": "UnitSetUsesAltIconBJ (boolean flag, unit whichUnit)",
        "prefix": "UnitSetUsesAltIconBJ"
    },
    "ForceUIKeyBJ": {
        "body": "ForceUIKeyBJ(${1:whichPlayer}, ${2:key})",
        "description": "ForceUIKeyBJ (player whichPlayer, string key)",
        "prefix": "ForceUIKeyBJ"
    },
    "ForceUICancelBJ": {
        "body": "ForceUICancelBJ(${1:whichPlayer})",
        "description": "ForceUICancelBJ (player whichPlayer)",
        "prefix": "ForceUICancelBJ"
    },
    "ForGroupBJ": {
        "body": "ForGroupBJ(${1:whichGroup}, ${2:callback})",
        "description": "ForGroupBJ (group whichGroup, code callback)",
        "prefix": "ForGroupBJ"
    },
    "GroupAddUnitSimple": {
        "body": "GroupAddUnitSimple(${1:whichUnit}, ${2:whichGroup})",
        "description": "GroupAddUnitSimple (unit whichUnit, group whichGroup)",
        "prefix": "GroupAddUnitSimple"
    },
    "GroupRemoveUnitSimple": {
        "body": "GroupRemoveUnitSimple(${1:whichUnit}, ${2:whichGroup})",
        "description": "GroupRemoveUnitSimple (unit whichUnit, group whichGroup)",
        "prefix": "GroupRemoveUnitSimple"
    },
    "GroupAddGroupEnum": {
        "body": "GroupAddGroupEnum()",
        "description": "GroupAddGroupEnum ()",
        "prefix": "GroupAddGroupEnum"
    },
    "GroupAddGroup": {
        "body": "GroupAddGroup(${1:sourceGroup}, ${2:destGroup})",
        "description": "GroupAddGroup (group sourceGroup, group destGroup)",
        "prefix": "GroupAddGroup"
    },
    "GroupRemoveGroupEnum": {
        "body": "GroupRemoveGroupEnum()",
        "description": "GroupRemoveGroupEnum ()",
        "prefix": "GroupRemoveGroupEnum"
    },
    "GroupRemoveGroup": {
        "body": "GroupRemoveGroup(${1:sourceGroup}, ${2:destGroup})",
        "description": "GroupRemoveGroup (group sourceGroup, group destGroup)",
        "prefix": "GroupRemoveGroup"
    },
    "ForceAddPlayerSimple": {
        "body": "ForceAddPlayerSimple(${1:whichPlayer}, ${2:whichForce})",
        "description": "ForceAddPlayerSimple (player whichPlayer, force whichForce)",
        "prefix": "ForceAddPlayerSimple"
    },
    "ForceRemovePlayerSimple": {
        "body": "ForceRemovePlayerSimple(${1:whichPlayer}, ${2:whichForce})",
        "description": "ForceRemovePlayerSimple (player whichPlayer, force whichForce)",
        "prefix": "ForceRemovePlayerSimple"
    },
    "GroupPickRandomUnitEnum": {
        "body": "GroupPickRandomUnitEnum()",
        "description": "GroupPickRandomUnitEnum ()",
        "prefix": "GroupPickRandomUnitEnum"
    },
    "GroupPickRandomUnit": {
        "body": "GroupPickRandomUnit(${1:whichGroup})",
        "description": "GroupPickRandomUnit (group whichGroup)",
        "prefix": "GroupPickRandomUnit"
    },
    "ForcePickRandomPlayerEnum": {
        "body": "ForcePickRandomPlayerEnum()",
        "description": "ForcePickRandomPlayerEnum ()",
        "prefix": "ForcePickRandomPlayerEnum"
    },
    "ForcePickRandomPlayer": {
        "body": "ForcePickRandomPlayer(${1:whichForce})",
        "description": "ForcePickRandomPlayer (force whichForce)",
        "prefix": "ForcePickRandomPlayer"
    },
    "EnumUnitsSelected": {
        "body": "EnumUnitsSelected(${1:whichPlayer}, ${2:enumFilter}, ${3:enumAction})",
        "description": "EnumUnitsSelected (player whichPlayer, boolexpr enumFilter, code enumAction)",
        "prefix": "EnumUnitsSelected"
    },
    "GetUnitsInRectMatching": {
        "body": "GetUnitsInRectMatching(${1:r}, ${2:filter})",
        "description": "GetUnitsInRectMatching (rect r, boolexpr filter)",
        "prefix": "GetUnitsInRectMatching"
    },
    "GetUnitsInRectAll": {
        "body": "GetUnitsInRectAll(${1:r})",
        "description": "GetUnitsInRectAll (rect r)",
        "prefix": "GetUnitsInRectAll"
    },
    "GetUnitsInRectOfPlayerFilter": {
        "body": "GetUnitsInRectOfPlayerFilter()",
        "description": "GetUnitsInRectOfPlayerFilter ()",
        "prefix": "GetUnitsInRectOfPlayerFilter"
    },
    "GetUnitsInRectOfPlayer": {
        "body": "GetUnitsInRectOfPlayer(${1:r}, ${2:whichPlayer})",
        "description": "GetUnitsInRectOfPlayer (rect r, player whichPlayer)",
        "prefix": "GetUnitsInRectOfPlayer"
    },
    "GetUnitsInRangeOfLocMatching": {
        "body": "GetUnitsInRangeOfLocMatching(${1:radius}, ${2:whichLocation}, ${3:filter})",
        "description": "GetUnitsInRangeOfLocMatching (real radius, location whichLocation, boolexpr filter)",
        "prefix": "GetUnitsInRangeOfLocMatching"
    },
    "GetUnitsInRangeOfLocAll": {
        "body": "GetUnitsInRangeOfLocAll(${1:radius}, ${2:whichLocation})",
        "description": "GetUnitsInRangeOfLocAll (real radius, location whichLocation)",
        "prefix": "GetUnitsInRangeOfLocAll"
    },
    "GetUnitsOfTypeIdAllFilter": {
        "body": "GetUnitsOfTypeIdAllFilter()",
        "description": "GetUnitsOfTypeIdAllFilter ()",
        "prefix": "GetUnitsOfTypeIdAllFilter"
    },
    "GetUnitsOfTypeIdAll": {
        "body": "GetUnitsOfTypeIdAll(${1:unitid})",
        "description": "GetUnitsOfTypeIdAll (integer unitid)",
        "prefix": "GetUnitsOfTypeIdAll"
    },
    "GetUnitsOfPlayerMatching": {
        "body": "GetUnitsOfPlayerMatching(${1:whichPlayer}, ${2:filter})",
        "description": "GetUnitsOfPlayerMatching (player whichPlayer, boolexpr filter)",
        "prefix": "GetUnitsOfPlayerMatching"
    },
    "GetUnitsOfPlayerAll": {
        "body": "GetUnitsOfPlayerAll(${1:whichPlayer})",
        "description": "GetUnitsOfPlayerAll (player whichPlayer)",
        "prefix": "GetUnitsOfPlayerAll"
    },
    "GetUnitsOfPlayerAndTypeIdFilter": {
        "body": "GetUnitsOfPlayerAndTypeIdFilter()",
        "description": "GetUnitsOfPlayerAndTypeIdFilter ()",
        "prefix": "GetUnitsOfPlayerAndTypeIdFilter"
    },
    "GetUnitsOfPlayerAndTypeId": {
        "body": "GetUnitsOfPlayerAndTypeId(${1:whichPlayer}, ${2:unitid})",
        "description": "GetUnitsOfPlayerAndTypeId (player whichPlayer, integer unitid)",
        "prefix": "GetUnitsOfPlayerAndTypeId"
    },
    "GetUnitsSelectedAll": {
        "body": "GetUnitsSelectedAll(${1:whichPlayer})",
        "description": "GetUnitsSelectedAll (player whichPlayer)",
        "prefix": "GetUnitsSelectedAll"
    },
    "GetForceOfPlayer": {
        "body": "GetForceOfPlayer(${1:whichPlayer})",
        "description": "GetForceOfPlayer (player whichPlayer)",
        "prefix": "GetForceOfPlayer"
    },
    "GetPlayersAll": {
        "body": "GetPlayersAll()",
        "description": "GetPlayersAll ()",
        "prefix": "GetPlayersAll"
    },
    "GetPlayersByMapControl": {
        "body": "GetPlayersByMapControl(${1:whichControl})",
        "description": "GetPlayersByMapControl (mapcontrol whichControl)",
        "prefix": "GetPlayersByMapControl"
    },
    "GetPlayersAllies": {
        "body": "GetPlayersAllies(${1:whichPlayer})",
        "description": "GetPlayersAllies (player whichPlayer)",
        "prefix": "GetPlayersAllies"
    },
    "GetPlayersEnemies": {
        "body": "GetPlayersEnemies(${1:whichPlayer})",
        "description": "GetPlayersEnemies (player whichPlayer)",
        "prefix": "GetPlayersEnemies"
    },
    "GetPlayersMatching": {
        "body": "GetPlayersMatching(${1:filter})",
        "description": "GetPlayersMatching (boolexpr filter)",
        "prefix": "GetPlayersMatching"
    },
    "CountUnitsInGroupEnum": {
        "body": "CountUnitsInGroupEnum()",
        "description": "CountUnitsInGroupEnum ()",
        "prefix": "CountUnitsInGroupEnum"
    },
    "CountUnitsInGroup": {
        "body": "CountUnitsInGroup(${1:g})",
        "description": "CountUnitsInGroup (group g)",
        "prefix": "CountUnitsInGroup"
    },
    "CountPlayersInForceEnum": {
        "body": "CountPlayersInForceEnum()",
        "description": "CountPlayersInForceEnum ()",
        "prefix": "CountPlayersInForceEnum"
    },
    "CountPlayersInForceBJ": {
        "body": "CountPlayersInForceBJ(${1:f})",
        "description": "CountPlayersInForceBJ (force f)",
        "prefix": "CountPlayersInForceBJ"
    },
    "GetRandomSubGroupEnum": {
        "body": "GetRandomSubGroupEnum()",
        "description": "GetRandomSubGroupEnum ()",
        "prefix": "GetRandomSubGroupEnum"
    },
    "GetRandomSubGroup": {
        "body": "GetRandomSubGroup(${1:count}, ${2:sourceGroup})",
        "description": "GetRandomSubGroup (integer count, group sourceGroup)",
        "prefix": "GetRandomSubGroup"
    },
    "LivingPlayerUnitsOfTypeIdFilter": {
        "body": "LivingPlayerUnitsOfTypeIdFilter()",
        "description": "LivingPlayerUnitsOfTypeIdFilter ()",
        "prefix": "LivingPlayerUnitsOfTypeIdFilter"
    },
    "CountLivingPlayerUnitsOfTypeId": {
        "body": "CountLivingPlayerUnitsOfTypeId(${1:unitId}, ${2:whichPlayer})",
        "description": "CountLivingPlayerUnitsOfTypeId (integer unitId, player whichPlayer)",
        "prefix": "CountLivingPlayerUnitsOfTypeId"
    },
    "ResetUnitAnimation": {
        "body": "ResetUnitAnimation(${1:whichUnit})",
        "description": "ResetUnitAnimation (unit whichUnit)",
        "prefix": "ResetUnitAnimation"
    },
    "SetUnitTimeScalePercent": {
        "body": "SetUnitTimeScalePercent(${1:whichUnit}, ${2:percentScale})",
        "description": "SetUnitTimeScalePercent (unit whichUnit, real percentScale)",
        "prefix": "SetUnitTimeScalePercent"
    },
    "SetUnitScalePercent": {
        "body": "SetUnitScalePercent(${1:whichUnit}, ${2:percentScaleX}, ${3:percentScaleY}, ${4:percentScaleZ})",
        "description": "SetUnitScalePercent (unit whichUnit, real percentScaleX, real percentScaleY, real percentScaleZ)",
        "prefix": "SetUnitScalePercent"
    },
    "SetUnitVertexColorBJ": {
        "body": "SetUnitVertexColorBJ(${1:whichUnit}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "SetUnitVertexColorBJ (unit whichUnit, real red, real green, real blue, real transparency)",
        "prefix": "SetUnitVertexColorBJ"
    },
    "UnitAddIndicatorBJ": {
        "body": "UnitAddIndicatorBJ(${1:whichUnit}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "UnitAddIndicatorBJ (unit whichUnit, real red, real green, real blue, real transparency)",
        "prefix": "UnitAddIndicatorBJ"
    },
    "DestructableAddIndicatorBJ": {
        "body": "DestructableAddIndicatorBJ(${1:whichDestructable}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "DestructableAddIndicatorBJ (destructable whichDestructable, real red, real green, real blue, real transparency)",
        "prefix": "DestructableAddIndicatorBJ"
    },
    "ItemAddIndicatorBJ": {
        "body": "ItemAddIndicatorBJ(${1:whichItem}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "ItemAddIndicatorBJ (item whichItem, real red, real green, real blue, real transparency)",
        "prefix": "ItemAddIndicatorBJ"
    },
    "SetUnitFacingToFaceLocTimed": {
        "body": "SetUnitFacingToFaceLocTimed(${1:whichUnit}, ${2:target}, ${3:duration})",
        "description": "SetUnitFacingToFaceLocTimed (unit whichUnit, location target, real duration)",
        "prefix": "SetUnitFacingToFaceLocTimed"
    },
    "SetUnitFacingToFaceUnitTimed": {
        "body": "SetUnitFacingToFaceUnitTimed(${1:whichUnit}, ${2:target}, ${3:duration})",
        "description": "SetUnitFacingToFaceUnitTimed (unit whichUnit, unit target, real duration)",
        "prefix": "SetUnitFacingToFaceUnitTimed"
    },
    "QueueUnitAnimationBJ": {
        "body": "QueueUnitAnimationBJ(${1:whichUnit}, ${2:whichAnimation})",
        "description": "QueueUnitAnimationBJ (unit whichUnit, string whichAnimation)",
        "prefix": "QueueUnitAnimationBJ"
    },
    "SetDestructableAnimationBJ": {
        "body": "SetDestructableAnimationBJ(${1:d}, ${2:whichAnimation})",
        "description": "SetDestructableAnimationBJ (destructable d, string whichAnimation)",
        "prefix": "SetDestructableAnimationBJ"
    },
    "QueueDestructableAnimationBJ": {
        "body": "QueueDestructableAnimationBJ(${1:d}, ${2:whichAnimation})",
        "description": "QueueDestructableAnimationBJ (destructable d, string whichAnimation)",
        "prefix": "QueueDestructableAnimationBJ"
    },
    "SetDestAnimationSpeedPercent": {
        "body": "SetDestAnimationSpeedPercent(${1:d}, ${2:percentScale})",
        "description": "SetDestAnimationSpeedPercent (destructable d, real percentScale)",
        "prefix": "SetDestAnimationSpeedPercent"
    },
    "DialogDisplayBJ": {
        "body": "DialogDisplayBJ(${1:flag}, ${2:whichDialog}, ${3:whichPlayer})",
        "description": "DialogDisplayBJ (boolean flag, dialog whichDialog, player whichPlayer)",
        "prefix": "DialogDisplayBJ"
    },
    "DialogSetMessageBJ": {
        "body": "DialogSetMessageBJ(${1:whichDialog}, ${2:message})",
        "description": "DialogSetMessageBJ (dialog whichDialog, string message)",
        "prefix": "DialogSetMessageBJ"
    },
    "DialogAddButtonBJ": {
        "body": "DialogAddButtonBJ(${1:whichDialog}, ${2:buttonText})",
        "description": "DialogAddButtonBJ (dialog whichDialog, string buttonText)",
        "prefix": "DialogAddButtonBJ"
    },
    "DialogAddButtonWithHotkeyBJ": {
        "body": "DialogAddButtonWithHotkeyBJ(${1:whichDialog}, ${2:buttonText}, ${3:hotkey})",
        "description": "DialogAddButtonWithHotkeyBJ (dialog whichDialog, string buttonText, integer hotkey)",
        "prefix": "DialogAddButtonWithHotkeyBJ"
    },
    "DialogClearBJ": {
        "body": "DialogClearBJ(${1:whichDialog})",
        "description": "DialogClearBJ (dialog whichDialog)",
        "prefix": "DialogClearBJ"
    },
    "GetLastCreatedButtonBJ": {
        "body": "GetLastCreatedButtonBJ()",
        "description": "GetLastCreatedButtonBJ ()",
        "prefix": "GetLastCreatedButtonBJ"
    },
    "GetClickedButtonBJ": {
        "body": "GetClickedButtonBJ()",
        "description": "GetClickedButtonBJ ()",
        "prefix": "GetClickedButtonBJ"
    },
    "GetClickedDialogBJ": {
        "body": "GetClickedDialogBJ()",
        "description": "GetClickedDialogBJ ()",
        "prefix": "GetClickedDialogBJ"
    },
    "SetPlayerAllianceBJ": {
        "body": "SetPlayerAllianceBJ(${1:sourcePlayer}, ${2:whichAllianceSetting}, ${3:value}, ${4:otherPlayer})",
        "description": "SetPlayerAllianceBJ (player sourcePlayer, alliancetype whichAllianceSetting, boolean value, player otherPlayer)",
        "prefix": "SetPlayerAllianceBJ"
    },
    "SetPlayerAllianceStateAllyBJ": {
        "body": "SetPlayerAllianceStateAllyBJ(${1:sourcePlayer}, ${2:otherPlayer}, ${3:flag})",
        "description": "SetPlayerAllianceStateAllyBJ (player sourcePlayer, player otherPlayer, boolean flag)",
        "prefix": "SetPlayerAllianceStateAllyBJ"
    },
    "SetPlayerAllianceStateVisionBJ": {
        "body": "SetPlayerAllianceStateVisionBJ(${1:sourcePlayer}, ${2:otherPlayer}, ${3:flag})",
        "description": "SetPlayerAllianceStateVisionBJ (player sourcePlayer, player otherPlayer, boolean flag)",
        "prefix": "SetPlayerAllianceStateVisionBJ"
    },
    "SetPlayerAllianceStateControlBJ": {
        "body": "SetPlayerAllianceStateControlBJ(${1:sourcePlayer}, ${2:otherPlayer}, ${3:flag})",
        "description": "SetPlayerAllianceStateControlBJ (player sourcePlayer, player otherPlayer, boolean flag)",
        "prefix": "SetPlayerAllianceStateControlBJ"
    },
    "SetPlayerAllianceStateFullControlBJ": {
        "body": "SetPlayerAllianceStateFullControlBJ(${1:sourcePlayer}, ${2:otherPlayer}, ${3:flag})",
        "description": "SetPlayerAllianceStateFullControlBJ (player sourcePlayer, player otherPlayer, boolean flag)",
        "prefix": "SetPlayerAllianceStateFullControlBJ"
    },
    "SetPlayerAllianceStateBJ": {
        "body": "SetPlayerAllianceStateBJ(${1:sourcePlayer}, ${2:otherPlayer}, ${3:allianceState})",
        "description": "SetPlayerAllianceStateBJ (player sourcePlayer, player otherPlayer, integer allianceState)",
        "prefix": "SetPlayerAllianceStateBJ"
    },
    "SetForceAllianceStateBJ": {
        "body": "SetForceAllianceStateBJ(${1:sourceForce}, ${2:targetForce}, ${3:allianceState})",
        "description": "SetForceAllianceStateBJ (force sourceForce, force targetForce, integer allianceState)",
        "prefix": "SetForceAllianceStateBJ"
    },
    "PlayersAreCoAllied": {
        "body": "PlayersAreCoAllied(${1:playerA}, ${2:playerB})",
        "description": "PlayersAreCoAllied (player playerA, player playerB)",
        "prefix": "PlayersAreCoAllied"
    },
    "ShareEverythingWithTeamAI": {
        "body": "ShareEverythingWithTeamAI(${1:whichPlayer})",
        "description": "ShareEverythingWithTeamAI (player whichPlayer)",
        "prefix": "ShareEverythingWithTeamAI"
    },
    "ShareEverythingWithTeam": {
        "body": "ShareEverythingWithTeam(${1:whichPlayer})",
        "description": "ShareEverythingWithTeam (player whichPlayer)",
        "prefix": "ShareEverythingWithTeam"
    },
    "ConfigureNeutralVictim": {
        "body": "ConfigureNeutralVictim()",
        "description": "ConfigureNeutralVictim ()",
        "prefix": "ConfigureNeutralVictim"
    },
    "MakeUnitsPassiveForPlayerEnum": {
        "body": "MakeUnitsPassiveForPlayerEnum()",
        "description": "MakeUnitsPassiveForPlayerEnum ()",
        "prefix": "MakeUnitsPassiveForPlayerEnum"
    },
    "MakeUnitsPassiveForPlayer": {
        "body": "MakeUnitsPassiveForPlayer(${1:whichPlayer})",
        "description": "MakeUnitsPassiveForPlayer (player whichPlayer)",
        "prefix": "MakeUnitsPassiveForPlayer"
    },
    "MakeUnitsPassiveForTeam": {
        "body": "MakeUnitsPassiveForTeam(${1:whichPlayer})",
        "description": "MakeUnitsPassiveForTeam (player whichPlayer)",
        "prefix": "MakeUnitsPassiveForTeam"
    },
    "AllowVictoryDefeat": {
        "body": "AllowVictoryDefeat(${1:gameResult})",
        "description": "AllowVictoryDefeat (playergameresult gameResult)",
        "prefix": "AllowVictoryDefeat"
    },
    "EndGameBJ": {
        "body": "EndGameBJ()",
        "description": "EndGameBJ ()",
        "prefix": "EndGameBJ"
    },
    "MeleeVictoryDialogBJ": {
        "body": "MeleeVictoryDialogBJ(${1:whichPlayer}, ${2:leftGame})",
        "description": "MeleeVictoryDialogBJ (player whichPlayer, boolean leftGame)",
        "prefix": "MeleeVictoryDialogBJ"
    },
    "MeleeDefeatDialogBJ": {
        "body": "MeleeDefeatDialogBJ(${1:whichPlayer}, ${2:leftGame})",
        "description": "MeleeDefeatDialogBJ (player whichPlayer, boolean leftGame)",
        "prefix": "MeleeDefeatDialogBJ"
    },
    "GameOverDialogBJ": {
        "body": "GameOverDialogBJ(${1:whichPlayer}, ${2:leftGame})",
        "description": "GameOverDialogBJ (player whichPlayer, boolean leftGame)",
        "prefix": "GameOverDialogBJ"
    },
    "RemovePlayerPreserveUnitsBJ": {
        "body": "RemovePlayerPreserveUnitsBJ(${1:whichPlayer}, ${2:gameResult}, ${3:leftGame})",
        "description": "RemovePlayerPreserveUnitsBJ (player whichPlayer, playergameresult gameResult, boolean leftGame)",
        "prefix": "RemovePlayerPreserveUnitsBJ"
    },
    "CustomVictoryOkBJ": {
        "body": "CustomVictoryOkBJ()",
        "description": "CustomVictoryOkBJ ()",
        "prefix": "CustomVictoryOkBJ"
    },
    "CustomVictoryQuitBJ": {
        "body": "CustomVictoryQuitBJ()",
        "description": "CustomVictoryQuitBJ ()",
        "prefix": "CustomVictoryQuitBJ"
    },
    "CustomVictoryDialogBJ": {
        "body": "CustomVictoryDialogBJ(${1:whichPlayer})",
        "description": "CustomVictoryDialogBJ (player whichPlayer)",
        "prefix": "CustomVictoryDialogBJ"
    },
    "CustomVictorySkipBJ": {
        "body": "CustomVictorySkipBJ(${1:whichPlayer})",
        "description": "CustomVictorySkipBJ (player whichPlayer)",
        "prefix": "CustomVictorySkipBJ"
    },
    "CustomVictoryBJ": {
        "body": "CustomVictoryBJ(${1:whichPlayer}, ${2:showDialog}, ${3:showScores})",
        "description": "CustomVictoryBJ (player whichPlayer, boolean showDialog, boolean showScores)",
        "prefix": "CustomVictoryBJ"
    },
    "CustomDefeatRestartBJ": {
        "body": "CustomDefeatRestartBJ()",
        "description": "CustomDefeatRestartBJ ()",
        "prefix": "CustomDefeatRestartBJ"
    },
    "CustomDefeatReduceDifficultyBJ": {
        "body": "CustomDefeatReduceDifficultyBJ()",
        "description": "CustomDefeatReduceDifficultyBJ ()",
        "prefix": "CustomDefeatReduceDifficultyBJ"
    },
    "CustomDefeatLoadBJ": {
        "body": "CustomDefeatLoadBJ()",
        "description": "CustomDefeatLoadBJ ()",
        "prefix": "CustomDefeatLoadBJ"
    },
    "CustomDefeatQuitBJ": {
        "body": "CustomDefeatQuitBJ()",
        "description": "CustomDefeatQuitBJ ()",
        "prefix": "CustomDefeatQuitBJ"
    },
    "CustomDefeatDialogBJ": {
        "body": "CustomDefeatDialogBJ(${1:whichPlayer}, ${2:message})",
        "description": "CustomDefeatDialogBJ (player whichPlayer, string message)",
        "prefix": "CustomDefeatDialogBJ"
    },
    "CustomDefeatBJ": {
        "body": "CustomDefeatBJ(${1:whichPlayer}, ${2:message})",
        "description": "CustomDefeatBJ (player whichPlayer, string message)",
        "prefix": "CustomDefeatBJ"
    },
    "SetNextLevelBJ": {
        "body": "SetNextLevelBJ(${1:nextLevel})",
        "description": "SetNextLevelBJ (string nextLevel)",
        "prefix": "SetNextLevelBJ"
    },
    "SetPlayerOnScoreScreenBJ": {
        "body": "SetPlayerOnScoreScreenBJ(${1:flag}, ${2:whichPlayer})",
        "description": "SetPlayerOnScoreScreenBJ (boolean flag, player whichPlayer)",
        "prefix": "SetPlayerOnScoreScreenBJ"
    },
    "CreateQuestBJ": {
        "body": "CreateQuestBJ(${1:questType}, ${2:title}, ${3:description}, ${4:iconPath})",
        "description": "CreateQuestBJ (integer questType, string title, string description, string iconPath)",
        "prefix": "CreateQuestBJ"
    },
    "DestroyQuestBJ": {
        "body": "DestroyQuestBJ(${1:whichQuest})",
        "description": "DestroyQuestBJ (quest whichQuest)",
        "prefix": "DestroyQuestBJ"
    },
    "QuestSetEnabledBJ": {
        "body": "QuestSetEnabledBJ(${1:enabled}, ${2:whichQuest})",
        "description": "QuestSetEnabledBJ (boolean enabled, quest whichQuest)",
        "prefix": "QuestSetEnabledBJ"
    },
    "QuestSetTitleBJ": {
        "body": "QuestSetTitleBJ(${1:whichQuest}, ${2:title})",
        "description": "QuestSetTitleBJ (quest whichQuest, string title)",
        "prefix": "QuestSetTitleBJ"
    },
    "QuestSetDescriptionBJ": {
        "body": "QuestSetDescriptionBJ(${1:whichQuest}, ${2:description})",
        "description": "QuestSetDescriptionBJ (quest whichQuest, string description)",
        "prefix": "QuestSetDescriptionBJ"
    },
    "QuestSetCompletedBJ": {
        "body": "QuestSetCompletedBJ(${1:whichQuest}, ${2:completed})",
        "description": "QuestSetCompletedBJ (quest whichQuest, boolean completed)",
        "prefix": "QuestSetCompletedBJ"
    },
    "QuestSetFailedBJ": {
        "body": "QuestSetFailedBJ(${1:whichQuest}, ${2:failed})",
        "description": "QuestSetFailedBJ (quest whichQuest, boolean failed)",
        "prefix": "QuestSetFailedBJ"
    },
    "QuestSetDiscoveredBJ": {
        "body": "QuestSetDiscoveredBJ(${1:whichQuest}, ${2:discovered})",
        "description": "QuestSetDiscoveredBJ (quest whichQuest, boolean discovered)",
        "prefix": "QuestSetDiscoveredBJ"
    },
    "GetLastCreatedQuestBJ": {
        "body": "GetLastCreatedQuestBJ()",
        "description": "GetLastCreatedQuestBJ ()",
        "prefix": "GetLastCreatedQuestBJ"
    },
    "CreateQuestItemBJ": {
        "body": "CreateQuestItemBJ(${1:whichQuest}, ${2:description})",
        "description": "CreateQuestItemBJ (quest whichQuest, string description)",
        "prefix": "CreateQuestItemBJ"
    },
    "QuestItemSetDescriptionBJ": {
        "body": "QuestItemSetDescriptionBJ(${1:whichQuestItem}, ${2:description})",
        "description": "QuestItemSetDescriptionBJ (questitem whichQuestItem, string description)",
        "prefix": "QuestItemSetDescriptionBJ"
    },
    "QuestItemSetCompletedBJ": {
        "body": "QuestItemSetCompletedBJ(${1:whichQuestItem}, ${2:completed})",
        "description": "QuestItemSetCompletedBJ (questitem whichQuestItem, boolean completed)",
        "prefix": "QuestItemSetCompletedBJ"
    },
    "GetLastCreatedQuestItemBJ": {
        "body": "GetLastCreatedQuestItemBJ()",
        "description": "GetLastCreatedQuestItemBJ ()",
        "prefix": "GetLastCreatedQuestItemBJ"
    },
    "CreateDefeatConditionBJ": {
        "body": "CreateDefeatConditionBJ(${1:description})",
        "description": "CreateDefeatConditionBJ (string description)",
        "prefix": "CreateDefeatConditionBJ"
    },
    "DestroyDefeatConditionBJ": {
        "body": "DestroyDefeatConditionBJ(${1:whichCondition})",
        "description": "DestroyDefeatConditionBJ (defeatcondition whichCondition)",
        "prefix": "DestroyDefeatConditionBJ"
    },
    "DefeatConditionSetDescriptionBJ": {
        "body": "DefeatConditionSetDescriptionBJ(${1:whichCondition}, ${2:description})",
        "description": "DefeatConditionSetDescriptionBJ (defeatcondition whichCondition, string description)",
        "prefix": "DefeatConditionSetDescriptionBJ"
    },
    "GetLastCreatedDefeatConditionBJ": {
        "body": "GetLastCreatedDefeatConditionBJ()",
        "description": "GetLastCreatedDefeatConditionBJ ()",
        "prefix": "GetLastCreatedDefeatConditionBJ"
    },
    "FlashQuestDialogButtonBJ": {
        "body": "FlashQuestDialogButtonBJ()",
        "description": "FlashQuestDialogButtonBJ ()",
        "prefix": "FlashQuestDialogButtonBJ"
    },
    "QuestMessageBJ": {
        "body": "QuestMessageBJ(${1:f}, ${2:messageType}, ${3:message})",
        "description": "QuestMessageBJ (force f, integer messageType, string message)",
        "prefix": "QuestMessageBJ"
    },
    "StartTimerBJ": {
        "body": "StartTimerBJ(${1:t}, ${2:periodic}, ${3:timeout})",
        "description": "StartTimerBJ (timer t, boolean periodic, real timeout)",
        "prefix": "StartTimerBJ"
    },
    "CreateTimerBJ": {
        "body": "CreateTimerBJ(${1:periodic}, ${2:timeout})",
        "description": "CreateTimerBJ (boolean periodic, real timeout)",
        "prefix": "CreateTimerBJ"
    },
    "DestroyTimerBJ": {
        "body": "DestroyTimerBJ(${1:whichTimer})",
        "description": "DestroyTimerBJ (timer whichTimer)",
        "prefix": "DestroyTimerBJ"
    },
    "PauseTimerBJ": {
        "body": "PauseTimerBJ(${1:pause}, ${2:whichTimer})",
        "description": "PauseTimerBJ (boolean pause, timer whichTimer)",
        "prefix": "PauseTimerBJ"
    },
    "GetLastCreatedTimerBJ": {
        "body": "GetLastCreatedTimerBJ()",
        "description": "GetLastCreatedTimerBJ ()",
        "prefix": "GetLastCreatedTimerBJ"
    },
    "CreateTimerDialogBJ": {
        "body": "CreateTimerDialogBJ(${1:t}, ${2:title})",
        "description": "CreateTimerDialogBJ (timer t, string title)",
        "prefix": "CreateTimerDialogBJ"
    },
    "DestroyTimerDialogBJ": {
        "body": "DestroyTimerDialogBJ(${1:td})",
        "description": "DestroyTimerDialogBJ (timerdialog td)",
        "prefix": "DestroyTimerDialogBJ"
    },
    "TimerDialogSetTitleBJ": {
        "body": "TimerDialogSetTitleBJ(${1:td}, ${2:title})",
        "description": "TimerDialogSetTitleBJ (timerdialog td, string title)",
        "prefix": "TimerDialogSetTitleBJ"
    },
    "TimerDialogSetTitleColorBJ": {
        "body": "TimerDialogSetTitleColorBJ(${1:td}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "TimerDialogSetTitleColorBJ (timerdialog td, real red, real green, real blue, real transparency)",
        "prefix": "TimerDialogSetTitleColorBJ"
    },
    "TimerDialogSetTimeColorBJ": {
        "body": "TimerDialogSetTimeColorBJ(${1:td}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "TimerDialogSetTimeColorBJ (timerdialog td, real red, real green, real blue, real transparency)",
        "prefix": "TimerDialogSetTimeColorBJ"
    },
    "TimerDialogSetSpeedBJ": {
        "body": "TimerDialogSetSpeedBJ(${1:td}, ${2:speedMultFactor})",
        "description": "TimerDialogSetSpeedBJ (timerdialog td, real speedMultFactor)",
        "prefix": "TimerDialogSetSpeedBJ"
    },
    "TimerDialogDisplayForPlayerBJ": {
        "body": "TimerDialogDisplayForPlayerBJ(${1:show}, ${2:td}, ${3:whichPlayer})",
        "description": "TimerDialogDisplayForPlayerBJ (boolean show, timerdialog td, player whichPlayer)",
        "prefix": "TimerDialogDisplayForPlayerBJ"
    },
    "TimerDialogDisplayBJ": {
        "body": "TimerDialogDisplayBJ(${1:show}, ${2:td})",
        "description": "TimerDialogDisplayBJ (boolean show, timerdialog td)",
        "prefix": "TimerDialogDisplayBJ"
    },
    "GetLastCreatedTimerDialogBJ": {
        "body": "GetLastCreatedTimerDialogBJ()",
        "description": "GetLastCreatedTimerDialogBJ ()",
        "prefix": "GetLastCreatedTimerDialogBJ"
    },
    "LeaderboardResizeBJ": {
        "body": "LeaderboardResizeBJ(${1:lb})",
        "description": "LeaderboardResizeBJ (leaderboard lb)",
        "prefix": "LeaderboardResizeBJ"
    },
    "LeaderboardSetPlayerItemValueBJ": {
        "body": "LeaderboardSetPlayerItemValueBJ(${1:whichPlayer}, ${2:lb}, ${3:val})",
        "description": "LeaderboardSetPlayerItemValueBJ (player whichPlayer, leaderboard lb, integer val)",
        "prefix": "LeaderboardSetPlayerItemValueBJ"
    },
    "LeaderboardSetPlayerItemLabelBJ": {
        "body": "LeaderboardSetPlayerItemLabelBJ(${1:whichPlayer}, ${2:lb}, ${3:val})",
        "description": "LeaderboardSetPlayerItemLabelBJ (player whichPlayer, leaderboard lb, string val)",
        "prefix": "LeaderboardSetPlayerItemLabelBJ"
    },
    "LeaderboardSetPlayerItemStyleBJ": {
        "body": "LeaderboardSetPlayerItemStyleBJ(${1:whichPlayer}, ${2:lb}, ${3:showLabel}, ${4:showValue}, ${5:showIcon})",
        "description": "LeaderboardSetPlayerItemStyleBJ (player whichPlayer, leaderboard lb, boolean showLabel, boolean showValue, boolean showIcon)",
        "prefix": "LeaderboardSetPlayerItemStyleBJ"
    },
    "LeaderboardSetPlayerItemLabelColorBJ": {
        "body": "LeaderboardSetPlayerItemLabelColorBJ(${1:whichPlayer}, ${2:lb}, ${3:red}, ${4:green}, ${5:blue}, ${6:transparency})",
        "description": "LeaderboardSetPlayerItemLabelColorBJ (player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency)",
        "prefix": "LeaderboardSetPlayerItemLabelColorBJ"
    },
    "LeaderboardSetPlayerItemValueColorBJ": {
        "body": "LeaderboardSetPlayerItemValueColorBJ(${1:whichPlayer}, ${2:lb}, ${3:red}, ${4:green}, ${5:blue}, ${6:transparency})",
        "description": "LeaderboardSetPlayerItemValueColorBJ (player whichPlayer, leaderboard lb, real red, real green, real blue, real transparency)",
        "prefix": "LeaderboardSetPlayerItemValueColorBJ"
    },
    "LeaderboardSetLabelColorBJ": {
        "body": "LeaderboardSetLabelColorBJ(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "LeaderboardSetLabelColorBJ (leaderboard lb, real red, real green, real blue, real transparency)",
        "prefix": "LeaderboardSetLabelColorBJ"
    },
    "LeaderboardSetValueColorBJ": {
        "body": "LeaderboardSetValueColorBJ(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "LeaderboardSetValueColorBJ (leaderboard lb, real red, real green, real blue, real transparency)",
        "prefix": "LeaderboardSetValueColorBJ"
    },
    "LeaderboardSetLabelBJ": {
        "body": "LeaderboardSetLabelBJ(${1:lb}, ${2:label})",
        "description": "LeaderboardSetLabelBJ (leaderboard lb, string label)",
        "prefix": "LeaderboardSetLabelBJ"
    },
    "LeaderboardSetStyleBJ": {
        "body": "LeaderboardSetStyleBJ(${1:lb}, ${2:showLabel}, ${3:showNames}, ${4:showValues}, ${5:showIcons})",
        "description": "LeaderboardSetStyleBJ (leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons)",
        "prefix": "LeaderboardSetStyleBJ"
    },
    "LeaderboardGetItemCountBJ": {
        "body": "LeaderboardGetItemCountBJ(${1:lb})",
        "description": "LeaderboardGetItemCountBJ (leaderboard lb)",
        "prefix": "LeaderboardGetItemCountBJ"
    },
    "LeaderboardHasPlayerItemBJ": {
        "body": "LeaderboardHasPlayerItemBJ(${1:lb}, ${2:whichPlayer})",
        "description": "LeaderboardHasPlayerItemBJ (leaderboard lb, player whichPlayer)",
        "prefix": "LeaderboardHasPlayerItemBJ"
    },
    "ForceSetLeaderboardBJ": {
        "body": "ForceSetLeaderboardBJ(${1:lb}, ${2:toForce})",
        "description": "ForceSetLeaderboardBJ (leaderboard lb, force toForce)",
        "prefix": "ForceSetLeaderboardBJ"
    },
    "CreateLeaderboardBJ": {
        "body": "CreateLeaderboardBJ(${1:toForce}, ${2:label})",
        "description": "CreateLeaderboardBJ (force toForce, string label)",
        "prefix": "CreateLeaderboardBJ"
    },
    "DestroyLeaderboardBJ": {
        "body": "DestroyLeaderboardBJ(${1:lb})",
        "description": "DestroyLeaderboardBJ (leaderboard lb)",
        "prefix": "DestroyLeaderboardBJ"
    },
    "LeaderboardDisplayBJ": {
        "body": "LeaderboardDisplayBJ(${1:show}, ${2:lb})",
        "description": "LeaderboardDisplayBJ (boolean show, leaderboard lb)",
        "prefix": "LeaderboardDisplayBJ"
    },
    "LeaderboardAddItemBJ": {
        "body": "LeaderboardAddItemBJ(${1:whichPlayer}, ${2:lb}, ${3:label}, ${4:value})",
        "description": "LeaderboardAddItemBJ (player whichPlayer, leaderboard lb, string label, integer value)",
        "prefix": "LeaderboardAddItemBJ"
    },
    "LeaderboardRemovePlayerItemBJ": {
        "body": "LeaderboardRemovePlayerItemBJ(${1:whichPlayer}, ${2:lb})",
        "description": "LeaderboardRemovePlayerItemBJ (player whichPlayer, leaderboard lb)",
        "prefix": "LeaderboardRemovePlayerItemBJ"
    },
    "LeaderboardSortItemsBJ": {
        "body": "LeaderboardSortItemsBJ(${1:lb}, ${2:sortType}, ${3:ascending})",
        "description": "LeaderboardSortItemsBJ (leaderboard lb, integer sortType, boolean ascending)",
        "prefix": "LeaderboardSortItemsBJ"
    },
    "LeaderboardSortItemsByPlayerBJ": {
        "body": "LeaderboardSortItemsByPlayerBJ(${1:lb}, ${2:ascending})",
        "description": "LeaderboardSortItemsByPlayerBJ (leaderboard lb, boolean ascending)",
        "prefix": "LeaderboardSortItemsByPlayerBJ"
    },
    "LeaderboardSortItemsByLabelBJ": {
        "body": "LeaderboardSortItemsByLabelBJ(${1:lb}, ${2:ascending})",
        "description": "LeaderboardSortItemsByLabelBJ (leaderboard lb, boolean ascending)",
        "prefix": "LeaderboardSortItemsByLabelBJ"
    },
    "LeaderboardGetPlayerIndexBJ": {
        "body": "LeaderboardGetPlayerIndexBJ(${1:whichPlayer}, ${2:lb})",
        "description": "LeaderboardGetPlayerIndexBJ (player whichPlayer, leaderboard lb)",
        "prefix": "LeaderboardGetPlayerIndexBJ"
    },
    "LeaderboardGetIndexedPlayerBJ": {
        "body": "LeaderboardGetIndexedPlayerBJ(${1:position}, ${2:lb})",
        "description": "LeaderboardGetIndexedPlayerBJ (integer position, leaderboard lb)",
        "prefix": "LeaderboardGetIndexedPlayerBJ"
    },
    "PlayerGetLeaderboardBJ": {
        "body": "PlayerGetLeaderboardBJ(${1:whichPlayer})",
        "description": "PlayerGetLeaderboardBJ (player whichPlayer)",
        "prefix": "PlayerGetLeaderboardBJ"
    },
    "GetLastCreatedLeaderboard": {
        "body": "GetLastCreatedLeaderboard()",
        "description": "GetLastCreatedLeaderboard ()",
        "prefix": "GetLastCreatedLeaderboard"
    },
    "CreateMultiboardBJ": {
        "body": "CreateMultiboardBJ(${1:cols}, ${2:rows}, ${3:title})",
        "description": "CreateMultiboardBJ (integer cols, integer rows, string title)",
        "prefix": "CreateMultiboardBJ"
    },
    "DestroyMultiboardBJ": {
        "body": "DestroyMultiboardBJ(${1:mb})",
        "description": "DestroyMultiboardBJ (multiboard mb)",
        "prefix": "DestroyMultiboardBJ"
    },
    "GetLastCreatedMultiboard": {
        "body": "GetLastCreatedMultiboard()",
        "description": "GetLastCreatedMultiboard ()",
        "prefix": "GetLastCreatedMultiboard"
    },
    "MultiboardDisplayBJ": {
        "body": "MultiboardDisplayBJ(${1:show}, ${2:mb})",
        "description": "MultiboardDisplayBJ (boolean show, multiboard mb)",
        "prefix": "MultiboardDisplayBJ"
    },
    "MultiboardMinimizeBJ": {
        "body": "MultiboardMinimizeBJ(${1:minimize}, ${2:mb})",
        "description": "MultiboardMinimizeBJ (boolean minimize, multiboard mb)",
        "prefix": "MultiboardMinimizeBJ"
    },
    "MultiboardSetTitleTextColorBJ": {
        "body": "MultiboardSetTitleTextColorBJ(${1:mb}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "MultiboardSetTitleTextColorBJ (multiboard mb, real red, real green, real blue, real transparency)",
        "prefix": "MultiboardSetTitleTextColorBJ"
    },
    "MultiboardAllowDisplayBJ": {
        "body": "MultiboardAllowDisplayBJ(${1:flag})",
        "description": "MultiboardAllowDisplayBJ (boolean flag)",
        "prefix": "MultiboardAllowDisplayBJ"
    },
    "MultiboardSetItemStyleBJ": {
        "body": "MultiboardSetItemStyleBJ(${1:mb}, ${2:col}, ${3:row}, ${4:showValue}, ${5:showIcon})",
        "description": "MultiboardSetItemStyleBJ (multiboard mb, integer col, integer row, boolean showValue, boolean showIcon)",
        "prefix": "MultiboardSetItemStyleBJ"
    },
    "MultiboardSetItemValueBJ": {
        "body": "MultiboardSetItemValueBJ(${1:mb}, ${2:col}, ${3:row}, ${4:val})",
        "description": "MultiboardSetItemValueBJ (multiboard mb, integer col, integer row, string val)",
        "prefix": "MultiboardSetItemValueBJ"
    },
    "MultiboardSetItemColorBJ": {
        "body": "MultiboardSetItemColorBJ(${1:mb}, ${2:col}, ${3:row}, ${4:red}, ${5:green}, ${6:blue}, ${7:transparency})",
        "description": "MultiboardSetItemColorBJ (multiboard mb, integer col, integer row, real red, real green, real blue, real transparency)",
        "prefix": "MultiboardSetItemColorBJ"
    },
    "MultiboardSetItemWidthBJ": {
        "body": "MultiboardSetItemWidthBJ(${1:mb}, ${2:col}, ${3:row}, ${4:width})",
        "description": "MultiboardSetItemWidthBJ (multiboard mb, integer col, integer row, real width)",
        "prefix": "MultiboardSetItemWidthBJ"
    },
    "MultiboardSetItemIconBJ": {
        "body": "MultiboardSetItemIconBJ(${1:mb}, ${2:col}, ${3:row}, ${4:iconFileName})",
        "description": "MultiboardSetItemIconBJ (multiboard mb, integer col, integer row, string iconFileName)",
        "prefix": "MultiboardSetItemIconBJ"
    },
    "TextTagSize2Height": {
        "body": "TextTagSize2Height(${1:size})",
        "description": "TextTagSize2Height (real size)",
        "prefix": "TextTagSize2Height"
    },
    "TextTagSpeed2Velocity": {
        "body": "TextTagSpeed2Velocity(${1:speed})",
        "description": "TextTagSpeed2Velocity (real speed)",
        "prefix": "TextTagSpeed2Velocity"
    },
    "SetTextTagColorBJ": {
        "body": "SetTextTagColorBJ(${1:tt}, ${2:red}, ${3:green}, ${4:blue}, ${5:transparency})",
        "description": "SetTextTagColorBJ (texttag tt, real red, real green, real blue, real transparency)",
        "prefix": "SetTextTagColorBJ"
    },
    "SetTextTagVelocityBJ": {
        "body": "SetTextTagVelocityBJ(${1:tt}, ${2:speed}, ${3:angle})",
        "description": "SetTextTagVelocityBJ (texttag tt, real speed, real angle)",
        "prefix": "SetTextTagVelocityBJ"
    },
    "SetTextTagTextBJ": {
        "body": "SetTextTagTextBJ(${1:tt}, ${2:s}, ${3:size})",
        "description": "SetTextTagTextBJ (texttag tt, string s, real size)",
        "prefix": "SetTextTagTextBJ"
    },
    "SetTextTagPosBJ": {
        "body": "SetTextTagPosBJ(${1:tt}, ${2:loc}, ${3:zOffset})",
        "description": "SetTextTagPosBJ (texttag tt, location loc, real zOffset)",
        "prefix": "SetTextTagPosBJ"
    },
    "SetTextTagPosUnitBJ": {
        "body": "SetTextTagPosUnitBJ(${1:tt}, ${2:whichUnit}, ${3:zOffset})",
        "description": "SetTextTagPosUnitBJ (texttag tt, unit whichUnit, real zOffset)",
        "prefix": "SetTextTagPosUnitBJ"
    },
    "SetTextTagSuspendedBJ": {
        "body": "SetTextTagSuspendedBJ(${1:tt}, ${2:flag})",
        "description": "SetTextTagSuspendedBJ (texttag tt, boolean flag)",
        "prefix": "SetTextTagSuspendedBJ"
    },
    "SetTextTagPermanentBJ": {
        "body": "SetTextTagPermanentBJ(${1:tt}, ${2:flag})",
        "description": "SetTextTagPermanentBJ (texttag tt, boolean flag)",
        "prefix": "SetTextTagPermanentBJ"
    },
    "SetTextTagAgeBJ": {
        "body": "SetTextTagAgeBJ(${1:tt}, ${2:age})",
        "description": "SetTextTagAgeBJ (texttag tt, real age)",
        "prefix": "SetTextTagAgeBJ"
    },
    "SetTextTagLifespanBJ": {
        "body": "SetTextTagLifespanBJ(${1:tt}, ${2:lifespan})",
        "description": "SetTextTagLifespanBJ (texttag tt, real lifespan)",
        "prefix": "SetTextTagLifespanBJ"
    },
    "SetTextTagFadepointBJ": {
        "body": "SetTextTagFadepointBJ(${1:tt}, ${2:fadepoint})",
        "description": "SetTextTagFadepointBJ (texttag tt, real fadepoint)",
        "prefix": "SetTextTagFadepointBJ"
    },
    "CreateTextTagLocBJ": {
        "body": "CreateTextTagLocBJ(${1:s}, ${2:loc}, ${3:zOffset}, ${4:size}, ${5:red}, ${6:green}, ${7:blue}, ${8:transparency})",
        "description": "CreateTextTagLocBJ (string s, location loc, real zOffset, real size, real red, real green, real blue, real transparency)",
        "prefix": "CreateTextTagLocBJ"
    },
    "CreateTextTagUnitBJ": {
        "body": "CreateTextTagUnitBJ(${1:s}, ${2:whichUnit}, ${3:zOffset}, ${4:size}, ${5:red}, ${6:green}, ${7:blue}, ${8:transparency})",
        "description": "CreateTextTagUnitBJ (string s, unit whichUnit, real zOffset, real size, real red, real green, real blue, real transparency)",
        "prefix": "CreateTextTagUnitBJ"
    },
    "DestroyTextTagBJ": {
        "body": "DestroyTextTagBJ(${1:tt})",
        "description": "DestroyTextTagBJ (texttag tt)",
        "prefix": "DestroyTextTagBJ"
    },
    "ShowTextTagForceBJ": {
        "body": "ShowTextTagForceBJ(${1:show}, ${2:tt}, ${3:whichForce})",
        "description": "ShowTextTagForceBJ (boolean show, texttag tt, force whichForce)",
        "prefix": "ShowTextTagForceBJ"
    },
    "GetLastCreatedTextTag": {
        "body": "GetLastCreatedTextTag()",
        "description": "GetLastCreatedTextTag ()",
        "prefix": "GetLastCreatedTextTag"
    },
    "PauseGameOn": {
        "body": "PauseGameOn()",
        "description": "PauseGameOn ()",
        "prefix": "PauseGameOn"
    },
    "PauseGameOff": {
        "body": "PauseGameOff()",
        "description": "PauseGameOff ()",
        "prefix": "PauseGameOff"
    },
    "SetUserControlForceOn": {
        "body": "SetUserControlForceOn(${1:whichForce})",
        "description": "SetUserControlForceOn (force whichForce)",
        "prefix": "SetUserControlForceOn"
    },
    "SetUserControlForceOff": {
        "body": "SetUserControlForceOff(${1:whichForce})",
        "description": "SetUserControlForceOff (force whichForce)",
        "prefix": "SetUserControlForceOff"
    },
    "ShowInterfaceForceOn": {
        "body": "ShowInterfaceForceOn(${1:whichForce}, ${2:fadeDuration})",
        "description": "ShowInterfaceForceOn (force whichForce, real fadeDuration)",
        "prefix": "ShowInterfaceForceOn"
    },
    "ShowInterfaceForceOff": {
        "body": "ShowInterfaceForceOff(${1:whichForce}, ${2:fadeDuration})",
        "description": "ShowInterfaceForceOff (force whichForce, real fadeDuration)",
        "prefix": "ShowInterfaceForceOff"
    },
    "PingMinimapForForce": {
        "body": "PingMinimapForForce(${1:whichForce}, ${2:x}, ${3:y}, ${4:duration})",
        "description": "PingMinimapForForce (force whichForce, real x, real y, real duration)",
        "prefix": "PingMinimapForForce"
    },
    "PingMinimapLocForForce": {
        "body": "PingMinimapLocForForce(${1:whichForce}, ${2:loc}, ${3:duration})",
        "description": "PingMinimapLocForForce (force whichForce, location loc, real duration)",
        "prefix": "PingMinimapLocForForce"
    },
    "PingMinimapForPlayer": {
        "body": "PingMinimapForPlayer(${1:whichPlayer}, ${2:x}, ${3:y}, ${4:duration})",
        "description": "PingMinimapForPlayer (player whichPlayer, real x, real y, real duration)",
        "prefix": "PingMinimapForPlayer"
    },
    "PingMinimapLocForPlayer": {
        "body": "PingMinimapLocForPlayer(${1:whichPlayer}, ${2:loc}, ${3:duration})",
        "description": "PingMinimapLocForPlayer (player whichPlayer, location loc, real duration)",
        "prefix": "PingMinimapLocForPlayer"
    },
    "PingMinimapForForceEx": {
        "body": "PingMinimapForForceEx(${1:whichForce}, ${2:x}, ${3:y}, ${4:duration}, ${5:style}, ${6:red}, ${7:green}, ${8:blue})",
        "description": "PingMinimapForForceEx (force whichForce, real x, real y, real duration, integer style, real red, real green, real blue)",
        "prefix": "PingMinimapForForceEx"
    },
    "PingMinimapLocForForceEx": {
        "body": "PingMinimapLocForForceEx(${1:whichForce}, ${2:loc}, ${3:duration}, ${4:style}, ${5:red}, ${6:green}, ${7:blue})",
        "description": "PingMinimapLocForForceEx (force whichForce, location loc, real duration, integer style, real red, real green, real blue)",
        "prefix": "PingMinimapLocForForceEx"
    },
    "EnableWorldFogBoundaryBJ": {
        "body": "EnableWorldFogBoundaryBJ(${1:enable}, ${2:f})",
        "description": "EnableWorldFogBoundaryBJ (boolean enable, force f)",
        "prefix": "EnableWorldFogBoundaryBJ"
    },
    "EnableOcclusionBJ": {
        "body": "EnableOcclusionBJ(${1:enable}, ${2:f})",
        "description": "EnableOcclusionBJ (boolean enable, force f)",
        "prefix": "EnableOcclusionBJ"
    },
    "CancelCineSceneBJ": {
        "body": "CancelCineSceneBJ()",
        "description": "CancelCineSceneBJ ()",
        "prefix": "CancelCineSceneBJ"
    },
    "TryInitCinematicBehaviorBJ": {
        "body": "TryInitCinematicBehaviorBJ()",
        "description": "TryInitCinematicBehaviorBJ ()",
        "prefix": "TryInitCinematicBehaviorBJ"
    },
    "SetCinematicSceneBJ": {
        "body": "SetCinematicSceneBJ(${1:soundHandle}, ${2:portraitUnitId}, ${3:color}, ${4:speakerTitle}, ${5:text}, ${6:sceneDuration}, ${7:voiceoverDuration})",
        "description": "SetCinematicSceneBJ (sound soundHandle, integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration)",
        "prefix": "SetCinematicSceneBJ"
    },
    "GetTransmissionDuration": {
        "body": "GetTransmissionDuration(${1:soundHandle}, ${2:timeType}, ${3:timeVal})",
        "description": "GetTransmissionDuration (sound soundHandle, integer timeType, real timeVal)",
        "prefix": "GetTransmissionDuration"
    },
    "WaitTransmissionDuration": {
        "body": "WaitTransmissionDuration(${1:soundHandle}, ${2:timeType}, ${3:timeVal})",
        "description": "WaitTransmissionDuration (sound soundHandle, integer timeType, real timeVal)",
        "prefix": "WaitTransmissionDuration"
    },
    "DoTransmissionBasicsXYBJ": {
        "body": "DoTransmissionBasicsXYBJ(${1:unitId}, ${2:color}, ${3:x}, ${4:y}, ${5:soundHandle}, ${6:unitName}, ${7:message}, ${8:duration})",
        "description": "DoTransmissionBasicsXYBJ (integer unitId, playercolor color, real x, real y, sound soundHandle, string unitName, string message, real duration)",
        "prefix": "DoTransmissionBasicsXYBJ"
    },
    "TransmissionFromUnitWithNameBJ": {
        "body": "TransmissionFromUnitWithNameBJ(${1:toForce}, ${2:whichUnit}, ${3:unitName}, ${4:soundHandle}, ${5:message}, ${6:timeType}, ${7:timeVal}, ${8:wait})",
        "description": "TransmissionFromUnitWithNameBJ (force toForce, unit whichUnit, string unitName, sound soundHandle, string message, integer timeType, real timeVal, boolean wait)",
        "prefix": "TransmissionFromUnitWithNameBJ"
    },
    "TransmissionFromUnitTypeWithNameBJ": {
        "body": "TransmissionFromUnitTypeWithNameBJ(${1:toForce}, ${2:fromPlayer}, ${3:unitId}, ${4:unitName}, ${5:loc}, ${6:soundHandle}, ${7:message}, ${8:timeType}, ${9:timeVal}, ${10:wait})",
        "description": "TransmissionFromUnitTypeWithNameBJ (force toForce, player fromPlayer, integer unitId, string unitName, location loc, sound soundHandle, string message, integer timeType, real timeVal, boolean wait)",
        "prefix": "TransmissionFromUnitTypeWithNameBJ"
    },
    "GetLastTransmissionDurationBJ": {
        "body": "GetLastTransmissionDurationBJ()",
        "description": "GetLastTransmissionDurationBJ ()",
        "prefix": "GetLastTransmissionDurationBJ"
    },
    "ForceCinematicSubtitlesBJ": {
        "body": "ForceCinematicSubtitlesBJ(${1:flag})",
        "description": "ForceCinematicSubtitlesBJ (boolean flag)",
        "prefix": "ForceCinematicSubtitlesBJ"
    },
    "CinematicModeExBJ": {
        "body": "CinematicModeExBJ(${1:cineMode}, ${2:forForce}, ${3:interfaceFadeTime})",
        "description": "CinematicModeExBJ (boolean cineMode, force forForce, real interfaceFadeTime)",
        "prefix": "CinematicModeExBJ"
    },
    "CinematicModeBJ": {
        "body": "CinematicModeBJ(${1:cineMode}, ${2:forForce})",
        "description": "CinematicModeBJ (boolean cineMode, force forForce)",
        "prefix": "CinematicModeBJ"
    },
    "DisplayCineFilterBJ": {
        "body": "DisplayCineFilterBJ(${1:flag})",
        "description": "DisplayCineFilterBJ (boolean flag)",
        "prefix": "DisplayCineFilterBJ"
    },
    "CinematicFadeCommonBJ": {
        "body": "CinematicFadeCommonBJ(${1:red}, ${2:green}, ${3:blue}, ${4:duration}, ${5:tex}, ${6:startTrans}, ${7:endTrans})",
        "description": "CinematicFadeCommonBJ (real red, real green, real blue, real duration, string tex, real startTrans, real endTrans)",
        "prefix": "CinematicFadeCommonBJ"
    },
    "FinishCinematicFadeBJ": {
        "body": "FinishCinematicFadeBJ()",
        "description": "FinishCinematicFadeBJ ()",
        "prefix": "FinishCinematicFadeBJ"
    },
    "FinishCinematicFadeAfterBJ": {
        "body": "FinishCinematicFadeAfterBJ(${1:duration})",
        "description": "FinishCinematicFadeAfterBJ (real duration)",
        "prefix": "FinishCinematicFadeAfterBJ"
    },
    "ContinueCinematicFadeBJ": {
        "body": "ContinueCinematicFadeBJ()",
        "description": "ContinueCinematicFadeBJ ()",
        "prefix": "ContinueCinematicFadeBJ"
    },
    "ContinueCinematicFadeAfterBJ": {
        "body": "ContinueCinematicFadeAfterBJ(${1:duration}, ${2:red}, ${3:green}, ${4:blue}, ${5:trans}, ${6:tex})",
        "description": "ContinueCinematicFadeAfterBJ (real duration, real red, real green, real blue, real trans, string tex)",
        "prefix": "ContinueCinematicFadeAfterBJ"
    },
    "AbortCinematicFadeBJ": {
        "body": "AbortCinematicFadeBJ()",
        "description": "AbortCinematicFadeBJ ()",
        "prefix": "AbortCinematicFadeBJ"
    },
    "CinematicFadeBJ": {
        "body": "CinematicFadeBJ(${1:fadetype}, ${2:duration}, ${3:tex}, ${4:red}, ${5:green}, ${6:blue}, ${7:trans})",
        "description": "CinematicFadeBJ (integer fadetype, real duration, string tex, real red, real green, real blue, real trans)",
        "prefix": "CinematicFadeBJ"
    },
    "CinematicFilterGenericBJ": {
        "body": "CinematicFilterGenericBJ(${1:duration}, ${2:bmode}, ${3:tex}, ${4:red0}, ${5:green0}, ${6:blue0}, ${7:trans0}, ${8:red1}, ${9:green1}, ${10:blue1}, ${11:trans1})",
        "description": "CinematicFilterGenericBJ (real duration, blendmode bmode, string tex, real red0, real green0, real blue0, real trans0, real red1, real green1, real blue1, real trans1)",
        "prefix": "CinematicFilterGenericBJ"
    },
    "RescueUnitBJ": {
        "body": "RescueUnitBJ(${1:whichUnit}, ${2:rescuer}, ${3:changeColor})",
        "description": "RescueUnitBJ (unit whichUnit, player rescuer, boolean changeColor)",
        "prefix": "RescueUnitBJ"
    },
    "TriggerActionUnitRescuedBJ": {
        "body": "TriggerActionUnitRescuedBJ()",
        "description": "TriggerActionUnitRescuedBJ ()",
        "prefix": "TriggerActionUnitRescuedBJ"
    },
    "TryInitRescuableTriggersBJ": {
        "body": "TryInitRescuableTriggersBJ()",
        "description": "TryInitRescuableTriggersBJ ()",
        "prefix": "TryInitRescuableTriggersBJ"
    },
    "SetRescueUnitColorChangeBJ": {
        "body": "SetRescueUnitColorChangeBJ(${1:changeColor})",
        "description": "SetRescueUnitColorChangeBJ (boolean changeColor)",
        "prefix": "SetRescueUnitColorChangeBJ"
    },
    "SetRescueBuildingColorChangeBJ": {
        "body": "SetRescueBuildingColorChangeBJ(${1:changeColor})",
        "description": "SetRescueBuildingColorChangeBJ (boolean changeColor)",
        "prefix": "SetRescueBuildingColorChangeBJ"
    },
    "MakeUnitRescuableToForceBJEnum": {
        "body": "MakeUnitRescuableToForceBJEnum()",
        "description": "MakeUnitRescuableToForceBJEnum ()",
        "prefix": "MakeUnitRescuableToForceBJEnum"
    },
    "MakeUnitRescuableToForceBJ": {
        "body": "MakeUnitRescuableToForceBJ(${1:whichUnit}, ${2:isRescuable}, ${3:whichForce})",
        "description": "MakeUnitRescuableToForceBJ (unit whichUnit, boolean isRescuable, force whichForce)",
        "prefix": "MakeUnitRescuableToForceBJ"
    },
    "InitRescuableBehaviorBJ": {
        "body": "InitRescuableBehaviorBJ()",
        "description": "InitRescuableBehaviorBJ ()",
        "prefix": "InitRescuableBehaviorBJ"
    },
    "SetPlayerTechResearchedSwap": {
        "body": "SetPlayerTechResearchedSwap(${1:techid}, ${2:levels}, ${3:whichPlayer})",
        "description": "SetPlayerTechResearchedSwap (integer techid, integer levels, player whichPlayer)",
        "prefix": "SetPlayerTechResearchedSwap"
    },
    "SetPlayerTechMaxAllowedSwap": {
        "body": "SetPlayerTechMaxAllowedSwap(${1:techid}, ${2:maximum}, ${3:whichPlayer})",
        "description": "SetPlayerTechMaxAllowedSwap (integer techid, integer maximum, player whichPlayer)",
        "prefix": "SetPlayerTechMaxAllowedSwap"
    },
    "SetPlayerMaxHeroesAllowed": {
        "body": "SetPlayerMaxHeroesAllowed(${1:maximum}, ${2:whichPlayer})",
        "description": "SetPlayerMaxHeroesAllowed (integer maximum, player whichPlayer)",
        "prefix": "SetPlayerMaxHeroesAllowed"
    },
    "GetPlayerTechCountSimple": {
        "body": "GetPlayerTechCountSimple(${1:techid}, ${2:whichPlayer})",
        "description": "GetPlayerTechCountSimple (integer techid, player whichPlayer)",
        "prefix": "GetPlayerTechCountSimple"
    },
    "GetPlayerTechMaxAllowedSwap": {
        "body": "GetPlayerTechMaxAllowedSwap(${1:techid}, ${2:whichPlayer})",
        "description": "GetPlayerTechMaxAllowedSwap (integer techid, player whichPlayer)",
        "prefix": "GetPlayerTechMaxAllowedSwap"
    },
    "SetPlayerAbilityAvailableBJ": {
        "body": "SetPlayerAbilityAvailableBJ(${1:avail}, ${2:abilid}, ${3:whichPlayer})",
        "description": "SetPlayerAbilityAvailableBJ (boolean avail, integer abilid, player whichPlayer)",
        "prefix": "SetPlayerAbilityAvailableBJ"
    },
    "SetCampaignMenuRaceBJ": {
        "body": "SetCampaignMenuRaceBJ(${1:campaignNumber})",
        "description": "SetCampaignMenuRaceBJ (integer campaignNumber)",
        "prefix": "SetCampaignMenuRaceBJ"
    },
    "SetMissionAvailableBJ": {
        "body": "SetMissionAvailableBJ(${1:available}, ${2:missionIndex})",
        "description": "SetMissionAvailableBJ (boolean available, integer missionIndex)",
        "prefix": "SetMissionAvailableBJ"
    },
    "SetCampaignAvailableBJ": {
        "body": "SetCampaignAvailableBJ(${1:available}, ${2:campaignNumber})",
        "description": "SetCampaignAvailableBJ (boolean available, integer campaignNumber)",
        "prefix": "SetCampaignAvailableBJ"
    },
    "SetCinematicAvailableBJ": {
        "body": "SetCinematicAvailableBJ(${1:available}, ${2:cinematicIndex})",
        "description": "SetCinematicAvailableBJ (boolean available, integer cinematicIndex)",
        "prefix": "SetCinematicAvailableBJ"
    },
    "InitGameCacheBJ": {
        "body": "InitGameCacheBJ(${1:campaignFile})",
        "description": "InitGameCacheBJ (string campaignFile)",
        "prefix": "InitGameCacheBJ"
    },
    "SaveGameCacheBJ": {
        "body": "SaveGameCacheBJ(${1:cache})",
        "description": "SaveGameCacheBJ (gamecache cache)",
        "prefix": "SaveGameCacheBJ"
    },
    "GetLastCreatedGameCacheBJ": {
        "body": "GetLastCreatedGameCacheBJ()",
        "description": "GetLastCreatedGameCacheBJ ()",
        "prefix": "GetLastCreatedGameCacheBJ"
    },
    "InitHashtableBJ": {
        "body": "InitHashtableBJ()",
        "description": "InitHashtableBJ ()",
        "prefix": "InitHashtableBJ"
    },
    "GetLastCreatedHashtableBJ": {
        "body": "GetLastCreatedHashtableBJ()",
        "description": "GetLastCreatedHashtableBJ ()",
        "prefix": "GetLastCreatedHashtableBJ"
    },
    "StoreRealBJ": {
        "body": "StoreRealBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:cache})",
        "description": "StoreRealBJ (real value, string key, string missionKey, gamecache cache)",
        "prefix": "StoreRealBJ"
    },
    "StoreIntegerBJ": {
        "body": "StoreIntegerBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:cache})",
        "description": "StoreIntegerBJ (integer value, string key, string missionKey, gamecache cache)",
        "prefix": "StoreIntegerBJ"
    },
    "StoreBooleanBJ": {
        "body": "StoreBooleanBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:cache})",
        "description": "StoreBooleanBJ (boolean value, string key, string missionKey, gamecache cache)",
        "prefix": "StoreBooleanBJ"
    },
    "StoreStringBJ": {
        "body": "StoreStringBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:cache})",
        "description": "StoreStringBJ (string value, string key, string missionKey, gamecache cache)",
        "prefix": "StoreStringBJ"
    },
    "StoreUnitBJ": {
        "body": "StoreUnitBJ(${1:whichUnit}, ${2:key}, ${3:missionKey}, ${4:cache})",
        "description": "StoreUnitBJ (unit whichUnit, string key, string missionKey, gamecache cache)",
        "prefix": "StoreUnitBJ"
    },
    "SaveRealBJ": {
        "body": "SaveRealBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveRealBJ (real value, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveRealBJ"
    },
    "SaveIntegerBJ": {
        "body": "SaveIntegerBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveIntegerBJ (integer value, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveIntegerBJ"
    },
    "SaveBooleanBJ": {
        "body": "SaveBooleanBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveBooleanBJ (boolean value, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveBooleanBJ"
    },
    "SaveStringBJ": {
        "body": "SaveStringBJ(${1:value}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveStringBJ (string value, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveStringBJ"
    },
    "SavePlayerHandleBJ": {
        "body": "SavePlayerHandleBJ(${1:whichPlayer}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SavePlayerHandleBJ (player whichPlayer, integer key, integer missionKey, hashtable table)",
        "prefix": "SavePlayerHandleBJ"
    },
    "SaveWidgetHandleBJ": {
        "body": "SaveWidgetHandleBJ(${1:whichWidget}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveWidgetHandleBJ (widget whichWidget, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveWidgetHandleBJ"
    },
    "SaveDestructableHandleBJ": {
        "body": "SaveDestructableHandleBJ(${1:whichDestructable}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveDestructableHandleBJ (destructable whichDestructable, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveDestructableHandleBJ"
    },
    "SaveItemHandleBJ": {
        "body": "SaveItemHandleBJ(${1:whichItem}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveItemHandleBJ (item whichItem, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveItemHandleBJ"
    },
    "SaveUnitHandleBJ": {
        "body": "SaveUnitHandleBJ(${1:whichUnit}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveUnitHandleBJ (unit whichUnit, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveUnitHandleBJ"
    },
    "SaveAbilityHandleBJ": {
        "body": "SaveAbilityHandleBJ(${1:whichAbility}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveAbilityHandleBJ (ability whichAbility, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveAbilityHandleBJ"
    },
    "SaveTimerHandleBJ": {
        "body": "SaveTimerHandleBJ(${1:whichTimer}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTimerHandleBJ (timer whichTimer, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTimerHandleBJ"
    },
    "SaveTriggerHandleBJ": {
        "body": "SaveTriggerHandleBJ(${1:whichTrigger}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTriggerHandleBJ (trigger whichTrigger, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTriggerHandleBJ"
    },
    "SaveTriggerConditionHandleBJ": {
        "body": "SaveTriggerConditionHandleBJ(${1:whichTriggercondition}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTriggerConditionHandleBJ (triggercondition whichTriggercondition, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTriggerConditionHandleBJ"
    },
    "SaveTriggerActionHandleBJ": {
        "body": "SaveTriggerActionHandleBJ(${1:whichTriggeraction}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTriggerActionHandleBJ (triggeraction whichTriggeraction, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTriggerActionHandleBJ"
    },
    "SaveTriggerEventHandleBJ": {
        "body": "SaveTriggerEventHandleBJ(${1:whichEvent}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTriggerEventHandleBJ (event whichEvent, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTriggerEventHandleBJ"
    },
    "SaveForceHandleBJ": {
        "body": "SaveForceHandleBJ(${1:whichForce}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveForceHandleBJ (force whichForce, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveForceHandleBJ"
    },
    "SaveGroupHandleBJ": {
        "body": "SaveGroupHandleBJ(${1:whichGroup}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveGroupHandleBJ (group whichGroup, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveGroupHandleBJ"
    },
    "SaveLocationHandleBJ": {
        "body": "SaveLocationHandleBJ(${1:whichLocation}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveLocationHandleBJ (location whichLocation, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveLocationHandleBJ"
    },
    "SaveRectHandleBJ": {
        "body": "SaveRectHandleBJ(${1:whichRect}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveRectHandleBJ (rect whichRect, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveRectHandleBJ"
    },
    "SaveBooleanExprHandleBJ": {
        "body": "SaveBooleanExprHandleBJ(${1:whichBoolexpr}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveBooleanExprHandleBJ (boolexpr whichBoolexpr, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveBooleanExprHandleBJ"
    },
    "SaveSoundHandleBJ": {
        "body": "SaveSoundHandleBJ(${1:whichSound}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveSoundHandleBJ (sound whichSound, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveSoundHandleBJ"
    },
    "SaveEffectHandleBJ": {
        "body": "SaveEffectHandleBJ(${1:whichEffect}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveEffectHandleBJ (effect whichEffect, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveEffectHandleBJ"
    },
    "SaveUnitPoolHandleBJ": {
        "body": "SaveUnitPoolHandleBJ(${1:whichUnitpool}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveUnitPoolHandleBJ (unitpool whichUnitpool, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveUnitPoolHandleBJ"
    },
    "SaveItemPoolHandleBJ": {
        "body": "SaveItemPoolHandleBJ(${1:whichItempool}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveItemPoolHandleBJ (itempool whichItempool, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveItemPoolHandleBJ"
    },
    "SaveQuestHandleBJ": {
        "body": "SaveQuestHandleBJ(${1:whichQuest}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveQuestHandleBJ (quest whichQuest, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveQuestHandleBJ"
    },
    "SaveQuestItemHandleBJ": {
        "body": "SaveQuestItemHandleBJ(${1:whichQuestitem}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveQuestItemHandleBJ (questitem whichQuestitem, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveQuestItemHandleBJ"
    },
    "SaveDefeatConditionHandleBJ": {
        "body": "SaveDefeatConditionHandleBJ(${1:whichDefeatcondition}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveDefeatConditionHandleBJ (defeatcondition whichDefeatcondition, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveDefeatConditionHandleBJ"
    },
    "SaveTimerDialogHandleBJ": {
        "body": "SaveTimerDialogHandleBJ(${1:whichTimerdialog}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTimerDialogHandleBJ (timerdialog whichTimerdialog, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTimerDialogHandleBJ"
    },
    "SaveLeaderboardHandleBJ": {
        "body": "SaveLeaderboardHandleBJ(${1:whichLeaderboard}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveLeaderboardHandleBJ (leaderboard whichLeaderboard, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveLeaderboardHandleBJ"
    },
    "SaveMultiboardHandleBJ": {
        "body": "SaveMultiboardHandleBJ(${1:whichMultiboard}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveMultiboardHandleBJ (multiboard whichMultiboard, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveMultiboardHandleBJ"
    },
    "SaveMultiboardItemHandleBJ": {
        "body": "SaveMultiboardItemHandleBJ(${1:whichMultiboarditem}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveMultiboardItemHandleBJ (multiboarditem whichMultiboarditem, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveMultiboardItemHandleBJ"
    },
    "SaveTrackableHandleBJ": {
        "body": "SaveTrackableHandleBJ(${1:whichTrackable}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTrackableHandleBJ (trackable whichTrackable, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTrackableHandleBJ"
    },
    "SaveDialogHandleBJ": {
        "body": "SaveDialogHandleBJ(${1:whichDialog}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveDialogHandleBJ (dialog whichDialog, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveDialogHandleBJ"
    },
    "SaveButtonHandleBJ": {
        "body": "SaveButtonHandleBJ(${1:whichButton}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveButtonHandleBJ (button whichButton, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveButtonHandleBJ"
    },
    "SaveTextTagHandleBJ": {
        "body": "SaveTextTagHandleBJ(${1:whichTexttag}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveTextTagHandleBJ (texttag whichTexttag, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveTextTagHandleBJ"
    },
    "SaveLightningHandleBJ": {
        "body": "SaveLightningHandleBJ(${1:whichLightning}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveLightningHandleBJ (lightning whichLightning, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveLightningHandleBJ"
    },
    "SaveImageHandleBJ": {
        "body": "SaveImageHandleBJ(${1:whichImage}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveImageHandleBJ (image whichImage, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveImageHandleBJ"
    },
    "SaveUbersplatHandleBJ": {
        "body": "SaveUbersplatHandleBJ(${1:whichUbersplat}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveUbersplatHandleBJ (ubersplat whichUbersplat, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveUbersplatHandleBJ"
    },
    "SaveRegionHandleBJ": {
        "body": "SaveRegionHandleBJ(${1:whichRegion}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveRegionHandleBJ (region whichRegion, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveRegionHandleBJ"
    },
    "SaveFogStateHandleBJ": {
        "body": "SaveFogStateHandleBJ(${1:whichFogState}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveFogStateHandleBJ (fogstate whichFogState, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveFogStateHandleBJ"
    },
    "SaveFogModifierHandleBJ": {
        "body": "SaveFogModifierHandleBJ(${1:whichFogModifier}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveFogModifierHandleBJ (fogmodifier whichFogModifier, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveFogModifierHandleBJ"
    },
    "SaveAgentHandleBJ": {
        "body": "SaveAgentHandleBJ(${1:whichAgent}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveAgentHandleBJ (agent whichAgent, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveAgentHandleBJ"
    },
    "SaveHashtableHandleBJ": {
        "body": "SaveHashtableHandleBJ(${1:whichHashtable}, ${2:key}, ${3:missionKey}, ${4:table})",
        "description": "SaveHashtableHandleBJ (hashtable whichHashtable, integer key, integer missionKey, hashtable table)",
        "prefix": "SaveHashtableHandleBJ"
    },
    "GetStoredRealBJ": {
        "body": "GetStoredRealBJ(${1:key}, ${2:missionKey}, ${3:cache})",
        "description": "GetStoredRealBJ (string key, string missionKey, gamecache cache)",
        "prefix": "GetStoredRealBJ"
    },
    "GetStoredIntegerBJ": {
        "body": "GetStoredIntegerBJ(${1:key}, ${2:missionKey}, ${3:cache})",
        "description": "GetStoredIntegerBJ (string key, string missionKey, gamecache cache)",
        "prefix": "GetStoredIntegerBJ"
    },
    "GetStoredBooleanBJ": {
        "body": "GetStoredBooleanBJ(${1:key}, ${2:missionKey}, ${3:cache})",
        "description": "GetStoredBooleanBJ (string key, string missionKey, gamecache cache)",
        "prefix": "GetStoredBooleanBJ"
    },
    "GetStoredStringBJ": {
        "body": "GetStoredStringBJ(${1:key}, ${2:missionKey}, ${3:cache})",
        "description": "GetStoredStringBJ (string key, string missionKey, gamecache cache)",
        "prefix": "GetStoredStringBJ"
    },
    "LoadRealBJ": {
        "body": "LoadRealBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadRealBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadRealBJ"
    },
    "LoadIntegerBJ": {
        "body": "LoadIntegerBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadIntegerBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadIntegerBJ"
    },
    "LoadBooleanBJ": {
        "body": "LoadBooleanBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadBooleanBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadBooleanBJ"
    },
    "LoadStringBJ": {
        "body": "LoadStringBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadStringBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadStringBJ"
    },
    "LoadPlayerHandleBJ": {
        "body": "LoadPlayerHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadPlayerHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadPlayerHandleBJ"
    },
    "LoadWidgetHandleBJ": {
        "body": "LoadWidgetHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadWidgetHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadWidgetHandleBJ"
    },
    "LoadDestructableHandleBJ": {
        "body": "LoadDestructableHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadDestructableHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadDestructableHandleBJ"
    },
    "LoadItemHandleBJ": {
        "body": "LoadItemHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadItemHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadItemHandleBJ"
    },
    "LoadUnitHandleBJ": {
        "body": "LoadUnitHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadUnitHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadUnitHandleBJ"
    },
    "LoadAbilityHandleBJ": {
        "body": "LoadAbilityHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadAbilityHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadAbilityHandleBJ"
    },
    "LoadTimerHandleBJ": {
        "body": "LoadTimerHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTimerHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTimerHandleBJ"
    },
    "LoadTriggerHandleBJ": {
        "body": "LoadTriggerHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTriggerHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTriggerHandleBJ"
    },
    "LoadTriggerConditionHandleBJ": {
        "body": "LoadTriggerConditionHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTriggerConditionHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTriggerConditionHandleBJ"
    },
    "LoadTriggerActionHandleBJ": {
        "body": "LoadTriggerActionHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTriggerActionHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTriggerActionHandleBJ"
    },
    "LoadTriggerEventHandleBJ": {
        "body": "LoadTriggerEventHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTriggerEventHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTriggerEventHandleBJ"
    },
    "LoadForceHandleBJ": {
        "body": "LoadForceHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadForceHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadForceHandleBJ"
    },
    "LoadGroupHandleBJ": {
        "body": "LoadGroupHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadGroupHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadGroupHandleBJ"
    },
    "LoadLocationHandleBJ": {
        "body": "LoadLocationHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadLocationHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadLocationHandleBJ"
    },
    "LoadRectHandleBJ": {
        "body": "LoadRectHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadRectHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadRectHandleBJ"
    },
    "LoadBooleanExprHandleBJ": {
        "body": "LoadBooleanExprHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadBooleanExprHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadBooleanExprHandleBJ"
    },
    "LoadSoundHandleBJ": {
        "body": "LoadSoundHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadSoundHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadSoundHandleBJ"
    },
    "LoadEffectHandleBJ": {
        "body": "LoadEffectHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadEffectHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadEffectHandleBJ"
    },
    "LoadUnitPoolHandleBJ": {
        "body": "LoadUnitPoolHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadUnitPoolHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadUnitPoolHandleBJ"
    },
    "LoadItemPoolHandleBJ": {
        "body": "LoadItemPoolHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadItemPoolHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadItemPoolHandleBJ"
    },
    "LoadQuestHandleBJ": {
        "body": "LoadQuestHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadQuestHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadQuestHandleBJ"
    },
    "LoadQuestItemHandleBJ": {
        "body": "LoadQuestItemHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadQuestItemHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadQuestItemHandleBJ"
    },
    "LoadDefeatConditionHandleBJ": {
        "body": "LoadDefeatConditionHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadDefeatConditionHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadDefeatConditionHandleBJ"
    },
    "LoadTimerDialogHandleBJ": {
        "body": "LoadTimerDialogHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTimerDialogHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTimerDialogHandleBJ"
    },
    "LoadLeaderboardHandleBJ": {
        "body": "LoadLeaderboardHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadLeaderboardHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadLeaderboardHandleBJ"
    },
    "LoadMultiboardHandleBJ": {
        "body": "LoadMultiboardHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadMultiboardHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadMultiboardHandleBJ"
    },
    "LoadMultiboardItemHandleBJ": {
        "body": "LoadMultiboardItemHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadMultiboardItemHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadMultiboardItemHandleBJ"
    },
    "LoadTrackableHandleBJ": {
        "body": "LoadTrackableHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTrackableHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTrackableHandleBJ"
    },
    "LoadDialogHandleBJ": {
        "body": "LoadDialogHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadDialogHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadDialogHandleBJ"
    },
    "LoadButtonHandleBJ": {
        "body": "LoadButtonHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadButtonHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadButtonHandleBJ"
    },
    "LoadTextTagHandleBJ": {
        "body": "LoadTextTagHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadTextTagHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadTextTagHandleBJ"
    },
    "LoadLightningHandleBJ": {
        "body": "LoadLightningHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadLightningHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadLightningHandleBJ"
    },
    "LoadImageHandleBJ": {
        "body": "LoadImageHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadImageHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadImageHandleBJ"
    },
    "LoadUbersplatHandleBJ": {
        "body": "LoadUbersplatHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadUbersplatHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadUbersplatHandleBJ"
    },
    "LoadRegionHandleBJ": {
        "body": "LoadRegionHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadRegionHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadRegionHandleBJ"
    },
    "LoadFogStateHandleBJ": {
        "body": "LoadFogStateHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadFogStateHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadFogStateHandleBJ"
    },
    "LoadFogModifierHandleBJ": {
        "body": "LoadFogModifierHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadFogModifierHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadFogModifierHandleBJ"
    },
    "LoadHashtableHandleBJ": {
        "body": "LoadHashtableHandleBJ(${1:key}, ${2:missionKey}, ${3:table})",
        "description": "LoadHashtableHandleBJ (integer key, integer missionKey, hashtable table)",
        "prefix": "LoadHashtableHandleBJ"
    },
    "RestoreUnitLocFacingAngleBJ": {
        "body": "RestoreUnitLocFacingAngleBJ(${1:key}, ${2:missionKey}, ${3:cache}, ${4:forWhichPlayer}, ${5:loc}, ${6:facing})",
        "description": "RestoreUnitLocFacingAngleBJ (string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, real facing)",
        "prefix": "RestoreUnitLocFacingAngleBJ"
    },
    "RestoreUnitLocFacingPointBJ": {
        "body": "RestoreUnitLocFacingPointBJ(${1:key}, ${2:missionKey}, ${3:cache}, ${4:forWhichPlayer}, ${5:loc}, ${6:lookAt})",
        "description": "RestoreUnitLocFacingPointBJ (string key, string missionKey, gamecache cache, player forWhichPlayer, location loc, location lookAt)",
        "prefix": "RestoreUnitLocFacingPointBJ"
    },
    "GetLastRestoredUnitBJ": {
        "body": "GetLastRestoredUnitBJ()",
        "description": "GetLastRestoredUnitBJ ()",
        "prefix": "GetLastRestoredUnitBJ"
    },
    "FlushGameCacheBJ": {
        "body": "FlushGameCacheBJ(${1:cache})",
        "description": "FlushGameCacheBJ (gamecache cache)",
        "prefix": "FlushGameCacheBJ"
    },
    "FlushStoredMissionBJ": {
        "body": "FlushStoredMissionBJ(${1:missionKey}, ${2:cache})",
        "description": "FlushStoredMissionBJ (string missionKey, gamecache cache)",
        "prefix": "FlushStoredMissionBJ"
    },
    "FlushParentHashtableBJ": {
        "body": "FlushParentHashtableBJ(${1:table})",
        "description": "FlushParentHashtableBJ (hashtable table)",
        "prefix": "FlushParentHashtableBJ"
    },
    "FlushChildHashtableBJ": {
        "body": "FlushChildHashtableBJ(${1:missionKey}, ${2:table})",
        "description": "FlushChildHashtableBJ (integer missionKey, hashtable table)",
        "prefix": "FlushChildHashtableBJ"
    },
    "HaveStoredValue": {
        "body": "HaveStoredValue(${1:key}, ${2:valueType}, ${3:missionKey}, ${4:cache})",
        "description": "HaveStoredValue (string key, integer valueType, string missionKey, gamecache cache)",
        "prefix": "HaveStoredValue"
    },
    "HaveSavedValue": {
        "body": "HaveSavedValue(${1:key}, ${2:valueType}, ${3:missionKey}, ${4:table})",
        "description": "HaveSavedValue (integer key, integer valueType, integer missionKey, hashtable table)",
        "prefix": "HaveSavedValue"
    },
    "ShowCustomCampaignButton": {
        "body": "ShowCustomCampaignButton(${1:show}, ${2:whichButton})",
        "description": "ShowCustomCampaignButton (boolean show, integer whichButton)",
        "prefix": "ShowCustomCampaignButton"
    },
    "IsCustomCampaignButtonVisibile": {
        "body": "IsCustomCampaignButtonVisibile(${1:whichButton})",
        "description": "IsCustomCampaignButtonVisibile (integer whichButton)",
        "prefix": "IsCustomCampaignButtonVisibile"
    },
    "LoadGameBJ": {
        "body": "LoadGameBJ(${1:loadFileName}, ${2:doScoreScreen})",
        "description": "LoadGameBJ (string loadFileName, boolean doScoreScreen)",
        "prefix": "LoadGameBJ"
    },
    "SaveAndChangeLevelBJ": {
        "body": "SaveAndChangeLevelBJ(${1:saveFileName}, ${2:newLevel}, ${3:doScoreScreen})",
        "description": "SaveAndChangeLevelBJ (string saveFileName, string newLevel, boolean doScoreScreen)",
        "prefix": "SaveAndChangeLevelBJ"
    },
    "SaveAndLoadGameBJ": {
        "body": "SaveAndLoadGameBJ(${1:saveFileName}, ${2:loadFileName}, ${3:doScoreScreen})",
        "description": "SaveAndLoadGameBJ (string saveFileName, string loadFileName, boolean doScoreScreen)",
        "prefix": "SaveAndLoadGameBJ"
    },
    "RenameSaveDirectoryBJ": {
        "body": "RenameSaveDirectoryBJ(${1:sourceDirName}, ${2:destDirName})",
        "description": "RenameSaveDirectoryBJ (string sourceDirName, string destDirName)",
        "prefix": "RenameSaveDirectoryBJ"
    },
    "RemoveSaveDirectoryBJ": {
        "body": "RemoveSaveDirectoryBJ(${1:sourceDirName})",
        "description": "RemoveSaveDirectoryBJ (string sourceDirName)",
        "prefix": "RemoveSaveDirectoryBJ"
    },
    "CopySaveGameBJ": {
        "body": "CopySaveGameBJ(${1:sourceSaveName}, ${2:destSaveName})",
        "description": "CopySaveGameBJ (string sourceSaveName, string destSaveName)",
        "prefix": "CopySaveGameBJ"
    },
    "GetPlayerStartLocationX": {
        "body": "GetPlayerStartLocationX(${1:whichPlayer})",
        "description": "GetPlayerStartLocationX (player whichPlayer)",
        "prefix": "GetPlayerStartLocationX"
    },
    "GetPlayerStartLocationY": {
        "body": "GetPlayerStartLocationY(${1:whichPlayer})",
        "description": "GetPlayerStartLocationY (player whichPlayer)",
        "prefix": "GetPlayerStartLocationY"
    },
    "GetPlayerStartLocationLoc": {
        "body": "GetPlayerStartLocationLoc(${1:whichPlayer})",
        "description": "GetPlayerStartLocationLoc (player whichPlayer)",
        "prefix": "GetPlayerStartLocationLoc"
    },
    "GetRectCenter": {
        "body": "GetRectCenter(${1:whichRect})",
        "description": "GetRectCenter (rect whichRect)",
        "prefix": "GetRectCenter"
    },
    "IsPlayerSlotState": {
        "body": "IsPlayerSlotState(${1:whichPlayer}, ${2:whichState})",
        "description": "IsPlayerSlotState (player whichPlayer, playerslotstate whichState)",
        "prefix": "IsPlayerSlotState"
    },
    "GetFadeFromSeconds": {
        "body": "GetFadeFromSeconds(${1:seconds})",
        "description": "GetFadeFromSeconds (real seconds)",
        "prefix": "GetFadeFromSeconds"
    },
    "GetFadeFromSecondsAsReal": {
        "body": "GetFadeFromSecondsAsReal(${1:seconds})",
        "description": "GetFadeFromSecondsAsReal (real seconds)",
        "prefix": "GetFadeFromSecondsAsReal"
    },
    "AdjustPlayerStateSimpleBJ": {
        "body": "AdjustPlayerStateSimpleBJ(${1:whichPlayer}, ${2:whichPlayerState}, ${3:delta})",
        "description": "AdjustPlayerStateSimpleBJ (player whichPlayer, playerstate whichPlayerState, integer delta)",
        "prefix": "AdjustPlayerStateSimpleBJ"
    },
    "AdjustPlayerStateBJ": {
        "body": "AdjustPlayerStateBJ(${1:delta}, ${2:whichPlayer}, ${3:whichPlayerState})",
        "description": "AdjustPlayerStateBJ (integer delta, player whichPlayer, playerstate whichPlayerState)",
        "prefix": "AdjustPlayerStateBJ"
    },
    "SetPlayerStateBJ": {
        "body": "SetPlayerStateBJ(${1:whichPlayer}, ${2:whichPlayerState}, ${3:value})",
        "description": "SetPlayerStateBJ (player whichPlayer, playerstate whichPlayerState, integer value)",
        "prefix": "SetPlayerStateBJ"
    },
    "SetPlayerFlagBJ": {
        "body": "SetPlayerFlagBJ(${1:whichPlayerFlag}, ${2:flag}, ${3:whichPlayer})",
        "description": "SetPlayerFlagBJ (playerstate whichPlayerFlag, boolean flag, player whichPlayer)",
        "prefix": "SetPlayerFlagBJ"
    },
    "SetPlayerTaxRateBJ": {
        "body": "SetPlayerTaxRateBJ(${1:rate}, ${2:whichResource}, ${3:sourcePlayer}, ${4:otherPlayer})",
        "description": "SetPlayerTaxRateBJ (integer rate, playerstate whichResource, player sourcePlayer, player otherPlayer)",
        "prefix": "SetPlayerTaxRateBJ"
    },
    "GetPlayerTaxRateBJ": {
        "body": "GetPlayerTaxRateBJ(${1:whichResource}, ${2:sourcePlayer}, ${3:otherPlayer})",
        "description": "GetPlayerTaxRateBJ (playerstate whichResource, player sourcePlayer, player otherPlayer)",
        "prefix": "GetPlayerTaxRateBJ"
    },
    "IsPlayerFlagSetBJ": {
        "body": "IsPlayerFlagSetBJ(${1:whichPlayerFlag}, ${2:whichPlayer})",
        "description": "IsPlayerFlagSetBJ (playerstate whichPlayerFlag, player whichPlayer)",
        "prefix": "IsPlayerFlagSetBJ"
    },
    "AddResourceAmountBJ": {
        "body": "AddResourceAmountBJ(${1:delta}, ${2:whichUnit})",
        "description": "AddResourceAmountBJ (integer delta, unit whichUnit)",
        "prefix": "AddResourceAmountBJ"
    },
    "GetConvertedPlayerId": {
        "body": "GetConvertedPlayerId(${1:whichPlayer})",
        "description": "GetConvertedPlayerId (player whichPlayer)",
        "prefix": "GetConvertedPlayerId"
    },
    "ConvertedPlayer": {
        "body": "ConvertedPlayer(${1:convertedPlayerId})",
        "description": "ConvertedPlayer (integer convertedPlayerId)",
        "prefix": "ConvertedPlayer"
    },
    "GetRectWidthBJ": {
        "body": "GetRectWidthBJ(${1:r})",
        "description": "GetRectWidthBJ (rect r)",
        "prefix": "GetRectWidthBJ"
    },
    "GetRectHeightBJ": {
        "body": "GetRectHeightBJ(${1:r})",
        "description": "GetRectHeightBJ (rect r)",
        "prefix": "GetRectHeightBJ"
    },
    "BlightGoldMineForPlayerBJ": {
        "body": "BlightGoldMineForPlayerBJ(${1:goldMine}, ${2:whichPlayer})",
        "description": "BlightGoldMineForPlayerBJ (unit goldMine, player whichPlayer)",
        "prefix": "BlightGoldMineForPlayerBJ"
    },
    "BlightGoldMineForPlayer": {
        "body": "BlightGoldMineForPlayer(${1:goldMine}, ${2:whichPlayer})",
        "description": "BlightGoldMineForPlayer (unit goldMine, player whichPlayer)",
        "prefix": "BlightGoldMineForPlayer"
    },
    "GetLastHauntedGoldMine": {
        "body": "GetLastHauntedGoldMine()",
        "description": "GetLastHauntedGoldMine ()",
        "prefix": "GetLastHauntedGoldMine"
    },
    "IsPointBlightedBJ": {
        "body": "IsPointBlightedBJ(${1:where})",
        "description": "IsPointBlightedBJ (location where)",
        "prefix": "IsPointBlightedBJ"
    },
    "SetPlayerColorBJEnum": {
        "body": "SetPlayerColorBJEnum()",
        "description": "SetPlayerColorBJEnum ()",
        "prefix": "SetPlayerColorBJEnum"
    },
    "SetPlayerColorBJ": {
        "body": "SetPlayerColorBJ(${1:whichPlayer}, ${2:color}, ${3:changeExisting})",
        "description": "SetPlayerColorBJ (player whichPlayer, playercolor color, boolean changeExisting)",
        "prefix": "SetPlayerColorBJ"
    },
    "SetPlayerUnitAvailableBJ": {
        "body": "SetPlayerUnitAvailableBJ(${1:unitId}, ${2:allowed}, ${3:whichPlayer})",
        "description": "SetPlayerUnitAvailableBJ (integer unitId, boolean allowed, player whichPlayer)",
        "prefix": "SetPlayerUnitAvailableBJ"
    },
    "LockGameSpeedBJ": {
        "body": "LockGameSpeedBJ()",
        "description": "LockGameSpeedBJ ()",
        "prefix": "LockGameSpeedBJ"
    },
    "UnlockGameSpeedBJ": {
        "body": "UnlockGameSpeedBJ()",
        "description": "UnlockGameSpeedBJ ()",
        "prefix": "UnlockGameSpeedBJ"
    },
    "IssueTargetOrderBJ": {
        "body": "IssueTargetOrderBJ(${1:whichUnit}, ${2:order}, ${3:targetWidget})",
        "description": "IssueTargetOrderBJ (unit whichUnit, string order, widget targetWidget)",
        "prefix": "IssueTargetOrderBJ"
    },
    "IssuePointOrderLocBJ": {
        "body": "IssuePointOrderLocBJ(${1:whichUnit}, ${2:order}, ${3:whichLocation})",
        "description": "IssuePointOrderLocBJ (unit whichUnit, string order, location whichLocation)",
        "prefix": "IssuePointOrderLocBJ"
    },
    "IssueTargetDestructableOrder": {
        "body": "IssueTargetDestructableOrder(${1:whichUnit}, ${2:order}, ${3:targetWidget})",
        "description": "IssueTargetDestructableOrder (unit whichUnit, string order, widget targetWidget)",
        "prefix": "IssueTargetDestructableOrder"
    },
    "IssueTargetItemOrder": {
        "body": "IssueTargetItemOrder(${1:whichUnit}, ${2:order}, ${3:targetWidget})",
        "description": "IssueTargetItemOrder (unit whichUnit, string order, widget targetWidget)",
        "prefix": "IssueTargetItemOrder"
    },
    "IssueImmediateOrderBJ": {
        "body": "IssueImmediateOrderBJ(${1:whichUnit}, ${2:order})",
        "description": "IssueImmediateOrderBJ (unit whichUnit, string order)",
        "prefix": "IssueImmediateOrderBJ"
    },
    "GroupTargetOrderBJ": {
        "body": "GroupTargetOrderBJ(${1:whichGroup}, ${2:order}, ${3:targetWidget})",
        "description": "GroupTargetOrderBJ (group whichGroup, string order, widget targetWidget)",
        "prefix": "GroupTargetOrderBJ"
    },
    "GroupPointOrderLocBJ": {
        "body": "GroupPointOrderLocBJ(${1:whichGroup}, ${2:order}, ${3:whichLocation})",
        "description": "GroupPointOrderLocBJ (group whichGroup, string order, location whichLocation)",
        "prefix": "GroupPointOrderLocBJ"
    },
    "GroupImmediateOrderBJ": {
        "body": "GroupImmediateOrderBJ(${1:whichGroup}, ${2:order})",
        "description": "GroupImmediateOrderBJ (group whichGroup, string order)",
        "prefix": "GroupImmediateOrderBJ"
    },
    "GroupTargetDestructableOrder": {
        "body": "GroupTargetDestructableOrder(${1:whichGroup}, ${2:order}, ${3:targetWidget})",
        "description": "GroupTargetDestructableOrder (group whichGroup, string order, widget targetWidget)",
        "prefix": "GroupTargetDestructableOrder"
    },
    "GroupTargetItemOrder": {
        "body": "GroupTargetItemOrder(${1:whichGroup}, ${2:order}, ${3:targetWidget})",
        "description": "GroupTargetItemOrder (group whichGroup, string order, widget targetWidget)",
        "prefix": "GroupTargetItemOrder"
    },
    "GetDyingDestructable": {
        "body": "GetDyingDestructable()",
        "description": "GetDyingDestructable ()",
        "prefix": "GetDyingDestructable"
    },
    "SetUnitRallyPoint": {
        "body": "SetUnitRallyPoint(${1:whichUnit}, ${2:targPos})",
        "description": "SetUnitRallyPoint (unit whichUnit, location targPos)",
        "prefix": "SetUnitRallyPoint"
    },
    "SetUnitRallyUnit": {
        "body": "SetUnitRallyUnit(${1:whichUnit}, ${2:targUnit})",
        "description": "SetUnitRallyUnit (unit whichUnit, unit targUnit)",
        "prefix": "SetUnitRallyUnit"
    },
    "SetUnitRallyDestructable": {
        "body": "SetUnitRallyDestructable(${1:whichUnit}, ${2:targDest})",
        "description": "SetUnitRallyDestructable (unit whichUnit, destructable targDest)",
        "prefix": "SetUnitRallyDestructable"
    },
    "SaveDyingWidget": {
        "body": "SaveDyingWidget()",
        "description": "SaveDyingWidget ()",
        "prefix": "SaveDyingWidget"
    },
    "SetBlightRectBJ": {
        "body": "SetBlightRectBJ(${1:addBlight}, ${2:whichPlayer}, ${3:r})",
        "description": "SetBlightRectBJ (boolean addBlight, player whichPlayer, rect r)",
        "prefix": "SetBlightRectBJ"
    },
    "SetBlightRadiusLocBJ": {
        "body": "SetBlightRadiusLocBJ(${1:addBlight}, ${2:whichPlayer}, ${3:loc}, ${4:radius})",
        "description": "SetBlightRadiusLocBJ (boolean addBlight, player whichPlayer, location loc, real radius)",
        "prefix": "SetBlightRadiusLocBJ"
    },
    "GetAbilityName": {
        "body": "GetAbilityName(${1:abilcode})",
        "description": "GetAbilityName (integer abilcode)",
        "prefix": "GetAbilityName"
    },
    "MeleeStartingVisibility": {
        "body": "MeleeStartingVisibility()",
        "description": "MeleeStartingVisibility ()",
        "prefix": "MeleeStartingVisibility"
    },
    "MeleeStartingResources": {
        "body": "MeleeStartingResources()",
        "description": "MeleeStartingResources ()",
        "prefix": "MeleeStartingResources"
    },
    "ReducePlayerTechMaxAllowed": {
        "body": "ReducePlayerTechMaxAllowed(${1:whichPlayer}, ${2:techId}, ${3:limit})",
        "description": "ReducePlayerTechMaxAllowed (player whichPlayer, integer techId, integer limit)",
        "prefix": "ReducePlayerTechMaxAllowed"
    },
    "MeleeStartingHeroLimit": {
        "body": "MeleeStartingHeroLimit()",
        "description": "MeleeStartingHeroLimit ()",
        "prefix": "MeleeStartingHeroLimit"
    },
    "MeleeTrainedUnitIsHeroBJFilter": {
        "body": "MeleeTrainedUnitIsHeroBJFilter()",
        "description": "MeleeTrainedUnitIsHeroBJFilter ()",
        "prefix": "MeleeTrainedUnitIsHeroBJFilter"
    },
    "MeleeGrantItemsToHero": {
        "body": "MeleeGrantItemsToHero(${1:whichUnit})",
        "description": "MeleeGrantItemsToHero (unit whichUnit)",
        "prefix": "MeleeGrantItemsToHero"
    },
    "MeleeGrantItemsToTrainedHero": {
        "body": "MeleeGrantItemsToTrainedHero()",
        "description": "MeleeGrantItemsToTrainedHero ()",
        "prefix": "MeleeGrantItemsToTrainedHero"
    },
    "MeleeGrantItemsToHiredHero": {
        "body": "MeleeGrantItemsToHiredHero()",
        "description": "MeleeGrantItemsToHiredHero ()",
        "prefix": "MeleeGrantItemsToHiredHero"
    },
    "MeleeGrantHeroItems": {
        "body": "MeleeGrantHeroItems()",
        "description": "MeleeGrantHeroItems ()",
        "prefix": "MeleeGrantHeroItems"
    },
    "MeleeClearExcessUnit": {
        "body": "MeleeClearExcessUnit()",
        "description": "MeleeClearExcessUnit ()",
        "prefix": "MeleeClearExcessUnit"
    },
    "MeleeClearNearbyUnits": {
        "body": "MeleeClearNearbyUnits(${1:x}, ${2:y}, ${3:range})",
        "description": "MeleeClearNearbyUnits (real x, real y, real range)",
        "prefix": "MeleeClearNearbyUnits"
    },
    "MeleeClearExcessUnits": {
        "body": "MeleeClearExcessUnits()",
        "description": "MeleeClearExcessUnits ()",
        "prefix": "MeleeClearExcessUnits"
    },
    "MeleeEnumFindNearestMine": {
        "body": "MeleeEnumFindNearestMine()",
        "description": "MeleeEnumFindNearestMine ()",
        "prefix": "MeleeEnumFindNearestMine"
    },
    "MeleeFindNearestMine": {
        "body": "MeleeFindNearestMine(${1:src}, ${2:range})",
        "description": "MeleeFindNearestMine (location src, real range)",
        "prefix": "MeleeFindNearestMine"
    },
    "MeleeRandomHeroLoc": {
        "body": "MeleeRandomHeroLoc(${1:p}, ${2:id1}, ${3:id2}, ${4:id3}, ${5:id4}, ${6:loc})",
        "description": "MeleeRandomHeroLoc (player p, integer id1, integer id2, integer id3, integer id4, location loc)",
        "prefix": "MeleeRandomHeroLoc"
    },
    "MeleeGetProjectedLoc": {
        "body": "MeleeGetProjectedLoc(${1:src}, ${2:targ}, ${3:distance}, ${4:deltaAngle})",
        "description": "MeleeGetProjectedLoc (location src, location targ, real distance, real deltaAngle)",
        "prefix": "MeleeGetProjectedLoc"
    },
    "MeleeGetNearestValueWithin": {
        "body": "MeleeGetNearestValueWithin(${1:val}, ${2:minVal}, ${3:maxVal})",
        "description": "MeleeGetNearestValueWithin (real val, real minVal, real maxVal)",
        "prefix": "MeleeGetNearestValueWithin"
    },
    "MeleeGetLocWithinRect": {
        "body": "MeleeGetLocWithinRect(${1:src}, ${2:r})",
        "description": "MeleeGetLocWithinRect (location src, rect r)",
        "prefix": "MeleeGetLocWithinRect"
    },
    "MeleeStartingUnitsHuman": {
        "body": "MeleeStartingUnitsHuman(${1:whichPlayer}, ${2:startLoc}, ${3:doHeroes}, ${4:doCamera}, ${5:doPreload})",
        "description": "MeleeStartingUnitsHuman (player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload)",
        "prefix": "MeleeStartingUnitsHuman"
    },
    "MeleeStartingUnitsOrc": {
        "body": "MeleeStartingUnitsOrc(${1:whichPlayer}, ${2:startLoc}, ${3:doHeroes}, ${4:doCamera}, ${5:doPreload})",
        "description": "MeleeStartingUnitsOrc (player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload)",
        "prefix": "MeleeStartingUnitsOrc"
    },
    "MeleeStartingUnitsUndead": {
        "body": "MeleeStartingUnitsUndead(${1:whichPlayer}, ${2:startLoc}, ${3:doHeroes}, ${4:doCamera}, ${5:doPreload})",
        "description": "MeleeStartingUnitsUndead (player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload)",
        "prefix": "MeleeStartingUnitsUndead"
    },
    "MeleeStartingUnitsNightElf": {
        "body": "MeleeStartingUnitsNightElf(${1:whichPlayer}, ${2:startLoc}, ${3:doHeroes}, ${4:doCamera}, ${5:doPreload})",
        "description": "MeleeStartingUnitsNightElf (player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload)",
        "prefix": "MeleeStartingUnitsNightElf"
    },
    "MeleeStartingUnitsUnknownRace": {
        "body": "MeleeStartingUnitsUnknownRace(${1:whichPlayer}, ${2:startLoc}, ${3:doHeroes}, ${4:doCamera}, ${5:doPreload})",
        "description": "MeleeStartingUnitsUnknownRace (player whichPlayer, location startLoc, boolean doHeroes, boolean doCamera, boolean doPreload)",
        "prefix": "MeleeStartingUnitsUnknownRace"
    },
    "MeleeStartingUnits": {
        "body": "MeleeStartingUnits()",
        "description": "MeleeStartingUnits ()",
        "prefix": "MeleeStartingUnits"
    },
    "MeleeStartingUnitsForPlayer": {
        "body": "MeleeStartingUnitsForPlayer(${1:whichRace}, ${2:whichPlayer}, ${3:loc}, ${4:doHeroes})",
        "description": "MeleeStartingUnitsForPlayer (race whichRace, player whichPlayer, location loc, boolean doHeroes)",
        "prefix": "MeleeStartingUnitsForPlayer"
    },
    "PickMeleeAI": {
        "body": "PickMeleeAI(${1:num}, ${2:s1}, ${3:s2}, ${4:s3})",
        "description": "PickMeleeAI (player num, string s1, string s2, string s3)",
        "prefix": "PickMeleeAI"
    },
    "MeleeStartingAI": {
        "body": "MeleeStartingAI()",
        "description": "MeleeStartingAI ()",
        "prefix": "MeleeStartingAI"
    },
    "LockGuardPosition": {
        "body": "LockGuardPosition(${1:targ})",
        "description": "LockGuardPosition (unit targ)",
        "prefix": "LockGuardPosition"
    },
    "MeleePlayerIsOpponent": {
        "body": "MeleePlayerIsOpponent(${1:playerIndex}, ${2:opponentIndex})",
        "description": "MeleePlayerIsOpponent (integer playerIndex, integer opponentIndex)",
        "prefix": "MeleePlayerIsOpponent"
    },
    "MeleeGetAllyStructureCount": {
        "body": "MeleeGetAllyStructureCount(${1:whichPlayer})",
        "description": "MeleeGetAllyStructureCount (player whichPlayer)",
        "prefix": "MeleeGetAllyStructureCount"
    },
    "MeleeGetAllyCount": {
        "body": "MeleeGetAllyCount(${1:whichPlayer})",
        "description": "MeleeGetAllyCount (player whichPlayer)",
        "prefix": "MeleeGetAllyCount"
    },
    "MeleeGetAllyKeyStructureCount": {
        "body": "MeleeGetAllyKeyStructureCount(${1:whichPlayer})",
        "description": "MeleeGetAllyKeyStructureCount (player whichPlayer)",
        "prefix": "MeleeGetAllyKeyStructureCount"
    },
    "MeleeDoDrawEnum": {
        "body": "MeleeDoDrawEnum()",
        "description": "MeleeDoDrawEnum ()",
        "prefix": "MeleeDoDrawEnum"
    },
    "MeleeDoVictoryEnum": {
        "body": "MeleeDoVictoryEnum()",
        "description": "MeleeDoVictoryEnum ()",
        "prefix": "MeleeDoVictoryEnum"
    },
    "MeleeDoDefeat": {
        "body": "MeleeDoDefeat(${1:whichPlayer})",
        "description": "MeleeDoDefeat (player whichPlayer)",
        "prefix": "MeleeDoDefeat"
    },
    "MeleeDoDefeatEnum": {
        "body": "MeleeDoDefeatEnum()",
        "description": "MeleeDoDefeatEnum ()",
        "prefix": "MeleeDoDefeatEnum"
    },
    "MeleeDoLeave": {
        "body": "MeleeDoLeave(${1:whichPlayer})",
        "description": "MeleeDoLeave (player whichPlayer)",
        "prefix": "MeleeDoLeave"
    },
    "MeleeRemoveObservers": {
        "body": "MeleeRemoveObservers()",
        "description": "MeleeRemoveObservers ()",
        "prefix": "MeleeRemoveObservers"
    },
    "MeleeCheckForVictors": {
        "body": "MeleeCheckForVictors()",
        "description": "MeleeCheckForVictors ()",
        "prefix": "MeleeCheckForVictors"
    },
    "MeleeCheckForLosersAndVictors": {
        "body": "MeleeCheckForLosersAndVictors()",
        "description": "MeleeCheckForLosersAndVictors ()",
        "prefix": "MeleeCheckForLosersAndVictors"
    },
    "MeleeGetCrippledWarningMessage": {
        "body": "MeleeGetCrippledWarningMessage(${1:whichPlayer})",
        "description": "MeleeGetCrippledWarningMessage (player whichPlayer)",
        "prefix": "MeleeGetCrippledWarningMessage"
    },
    "MeleeGetCrippledTimerMessage": {
        "body": "MeleeGetCrippledTimerMessage(${1:whichPlayer})",
        "description": "MeleeGetCrippledTimerMessage (player whichPlayer)",
        "prefix": "MeleeGetCrippledTimerMessage"
    },
    "MeleeGetCrippledRevealedMessage": {
        "body": "MeleeGetCrippledRevealedMessage(${1:whichPlayer})",
        "description": "MeleeGetCrippledRevealedMessage (player whichPlayer)",
        "prefix": "MeleeGetCrippledRevealedMessage"
    },
    "MeleeExposePlayer": {
        "body": "MeleeExposePlayer(${1:whichPlayer}, ${2:expose})",
        "description": "MeleeExposePlayer (player whichPlayer, boolean expose)",
        "prefix": "MeleeExposePlayer"
    },
    "MeleeExposeAllPlayers": {
        "body": "MeleeExposeAllPlayers()",
        "description": "MeleeExposeAllPlayers ()",
        "prefix": "MeleeExposeAllPlayers"
    },
    "MeleeCrippledPlayerTimeout": {
        "body": "MeleeCrippledPlayerTimeout()",
        "description": "MeleeCrippledPlayerTimeout ()",
        "prefix": "MeleeCrippledPlayerTimeout"
    },
    "MeleePlayerIsCrippled": {
        "body": "MeleePlayerIsCrippled(${1:whichPlayer})",
        "description": "MeleePlayerIsCrippled (player whichPlayer)",
        "prefix": "MeleePlayerIsCrippled"
    },
    "MeleeCheckForCrippledPlayers": {
        "body": "MeleeCheckForCrippledPlayers()",
        "description": "MeleeCheckForCrippledPlayers ()",
        "prefix": "MeleeCheckForCrippledPlayers"
    },
    "MeleeCheckLostUnit": {
        "body": "MeleeCheckLostUnit(${1:lostUnit})",
        "description": "MeleeCheckLostUnit (unit lostUnit)",
        "prefix": "MeleeCheckLostUnit"
    },
    "MeleeCheckAddedUnit": {
        "body": "MeleeCheckAddedUnit(${1:addedUnit})",
        "description": "MeleeCheckAddedUnit (unit addedUnit)",
        "prefix": "MeleeCheckAddedUnit"
    },
    "MeleeTriggerActionConstructCancel": {
        "body": "MeleeTriggerActionConstructCancel()",
        "description": "MeleeTriggerActionConstructCancel ()",
        "prefix": "MeleeTriggerActionConstructCancel"
    },
    "MeleeTriggerActionUnitDeath": {
        "body": "MeleeTriggerActionUnitDeath()",
        "description": "MeleeTriggerActionUnitDeath ()",
        "prefix": "MeleeTriggerActionUnitDeath"
    },
    "MeleeTriggerActionUnitConstructionStart": {
        "body": "MeleeTriggerActionUnitConstructionStart()",
        "description": "MeleeTriggerActionUnitConstructionStart ()",
        "prefix": "MeleeTriggerActionUnitConstructionStart"
    },
    "MeleeTriggerActionPlayerDefeated": {
        "body": "MeleeTriggerActionPlayerDefeated()",
        "description": "MeleeTriggerActionPlayerDefeated ()",
        "prefix": "MeleeTriggerActionPlayerDefeated"
    },
    "MeleeTriggerActionPlayerLeft": {
        "body": "MeleeTriggerActionPlayerLeft()",
        "description": "MeleeTriggerActionPlayerLeft ()",
        "prefix": "MeleeTriggerActionPlayerLeft"
    },
    "MeleeTriggerActionAllianceChange": {
        "body": "MeleeTriggerActionAllianceChange()",
        "description": "MeleeTriggerActionAllianceChange ()",
        "prefix": "MeleeTriggerActionAllianceChange"
    },
    "MeleeTriggerTournamentFinishSoon": {
        "body": "MeleeTriggerTournamentFinishSoon()",
        "description": "MeleeTriggerTournamentFinishSoon ()",
        "prefix": "MeleeTriggerTournamentFinishSoon"
    },
    "MeleeWasUserPlayer": {
        "body": "MeleeWasUserPlayer(${1:whichPlayer})",
        "description": "MeleeWasUserPlayer (player whichPlayer)",
        "prefix": "MeleeWasUserPlayer"
    },
    "MeleeTournamentFinishNowRuleA": {
        "body": "MeleeTournamentFinishNowRuleA(${1:multiplier})",
        "description": "MeleeTournamentFinishNowRuleA (integer multiplier)",
        "prefix": "MeleeTournamentFinishNowRuleA"
    },
    "MeleeTriggerTournamentFinishNow": {
        "body": "MeleeTriggerTournamentFinishNow()",
        "description": "MeleeTriggerTournamentFinishNow ()",
        "prefix": "MeleeTriggerTournamentFinishNow"
    },
    "MeleeInitVictoryDefeat": {
        "body": "MeleeInitVictoryDefeat()",
        "description": "MeleeInitVictoryDefeat ()",
        "prefix": "MeleeInitVictoryDefeat"
    },
    "CheckInitPlayerSlotAvailability": {
        "body": "CheckInitPlayerSlotAvailability()",
        "description": "CheckInitPlayerSlotAvailability ()",
        "prefix": "CheckInitPlayerSlotAvailability"
    },
    "SetPlayerSlotAvailable": {
        "body": "SetPlayerSlotAvailable(${1:whichPlayer}, ${2:control})",
        "description": "SetPlayerSlotAvailable (player whichPlayer, mapcontrol control)",
        "prefix": "SetPlayerSlotAvailable"
    },
    "TeamInitPlayerSlots": {
        "body": "TeamInitPlayerSlots(${1:teamCount})",
        "description": "TeamInitPlayerSlots (integer teamCount)",
        "prefix": "TeamInitPlayerSlots"
    },
    "MeleeInitPlayerSlots": {
        "body": "MeleeInitPlayerSlots()",
        "description": "MeleeInitPlayerSlots ()",
        "prefix": "MeleeInitPlayerSlots"
    },
    "FFAInitPlayerSlots": {
        "body": "FFAInitPlayerSlots()",
        "description": "FFAInitPlayerSlots ()",
        "prefix": "FFAInitPlayerSlots"
    },
    "OneOnOneInitPlayerSlots": {
        "body": "OneOnOneInitPlayerSlots()",
        "description": "OneOnOneInitPlayerSlots ()",
        "prefix": "OneOnOneInitPlayerSlots"
    },
    "InitGenericPlayerSlots": {
        "body": "InitGenericPlayerSlots()",
        "description": "InitGenericPlayerSlots ()",
        "prefix": "InitGenericPlayerSlots"
    },
    "SetDNCSoundsDawn": {
        "body": "SetDNCSoundsDawn()",
        "description": "SetDNCSoundsDawn ()",
        "prefix": "SetDNCSoundsDawn"
    },
    "SetDNCSoundsDusk": {
        "body": "SetDNCSoundsDusk()",
        "description": "SetDNCSoundsDusk ()",
        "prefix": "SetDNCSoundsDusk"
    },
    "SetDNCSoundsDay": {
        "body": "SetDNCSoundsDay()",
        "description": "SetDNCSoundsDay ()",
        "prefix": "SetDNCSoundsDay"
    },
    "SetDNCSoundsNight": {
        "body": "SetDNCSoundsNight()",
        "description": "SetDNCSoundsNight ()",
        "prefix": "SetDNCSoundsNight"
    },
    "InitDNCSounds": {
        "body": "InitDNCSounds()",
        "description": "InitDNCSounds ()",
        "prefix": "InitDNCSounds"
    },
    "InitBlizzardGlobals": {
        "body": "InitBlizzardGlobals()",
        "description": "InitBlizzardGlobals ()",
        "prefix": "InitBlizzardGlobals"
    },
    "InitQueuedTriggers": {
        "body": "InitQueuedTriggers()",
        "description": "InitQueuedTriggers ()",
        "prefix": "InitQueuedTriggers"
    },
    "InitMapRects": {
        "body": "InitMapRects()",
        "description": "InitMapRects ()",
        "prefix": "InitMapRects"
    },
    "InitSummonableCaps": {
        "body": "InitSummonableCaps()",
        "description": "InitSummonableCaps ()",
        "prefix": "InitSummonableCaps"
    },
    "UpdateStockAvailability": {
        "body": "UpdateStockAvailability(${1:whichItem})",
        "description": "UpdateStockAvailability (item whichItem)",
        "prefix": "UpdateStockAvailability"
    },
    "UpdateEachStockBuildingEnum": {
        "body": "UpdateEachStockBuildingEnum()",
        "description": "UpdateEachStockBuildingEnum ()",
        "prefix": "UpdateEachStockBuildingEnum"
    },
    "UpdateEachStockBuilding": {
        "body": "UpdateEachStockBuilding(${1:iType}, ${2:iLevel})",
        "description": "UpdateEachStockBuilding (itemtype iType, integer iLevel)",
        "prefix": "UpdateEachStockBuilding"
    },
    "PerformStockUpdates": {
        "body": "PerformStockUpdates()",
        "description": "PerformStockUpdates ()",
        "prefix": "PerformStockUpdates"
    },
    "StartStockUpdates": {
        "body": "StartStockUpdates()",
        "description": "StartStockUpdates ()",
        "prefix": "StartStockUpdates"
    },
    "RemovePurchasedItem": {
        "body": "RemovePurchasedItem()",
        "description": "RemovePurchasedItem ()",
        "prefix": "RemovePurchasedItem"
    },
    "InitNeutralBuildings": {
        "body": "InitNeutralBuildings()",
        "description": "InitNeutralBuildings ()",
        "prefix": "InitNeutralBuildings"
    },
    "MarkGameStarted": {
        "body": "MarkGameStarted()",
        "description": "MarkGameStarted ()",
        "prefix": "MarkGameStarted"
    },
    "DetectGameStarted": {
        "body": "DetectGameStarted()",
        "description": "DetectGameStarted ()",
        "prefix": "DetectGameStarted"
    },
    "InitBlizzard": {
        "body": "InitBlizzard()",
        "description": "InitBlizzard ()",
        "prefix": "InitBlizzard"
    },
    "RandomDistReset": {
        "body": "RandomDistReset()",
        "description": "RandomDistReset ()",
        "prefix": "RandomDistReset"
    },
    "RandomDistAddItem": {
        "body": "RandomDistAddItem(${1:inID}, ${2:inChance})",
        "description": "RandomDistAddItem (integer inID, integer inChance)",
        "prefix": "RandomDistAddItem"
    },
    "RandomDistChoose": {
        "body": "RandomDistChoose()",
        "description": "RandomDistChoose ()",
        "prefix": "RandomDistChoose"
    },
    "UnitDropItem": {
        "body": "UnitDropItem(${1:inUnit}, ${2:inItemID})",
        "description": "UnitDropItem (unit inUnit, integer inItemID)",
        "prefix": "UnitDropItem"
    },
    "WidgetDropItem": {
        "body": "WidgetDropItem(${1:inWidget}, ${2:inItemID})",
        "description": "WidgetDropItem (widget inWidget, integer inItemID)",
        "prefix": "WidgetDropItem"
    },
    "BlzIsLastInstanceObjectFunctionSuccessful": {
        "body": "BlzIsLastInstanceObjectFunctionSuccessful()",
        "description": "BlzIsLastInstanceObjectFunctionSuccessful ()",
        "prefix": "BlzIsLastInstanceObjectFunctionSuccessful"
    },
    "BlzSetAbilityBooleanFieldBJ": {
        "body": "BlzSetAbilityBooleanFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityBooleanFieldBJ (ability whichAbility, abilitybooleanfield whichField, boolean value)",
        "prefix": "BlzSetAbilityBooleanFieldBJ"
    },
    "BlzSetAbilityIntegerFieldBJ": {
        "body": "BlzSetAbilityIntegerFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityIntegerFieldBJ (ability whichAbility, abilityintegerfield whichField, integer value)",
        "prefix": "BlzSetAbilityIntegerFieldBJ"
    },
    "BlzSetAbilityRealFieldBJ": {
        "body": "BlzSetAbilityRealFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityRealFieldBJ (ability whichAbility, abilityrealfield whichField, real value)",
        "prefix": "BlzSetAbilityRealFieldBJ"
    },
    "BlzSetAbilityStringFieldBJ": {
        "body": "BlzSetAbilityStringFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityStringFieldBJ (ability whichAbility, abilitystringfield whichField, string value)",
        "prefix": "BlzSetAbilityStringFieldBJ"
    },
    "BlzSetAbilityBooleanLevelFieldBJ": {
        "body": "BlzSetAbilityBooleanLevelFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityBooleanLevelFieldBJ (ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value)",
        "prefix": "BlzSetAbilityBooleanLevelFieldBJ"
    },
    "BlzSetAbilityIntegerLevelFieldBJ": {
        "body": "BlzSetAbilityIntegerLevelFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityIntegerLevelFieldBJ (ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value)",
        "prefix": "BlzSetAbilityIntegerLevelFieldBJ"
    },
    "BlzSetAbilityRealLevelFieldBJ": {
        "body": "BlzSetAbilityRealLevelFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityRealLevelFieldBJ (ability whichAbility, abilityreallevelfield whichField, integer level, real value)",
        "prefix": "BlzSetAbilityRealLevelFieldBJ"
    },
    "BlzSetAbilityStringLevelFieldBJ": {
        "body": "BlzSetAbilityStringLevelFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityStringLevelFieldBJ (ability whichAbility, abilitystringlevelfield whichField, integer level, string value)",
        "prefix": "BlzSetAbilityStringLevelFieldBJ"
    },
    "BlzSetAbilityBooleanLevelArrayFieldBJ": {
        "body": "BlzSetAbilityBooleanLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityBooleanLevelArrayFieldBJ (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)",
        "prefix": "BlzSetAbilityBooleanLevelArrayFieldBJ"
    },
    "BlzSetAbilityIntegerLevelArrayFieldBJ": {
        "body": "BlzSetAbilityIntegerLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityIntegerLevelArrayFieldBJ (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)",
        "prefix": "BlzSetAbilityIntegerLevelArrayFieldBJ"
    },
    "BlzSetAbilityRealLevelArrayFieldBJ": {
        "body": "BlzSetAbilityRealLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityRealLevelArrayFieldBJ (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value)",
        "prefix": "BlzSetAbilityRealLevelArrayFieldBJ"
    },
    "BlzSetAbilityStringLevelArrayFieldBJ": {
        "body": "BlzSetAbilityStringLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityStringLevelArrayFieldBJ (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index, string value)",
        "prefix": "BlzSetAbilityStringLevelArrayFieldBJ"
    },
    "BlzAddAbilityBooleanLevelArrayFieldBJ": {
        "body": "BlzAddAbilityBooleanLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityBooleanLevelArrayFieldBJ (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)",
        "prefix": "BlzAddAbilityBooleanLevelArrayFieldBJ"
    },
    "BlzAddAbilityIntegerLevelArrayFieldBJ": {
        "body": "BlzAddAbilityIntegerLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityIntegerLevelArrayFieldBJ (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)",
        "prefix": "BlzAddAbilityIntegerLevelArrayFieldBJ"
    },
    "BlzAddAbilityRealLevelArrayFieldBJ": {
        "body": "BlzAddAbilityRealLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityRealLevelArrayFieldBJ (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)",
        "prefix": "BlzAddAbilityRealLevelArrayFieldBJ"
    },
    "BlzAddAbilityStringLevelArrayFieldBJ": {
        "body": "BlzAddAbilityStringLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityStringLevelArrayFieldBJ (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)",
        "prefix": "BlzAddAbilityStringLevelArrayFieldBJ"
    },
    "BlzRemoveAbilityBooleanLevelArrayFieldBJ": {
        "body": "BlzRemoveAbilityBooleanLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityBooleanLevelArrayFieldBJ (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)",
        "prefix": "BlzRemoveAbilityBooleanLevelArrayFieldBJ"
    },
    "BlzRemoveAbilityIntegerLevelArrayFieldBJ": {
        "body": "BlzRemoveAbilityIntegerLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityIntegerLevelArrayFieldBJ (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)",
        "prefix": "BlzRemoveAbilityIntegerLevelArrayFieldBJ"
    },
    "BlzRemoveAbilityRealLevelArrayFieldBJ": {
        "body": "BlzRemoveAbilityRealLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityRealLevelArrayFieldBJ (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)",
        "prefix": "BlzRemoveAbilityRealLevelArrayFieldBJ"
    },
    "BlzRemoveAbilityStringLevelArrayFieldBJ": {
        "body": "BlzRemoveAbilityStringLevelArrayFieldBJ(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityStringLevelArrayFieldBJ (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)",
        "prefix": "BlzRemoveAbilityStringLevelArrayFieldBJ"
    },
    "BlzItemAddAbilityBJ": {
        "body": "BlzItemAddAbilityBJ(${1:whichItem}, ${2:abilCode})",
        "description": "BlzItemAddAbilityBJ (item whichItem, integer abilCode)",
        "prefix": "BlzItemAddAbilityBJ"
    },
    "BlzItemRemoveAbilityBJ": {
        "body": "BlzItemRemoveAbilityBJ(${1:whichItem}, ${2:abilCode})",
        "description": "BlzItemRemoveAbilityBJ (item whichItem, integer abilCode)",
        "prefix": "BlzItemRemoveAbilityBJ"
    },
    "BlzSetItemBooleanFieldBJ": {
        "body": "BlzSetItemBooleanFieldBJ(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemBooleanFieldBJ (item whichItem, itembooleanfield whichField, boolean value)",
        "prefix": "BlzSetItemBooleanFieldBJ"
    },
    "BlzSetItemIntegerFieldBJ": {
        "body": "BlzSetItemIntegerFieldBJ(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemIntegerFieldBJ (item whichItem, itemintegerfield whichField, integer value)",
        "prefix": "BlzSetItemIntegerFieldBJ"
    },
    "BlzSetItemRealFieldBJ": {
        "body": "BlzSetItemRealFieldBJ(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemRealFieldBJ (item whichItem, itemrealfield whichField, real value)",
        "prefix": "BlzSetItemRealFieldBJ"
    },
    "BlzSetItemStringFieldBJ": {
        "body": "BlzSetItemStringFieldBJ(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemStringFieldBJ (item whichItem, itemstringfield whichField, string value)",
        "prefix": "BlzSetItemStringFieldBJ"
    },
    "BlzSetUnitBooleanFieldBJ": {
        "body": "BlzSetUnitBooleanFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitBooleanFieldBJ (unit whichUnit, unitbooleanfield whichField, boolean value)",
        "prefix": "BlzSetUnitBooleanFieldBJ"
    },
    "BlzSetUnitIntegerFieldBJ": {
        "body": "BlzSetUnitIntegerFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitIntegerFieldBJ (unit whichUnit, unitintegerfield whichField, integer value)",
        "prefix": "BlzSetUnitIntegerFieldBJ"
    },
    "BlzSetUnitRealFieldBJ": {
        "body": "BlzSetUnitRealFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitRealFieldBJ (unit whichUnit, unitrealfield whichField, real value)",
        "prefix": "BlzSetUnitRealFieldBJ"
    },
    "BlzSetUnitStringFieldBJ": {
        "body": "BlzSetUnitStringFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitStringFieldBJ (unit whichUnit, unitstringfield whichField, string value)",
        "prefix": "BlzSetUnitStringFieldBJ"
    },
    "BlzSetUnitWeaponBooleanFieldBJ": {
        "body": "BlzSetUnitWeaponBooleanFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponBooleanFieldBJ (unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value)",
        "prefix": "BlzSetUnitWeaponBooleanFieldBJ"
    },
    "BlzSetUnitWeaponIntegerFieldBJ": {
        "body": "BlzSetUnitWeaponIntegerFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponIntegerFieldBJ (unit whichUnit, unitweaponintegerfield whichField, integer index, integer value)",
        "prefix": "BlzSetUnitWeaponIntegerFieldBJ"
    },
    "BlzSetUnitWeaponRealFieldBJ": {
        "body": "BlzSetUnitWeaponRealFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponRealFieldBJ (unit whichUnit, unitweaponrealfield whichField, integer index, real value)",
        "prefix": "BlzSetUnitWeaponRealFieldBJ"
    },
    "BlzSetUnitWeaponStringFieldBJ": {
        "body": "BlzSetUnitWeaponStringFieldBJ(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponStringFieldBJ (unit whichUnit, unitweaponstringfield whichField, integer index, string value)",
        "prefix": "BlzSetUnitWeaponStringFieldBJ"
    },
    "ConvertRace": {
        "body": "ConvertRace(${1:i})",
        "description": "ConvertRace (integer i)",
        "prefix": "ConvertRace"
    },
    "ConvertAllianceType": {
        "body": "ConvertAllianceType(${1:i})",
        "description": "ConvertAllianceType (integer i)",
        "prefix": "ConvertAllianceType"
    },
    "ConvertRacePref": {
        "body": "ConvertRacePref(${1:i})",
        "description": "ConvertRacePref (integer i)",
        "prefix": "ConvertRacePref"
    },
    "ConvertIGameState": {
        "body": "ConvertIGameState(${1:i})",
        "description": "ConvertIGameState (integer i)",
        "prefix": "ConvertIGameState"
    },
    "ConvertFGameState": {
        "body": "ConvertFGameState(${1:i})",
        "description": "ConvertFGameState (integer i)",
        "prefix": "ConvertFGameState"
    },
    "ConvertPlayerState": {
        "body": "ConvertPlayerState(${1:i})",
        "description": "ConvertPlayerState (integer i)",
        "prefix": "ConvertPlayerState"
    },
    "ConvertPlayerScore": {
        "body": "ConvertPlayerScore(${1:i})",
        "description": "ConvertPlayerScore (integer i)",
        "prefix": "ConvertPlayerScore"
    },
    "ConvertPlayerGameResult": {
        "body": "ConvertPlayerGameResult(${1:i})",
        "description": "ConvertPlayerGameResult (integer i)",
        "prefix": "ConvertPlayerGameResult"
    },
    "ConvertUnitState": {
        "body": "ConvertUnitState(${1:i})",
        "description": "ConvertUnitState (integer i)",
        "prefix": "ConvertUnitState"
    },
    "ConvertAIDifficulty": {
        "body": "ConvertAIDifficulty(${1:i})",
        "description": "ConvertAIDifficulty (integer i)",
        "prefix": "ConvertAIDifficulty"
    },
    "ConvertGameEvent": {
        "body": "ConvertGameEvent(${1:i})",
        "description": "ConvertGameEvent (integer i)",
        "prefix": "ConvertGameEvent"
    },
    "ConvertPlayerEvent": {
        "body": "ConvertPlayerEvent(${1:i})",
        "description": "ConvertPlayerEvent (integer i)",
        "prefix": "ConvertPlayerEvent"
    },
    "ConvertPlayerUnitEvent": {
        "body": "ConvertPlayerUnitEvent(${1:i})",
        "description": "ConvertPlayerUnitEvent (integer i)",
        "prefix": "ConvertPlayerUnitEvent"
    },
    "ConvertWidgetEvent": {
        "body": "ConvertWidgetEvent(${1:i})",
        "description": "ConvertWidgetEvent (integer i)",
        "prefix": "ConvertWidgetEvent"
    },
    "ConvertDialogEvent": {
        "body": "ConvertDialogEvent(${1:i})",
        "description": "ConvertDialogEvent (integer i)",
        "prefix": "ConvertDialogEvent"
    },
    "ConvertUnitEvent": {
        "body": "ConvertUnitEvent(${1:i})",
        "description": "ConvertUnitEvent (integer i)",
        "prefix": "ConvertUnitEvent"
    },
    "ConvertLimitOp": {
        "body": "ConvertLimitOp(${1:i})",
        "description": "ConvertLimitOp (integer i)",
        "prefix": "ConvertLimitOp"
    },
    "ConvertUnitType": {
        "body": "ConvertUnitType(${1:i})",
        "description": "ConvertUnitType (integer i)",
        "prefix": "ConvertUnitType"
    },
    "ConvertGameSpeed": {
        "body": "ConvertGameSpeed(${1:i})",
        "description": "ConvertGameSpeed (integer i)",
        "prefix": "ConvertGameSpeed"
    },
    "ConvertPlacement": {
        "body": "ConvertPlacement(${1:i})",
        "description": "ConvertPlacement (integer i)",
        "prefix": "ConvertPlacement"
    },
    "ConvertStartLocPrio": {
        "body": "ConvertStartLocPrio(${1:i})",
        "description": "ConvertStartLocPrio (integer i)",
        "prefix": "ConvertStartLocPrio"
    },
    "ConvertGameDifficulty": {
        "body": "ConvertGameDifficulty(${1:i})",
        "description": "ConvertGameDifficulty (integer i)",
        "prefix": "ConvertGameDifficulty"
    },
    "ConvertGameType": {
        "body": "ConvertGameType(${1:i})",
        "description": "ConvertGameType (integer i)",
        "prefix": "ConvertGameType"
    },
    "ConvertMapFlag": {
        "body": "ConvertMapFlag(${1:i})",
        "description": "ConvertMapFlag (integer i)",
        "prefix": "ConvertMapFlag"
    },
    "ConvertMapVisibility": {
        "body": "ConvertMapVisibility(${1:i})",
        "description": "ConvertMapVisibility (integer i)",
        "prefix": "ConvertMapVisibility"
    },
    "ConvertMapSetting": {
        "body": "ConvertMapSetting(${1:i})",
        "description": "ConvertMapSetting (integer i)",
        "prefix": "ConvertMapSetting"
    },
    "ConvertMapDensity": {
        "body": "ConvertMapDensity(${1:i})",
        "description": "ConvertMapDensity (integer i)",
        "prefix": "ConvertMapDensity"
    },
    "ConvertMapControl": {
        "body": "ConvertMapControl(${1:i})",
        "description": "ConvertMapControl (integer i)",
        "prefix": "ConvertMapControl"
    },
    "ConvertPlayerColor": {
        "body": "ConvertPlayerColor(${1:i})",
        "description": "ConvertPlayerColor (integer i)",
        "prefix": "ConvertPlayerColor"
    },
    "ConvertPlayerSlotState": {
        "body": "ConvertPlayerSlotState(${1:i})",
        "description": "ConvertPlayerSlotState (integer i)",
        "prefix": "ConvertPlayerSlotState"
    },
    "ConvertVolumeGroup": {
        "body": "ConvertVolumeGroup(${1:i})",
        "description": "ConvertVolumeGroup (integer i)",
        "prefix": "ConvertVolumeGroup"
    },
    "ConvertCameraField": {
        "body": "ConvertCameraField(${1:i})",
        "description": "ConvertCameraField (integer i)",
        "prefix": "ConvertCameraField"
    },
    "ConvertBlendMode": {
        "body": "ConvertBlendMode(${1:i})",
        "description": "ConvertBlendMode (integer i)",
        "prefix": "ConvertBlendMode"
    },
    "ConvertRarityControl": {
        "body": "ConvertRarityControl(${1:i})",
        "description": "ConvertRarityControl (integer i)",
        "prefix": "ConvertRarityControl"
    },
    "ConvertTexMapFlags": {
        "body": "ConvertTexMapFlags(${1:i})",
        "description": "ConvertTexMapFlags (integer i)",
        "prefix": "ConvertTexMapFlags"
    },
    "ConvertFogState": {
        "body": "ConvertFogState(${1:i})",
        "description": "ConvertFogState (integer i)",
        "prefix": "ConvertFogState"
    },
    "ConvertEffectType": {
        "body": "ConvertEffectType(${1:i})",
        "description": "ConvertEffectType (integer i)",
        "prefix": "ConvertEffectType"
    },
    "ConvertVersion": {
        "body": "ConvertVersion(${1:i})",
        "description": "ConvertVersion (integer i)",
        "prefix": "ConvertVersion"
    },
    "ConvertItemType": {
        "body": "ConvertItemType(${1:i})",
        "description": "ConvertItemType (integer i)",
        "prefix": "ConvertItemType"
    },
    "ConvertAttackType": {
        "body": "ConvertAttackType(${1:i})",
        "description": "ConvertAttackType (integer i)",
        "prefix": "ConvertAttackType"
    },
    "ConvertDamageType": {
        "body": "ConvertDamageType(${1:i})",
        "description": "ConvertDamageType (integer i)",
        "prefix": "ConvertDamageType"
    },
    "ConvertWeaponType": {
        "body": "ConvertWeaponType(${1:i})",
        "description": "ConvertWeaponType (integer i)",
        "prefix": "ConvertWeaponType"
    },
    "ConvertSoundType": {
        "body": "ConvertSoundType(${1:i})",
        "description": "ConvertSoundType (integer i)",
        "prefix": "ConvertSoundType"
    },
    "ConvertPathingType": {
        "body": "ConvertPathingType(${1:i})",
        "description": "ConvertPathingType (integer i)",
        "prefix": "ConvertPathingType"
    },
    "ConvertMouseButtonType": {
        "body": "ConvertMouseButtonType(${1:i})",
        "description": "ConvertMouseButtonType (integer i)",
        "prefix": "ConvertMouseButtonType"
    },
    "ConvertAnimType": {
        "body": "ConvertAnimType(${1:i})",
        "description": "ConvertAnimType (integer i)",
        "prefix": "ConvertAnimType"
    },
    "ConvertSubAnimType": {
        "body": "ConvertSubAnimType(${1:i})",
        "description": "ConvertSubAnimType (integer i)",
        "prefix": "ConvertSubAnimType"
    },
    "ConvertOriginFrameType": {
        "body": "ConvertOriginFrameType(${1:i})",
        "description": "ConvertOriginFrameType (integer i)",
        "prefix": "ConvertOriginFrameType"
    },
    "ConvertFramePointType": {
        "body": "ConvertFramePointType(${1:i})",
        "description": "ConvertFramePointType (integer i)",
        "prefix": "ConvertFramePointType"
    },
    "ConvertTextAlignType": {
        "body": "ConvertTextAlignType(${1:i})",
        "description": "ConvertTextAlignType (integer i)",
        "prefix": "ConvertTextAlignType"
    },
    "ConvertFrameEventType": {
        "body": "ConvertFrameEventType(${1:i})",
        "description": "ConvertFrameEventType (integer i)",
        "prefix": "ConvertFrameEventType"
    },
    "ConvertOsKeyType": {
        "body": "ConvertOsKeyType(${1:i})",
        "description": "ConvertOsKeyType (integer i)",
        "prefix": "ConvertOsKeyType"
    },
    "ConvertAbilityIntegerField": {
        "body": "ConvertAbilityIntegerField(${1:i})",
        "description": "ConvertAbilityIntegerField (integer i)",
        "prefix": "ConvertAbilityIntegerField"
    },
    "ConvertAbilityRealField": {
        "body": "ConvertAbilityRealField(${1:i})",
        "description": "ConvertAbilityRealField (integer i)",
        "prefix": "ConvertAbilityRealField"
    },
    "ConvertAbilityBooleanField": {
        "body": "ConvertAbilityBooleanField(${1:i})",
        "description": "ConvertAbilityBooleanField (integer i)",
        "prefix": "ConvertAbilityBooleanField"
    },
    "ConvertAbilityStringField": {
        "body": "ConvertAbilityStringField(${1:i})",
        "description": "ConvertAbilityStringField (integer i)",
        "prefix": "ConvertAbilityStringField"
    },
    "ConvertAbilityIntegerLevelField": {
        "body": "ConvertAbilityIntegerLevelField(${1:i})",
        "description": "ConvertAbilityIntegerLevelField (integer i)",
        "prefix": "ConvertAbilityIntegerLevelField"
    },
    "ConvertAbilityRealLevelField": {
        "body": "ConvertAbilityRealLevelField(${1:i})",
        "description": "ConvertAbilityRealLevelField (integer i)",
        "prefix": "ConvertAbilityRealLevelField"
    },
    "ConvertAbilityBooleanLevelField": {
        "body": "ConvertAbilityBooleanLevelField(${1:i})",
        "description": "ConvertAbilityBooleanLevelField (integer i)",
        "prefix": "ConvertAbilityBooleanLevelField"
    },
    "ConvertAbilityStringLevelField": {
        "body": "ConvertAbilityStringLevelField(${1:i})",
        "description": "ConvertAbilityStringLevelField (integer i)",
        "prefix": "ConvertAbilityStringLevelField"
    },
    "ConvertAbilityIntegerLevelArrayField": {
        "body": "ConvertAbilityIntegerLevelArrayField(${1:i})",
        "description": "ConvertAbilityIntegerLevelArrayField (integer i)",
        "prefix": "ConvertAbilityIntegerLevelArrayField"
    },
    "ConvertAbilityRealLevelArrayField": {
        "body": "ConvertAbilityRealLevelArrayField(${1:i})",
        "description": "ConvertAbilityRealLevelArrayField (integer i)",
        "prefix": "ConvertAbilityRealLevelArrayField"
    },
    "ConvertAbilityBooleanLevelArrayField": {
        "body": "ConvertAbilityBooleanLevelArrayField(${1:i})",
        "description": "ConvertAbilityBooleanLevelArrayField (integer i)",
        "prefix": "ConvertAbilityBooleanLevelArrayField"
    },
    "ConvertAbilityStringLevelArrayField": {
        "body": "ConvertAbilityStringLevelArrayField(${1:i})",
        "description": "ConvertAbilityStringLevelArrayField (integer i)",
        "prefix": "ConvertAbilityStringLevelArrayField"
    },
    "ConvertUnitIntegerField": {
        "body": "ConvertUnitIntegerField(${1:i})",
        "description": "ConvertUnitIntegerField (integer i)",
        "prefix": "ConvertUnitIntegerField"
    },
    "ConvertUnitRealField": {
        "body": "ConvertUnitRealField(${1:i})",
        "description": "ConvertUnitRealField (integer i)",
        "prefix": "ConvertUnitRealField"
    },
    "ConvertUnitBooleanField": {
        "body": "ConvertUnitBooleanField(${1:i})",
        "description": "ConvertUnitBooleanField (integer i)",
        "prefix": "ConvertUnitBooleanField"
    },
    "ConvertUnitStringField": {
        "body": "ConvertUnitStringField(${1:i})",
        "description": "ConvertUnitStringField (integer i)",
        "prefix": "ConvertUnitStringField"
    },
    "ConvertUnitWeaponIntegerField": {
        "body": "ConvertUnitWeaponIntegerField(${1:i})",
        "description": "ConvertUnitWeaponIntegerField (integer i)",
        "prefix": "ConvertUnitWeaponIntegerField"
    },
    "ConvertUnitWeaponRealField": {
        "body": "ConvertUnitWeaponRealField(${1:i})",
        "description": "ConvertUnitWeaponRealField (integer i)",
        "prefix": "ConvertUnitWeaponRealField"
    },
    "ConvertUnitWeaponBooleanField": {
        "body": "ConvertUnitWeaponBooleanField(${1:i})",
        "description": "ConvertUnitWeaponBooleanField (integer i)",
        "prefix": "ConvertUnitWeaponBooleanField"
    },
    "ConvertUnitWeaponStringField": {
        "body": "ConvertUnitWeaponStringField(${1:i})",
        "description": "ConvertUnitWeaponStringField (integer i)",
        "prefix": "ConvertUnitWeaponStringField"
    },
    "ConvertItemIntegerField": {
        "body": "ConvertItemIntegerField(${1:i})",
        "description": "ConvertItemIntegerField (integer i)",
        "prefix": "ConvertItemIntegerField"
    },
    "ConvertItemRealField": {
        "body": "ConvertItemRealField(${1:i})",
        "description": "ConvertItemRealField (integer i)",
        "prefix": "ConvertItemRealField"
    },
    "ConvertItemBooleanField": {
        "body": "ConvertItemBooleanField(${1:i})",
        "description": "ConvertItemBooleanField (integer i)",
        "prefix": "ConvertItemBooleanField"
    },
    "ConvertItemStringField": {
        "body": "ConvertItemStringField(${1:i})",
        "description": "ConvertItemStringField (integer i)",
        "prefix": "ConvertItemStringField"
    },
    "ConvertMoveType": {
        "body": "ConvertMoveType(${1:i})",
        "description": "ConvertMoveType (integer i)",
        "prefix": "ConvertMoveType"
    },
    "ConvertTargetFlag": {
        "body": "ConvertTargetFlag(${1:i})",
        "description": "ConvertTargetFlag (integer i)",
        "prefix": "ConvertTargetFlag"
    },
    "ConvertArmorType": {
        "body": "ConvertArmorType(${1:i})",
        "description": "ConvertArmorType (integer i)",
        "prefix": "ConvertArmorType"
    },
    "ConvertHeroAttribute": {
        "body": "ConvertHeroAttribute(${1:i})",
        "description": "ConvertHeroAttribute (integer i)",
        "prefix": "ConvertHeroAttribute"
    },
    "ConvertDefenseType": {
        "body": "ConvertDefenseType(${1:i})",
        "description": "ConvertDefenseType (integer i)",
        "prefix": "ConvertDefenseType"
    },
    "ConvertRegenType": {
        "body": "ConvertRegenType(${1:i})",
        "description": "ConvertRegenType (integer i)",
        "prefix": "ConvertRegenType"
    },
    "ConvertUnitCategory": {
        "body": "ConvertUnitCategory(${1:i})",
        "description": "ConvertUnitCategory (integer i)",
        "prefix": "ConvertUnitCategory"
    },
    "ConvertPathingFlag": {
        "body": "ConvertPathingFlag(${1:i})",
        "description": "ConvertPathingFlag (integer i)",
        "prefix": "ConvertPathingFlag"
    },
    "OrderId": {
        "body": "OrderId()",
        "description": "OrderId (string  orderIdString)",
        "prefix": "OrderId"
    },
    "OrderId2String": {
        "body": "OrderId2String(${1:orderId})",
        "description": "OrderId2String (integer orderId)",
        "prefix": "OrderId2String"
    },
    "UnitId": {
        "body": "UnitId()",
        "description": "UnitId (string  unitIdString)",
        "prefix": "UnitId"
    },
    "UnitId2String": {
        "body": "UnitId2String(${1:unitId})",
        "description": "UnitId2String (integer unitId)",
        "prefix": "UnitId2String"
    },
    "AbilityId": {
        "body": "AbilityId()",
        "description": "AbilityId (string  abilityIdString)",
        "prefix": "AbilityId"
    },
    "AbilityId2String": {
        "body": "AbilityId2String(${1:abilityId})",
        "description": "AbilityId2String (integer abilityId)",
        "prefix": "AbilityId2String"
    },
    "GetObjectName": {
        "body": "GetObjectName(${1:objectId})",
        "description": "GetObjectName (integer objectId)",
        "prefix": "GetObjectName"
    },
    "GetBJMaxPlayers": {
        "body": "GetBJMaxPlayers()",
        "description": "GetBJMaxPlayers ()",
        "prefix": "GetBJMaxPlayers"
    },
    "GetBJPlayerNeutralVictim": {
        "body": "GetBJPlayerNeutralVictim()",
        "description": "GetBJPlayerNeutralVictim ()",
        "prefix": "GetBJPlayerNeutralVictim"
    },
    "GetBJPlayerNeutralExtra": {
        "body": "GetBJPlayerNeutralExtra()",
        "description": "GetBJPlayerNeutralExtra ()",
        "prefix": "GetBJPlayerNeutralExtra"
    },
    "GetBJMaxPlayerSlots": {
        "body": "GetBJMaxPlayerSlots()",
        "description": "GetBJMaxPlayerSlots ()",
        "prefix": "GetBJMaxPlayerSlots"
    },
    "GetPlayerNeutralPassive": {
        "body": "GetPlayerNeutralPassive()",
        "description": "GetPlayerNeutralPassive ()",
        "prefix": "GetPlayerNeutralPassive"
    },
    "GetPlayerNeutralAggressive": {
        "body": "GetPlayerNeutralAggressive()",
        "description": "GetPlayerNeutralAggressive ()",
        "prefix": "GetPlayerNeutralAggressive"
    },
    "FALSE": {
        "body": "FALSE",
        "description": "false",
        "prefix": "FALSE"
    },
    "TRUE": {
        "body": "TRUE",
        "description": "true",
        "prefix": "TRUE"
    },
    "JASS_MAX_ARRAY_SIZE": {
        "body": "JASS_MAX_ARRAY_SIZE",
        "description": "32768",
        "prefix": "JASS_MAX_ARRAY_SIZE"
    },
    "PLAYER_NEUTRAL_PASSIVE": {
        "body": "PLAYER_NEUTRAL_PASSIVE",
        "description": "GetPlayerNeutralPassive()",
        "prefix": "PLAYER_NEUTRAL_PASSIVE"
    },
    "PLAYER_NEUTRAL_AGGRESSIVE": {
        "body": "PLAYER_NEUTRAL_AGGRESSIVE",
        "description": "GetPlayerNeutralAggressive()",
        "prefix": "PLAYER_NEUTRAL_AGGRESSIVE"
    },
    "PLAYER_COLOR_RED": {
        "body": "PLAYER_COLOR_RED",
        "description": "ConvertPlayerColor(0)",
        "prefix": "PLAYER_COLOR_RED"
    },
    "PLAYER_COLOR_BLUE": {
        "body": "PLAYER_COLOR_BLUE",
        "description": "ConvertPlayerColor(1)",
        "prefix": "PLAYER_COLOR_BLUE"
    },
    "PLAYER_COLOR_CYAN": {
        "body": "PLAYER_COLOR_CYAN",
        "description": "ConvertPlayerColor(2)",
        "prefix": "PLAYER_COLOR_CYAN"
    },
    "PLAYER_COLOR_PURPLE": {
        "body": "PLAYER_COLOR_PURPLE",
        "description": "ConvertPlayerColor(3)",
        "prefix": "PLAYER_COLOR_PURPLE"
    },
    "PLAYER_COLOR_YELLOW": {
        "body": "PLAYER_COLOR_YELLOW",
        "description": "ConvertPlayerColor(4)",
        "prefix": "PLAYER_COLOR_YELLOW"
    },
    "PLAYER_COLOR_ORANGE": {
        "body": "PLAYER_COLOR_ORANGE",
        "description": "ConvertPlayerColor(5)",
        "prefix": "PLAYER_COLOR_ORANGE"
    },
    "PLAYER_COLOR_GREEN": {
        "body": "PLAYER_COLOR_GREEN",
        "description": "ConvertPlayerColor(6)",
        "prefix": "PLAYER_COLOR_GREEN"
    },
    "PLAYER_COLOR_PINK": {
        "body": "PLAYER_COLOR_PINK",
        "description": "ConvertPlayerColor(7)",
        "prefix": "PLAYER_COLOR_PINK"
    },
    "PLAYER_COLOR_LIGHT_GRAY": {
        "body": "PLAYER_COLOR_LIGHT_GRAY",
        "description": "ConvertPlayerColor(8)",
        "prefix": "PLAYER_COLOR_LIGHT_GRAY"
    },
    "PLAYER_COLOR_LIGHT_BLUE": {
        "body": "PLAYER_COLOR_LIGHT_BLUE",
        "description": "ConvertPlayerColor(9)",
        "prefix": "PLAYER_COLOR_LIGHT_BLUE"
    },
    "PLAYER_COLOR_AQUA": {
        "body": "PLAYER_COLOR_AQUA",
        "description": "ConvertPlayerColor(10)",
        "prefix": "PLAYER_COLOR_AQUA"
    },
    "PLAYER_COLOR_BROWN": {
        "body": "PLAYER_COLOR_BROWN",
        "description": "ConvertPlayerColor(11)",
        "prefix": "PLAYER_COLOR_BROWN"
    },
    "PLAYER_COLOR_MAROON": {
        "body": "PLAYER_COLOR_MAROON",
        "description": "ConvertPlayerColor(12)",
        "prefix": "PLAYER_COLOR_MAROON"
    },
    "PLAYER_COLOR_NAVY": {
        "body": "PLAYER_COLOR_NAVY",
        "description": "ConvertPlayerColor(13)",
        "prefix": "PLAYER_COLOR_NAVY"
    },
    "PLAYER_COLOR_TURQUOISE": {
        "body": "PLAYER_COLOR_TURQUOISE",
        "description": "ConvertPlayerColor(14)",
        "prefix": "PLAYER_COLOR_TURQUOISE"
    },
    "PLAYER_COLOR_VIOLET": {
        "body": "PLAYER_COLOR_VIOLET",
        "description": "ConvertPlayerColor(15)",
        "prefix": "PLAYER_COLOR_VIOLET"
    },
    "PLAYER_COLOR_WHEAT": {
        "body": "PLAYER_COLOR_WHEAT",
        "description": "ConvertPlayerColor(16)",
        "prefix": "PLAYER_COLOR_WHEAT"
    },
    "PLAYER_COLOR_PEACH": {
        "body": "PLAYER_COLOR_PEACH",
        "description": "ConvertPlayerColor(17)",
        "prefix": "PLAYER_COLOR_PEACH"
    },
    "PLAYER_COLOR_MINT": {
        "body": "PLAYER_COLOR_MINT",
        "description": "ConvertPlayerColor(18)",
        "prefix": "PLAYER_COLOR_MINT"
    },
    "PLAYER_COLOR_LAVENDER": {
        "body": "PLAYER_COLOR_LAVENDER",
        "description": "ConvertPlayerColor(19)",
        "prefix": "PLAYER_COLOR_LAVENDER"
    },
    "PLAYER_COLOR_COAL": {
        "body": "PLAYER_COLOR_COAL",
        "description": "ConvertPlayerColor(20)",
        "prefix": "PLAYER_COLOR_COAL"
    },
    "PLAYER_COLOR_SNOW": {
        "body": "PLAYER_COLOR_SNOW",
        "description": "ConvertPlayerColor(21)",
        "prefix": "PLAYER_COLOR_SNOW"
    },
    "PLAYER_COLOR_EMERALD": {
        "body": "PLAYER_COLOR_EMERALD",
        "description": "ConvertPlayerColor(22)",
        "prefix": "PLAYER_COLOR_EMERALD"
    },
    "PLAYER_COLOR_PEANUT": {
        "body": "PLAYER_COLOR_PEANUT",
        "description": "ConvertPlayerColor(23)",
        "prefix": "PLAYER_COLOR_PEANUT"
    },
    "RACE_HUMAN": {
        "body": "RACE_HUMAN",
        "description": "ConvertRace(1)",
        "prefix": "RACE_HUMAN"
    },
    "RACE_ORC": {
        "body": "RACE_ORC",
        "description": "ConvertRace(2)",
        "prefix": "RACE_ORC"
    },
    "RACE_UNDEAD": {
        "body": "RACE_UNDEAD",
        "description": "ConvertRace(3)",
        "prefix": "RACE_UNDEAD"
    },
    "RACE_NIGHTELF": {
        "body": "RACE_NIGHTELF",
        "description": "ConvertRace(4)",
        "prefix": "RACE_NIGHTELF"
    },
    "RACE_DEMON": {
        "body": "RACE_DEMON",
        "description": "ConvertRace(5)",
        "prefix": "RACE_DEMON"
    },
    "RACE_OTHER": {
        "body": "RACE_OTHER",
        "description": "ConvertRace(7)",
        "prefix": "RACE_OTHER"
    },
    "PLAYER_GAME_RESULT_VICTORY": {
        "body": "PLAYER_GAME_RESULT_VICTORY",
        "description": "ConvertPlayerGameResult(0)",
        "prefix": "PLAYER_GAME_RESULT_VICTORY"
    },
    "PLAYER_GAME_RESULT_DEFEAT": {
        "body": "PLAYER_GAME_RESULT_DEFEAT",
        "description": "ConvertPlayerGameResult(1)",
        "prefix": "PLAYER_GAME_RESULT_DEFEAT"
    },
    "PLAYER_GAME_RESULT_TIE": {
        "body": "PLAYER_GAME_RESULT_TIE",
        "description": "ConvertPlayerGameResult(2)",
        "prefix": "PLAYER_GAME_RESULT_TIE"
    },
    "PLAYER_GAME_RESULT_NEUTRAL": {
        "body": "PLAYER_GAME_RESULT_NEUTRAL",
        "description": "ConvertPlayerGameResult(3)",
        "prefix": "PLAYER_GAME_RESULT_NEUTRAL"
    },
    "ALLIANCE_PASSIVE": {
        "body": "ALLIANCE_PASSIVE",
        "description": "ConvertAllianceType(0)",
        "prefix": "ALLIANCE_PASSIVE"
    },
    "ALLIANCE_HELP_REQUEST": {
        "body": "ALLIANCE_HELP_REQUEST",
        "description": "ConvertAllianceType(1)",
        "prefix": "ALLIANCE_HELP_REQUEST"
    },
    "ALLIANCE_HELP_RESPONSE": {
        "body": "ALLIANCE_HELP_RESPONSE",
        "description": "ConvertAllianceType(2)",
        "prefix": "ALLIANCE_HELP_RESPONSE"
    },
    "ALLIANCE_SHARED_XP": {
        "body": "ALLIANCE_SHARED_XP",
        "description": "ConvertAllianceType(3)",
        "prefix": "ALLIANCE_SHARED_XP"
    },
    "ALLIANCE_SHARED_SPELLS": {
        "body": "ALLIANCE_SHARED_SPELLS",
        "description": "ConvertAllianceType(4)",
        "prefix": "ALLIANCE_SHARED_SPELLS"
    },
    "ALLIANCE_SHARED_VISION": {
        "body": "ALLIANCE_SHARED_VISION",
        "description": "ConvertAllianceType(5)",
        "prefix": "ALLIANCE_SHARED_VISION"
    },
    "ALLIANCE_SHARED_CONTROL": {
        "body": "ALLIANCE_SHARED_CONTROL",
        "description": "ConvertAllianceType(6)",
        "prefix": "ALLIANCE_SHARED_CONTROL"
    },
    "ALLIANCE_SHARED_ADVANCED_CONTROL": {
        "body": "ALLIANCE_SHARED_ADVANCED_CONTROL",
        "description": "ConvertAllianceType(7)",
        "prefix": "ALLIANCE_SHARED_ADVANCED_CONTROL"
    },
    "ALLIANCE_RESCUABLE": {
        "body": "ALLIANCE_RESCUABLE",
        "description": "ConvertAllianceType(8)",
        "prefix": "ALLIANCE_RESCUABLE"
    },
    "ALLIANCE_SHARED_VISION_FORCED": {
        "body": "ALLIANCE_SHARED_VISION_FORCED",
        "description": "ConvertAllianceType(9)",
        "prefix": "ALLIANCE_SHARED_VISION_FORCED"
    },
    "VERSION_REIGN_OF_CHAOS": {
        "body": "VERSION_REIGN_OF_CHAOS",
        "description": "ConvertVersion(0)",
        "prefix": "VERSION_REIGN_OF_CHAOS"
    },
    "VERSION_FROZEN_THRONE": {
        "body": "VERSION_FROZEN_THRONE",
        "description": "ConvertVersion(1)",
        "prefix": "VERSION_FROZEN_THRONE"
    },
    "ATTACK_TYPE_NORMAL": {
        "body": "ATTACK_TYPE_NORMAL",
        "description": "ConvertAttackType(0)",
        "prefix": "ATTACK_TYPE_NORMAL"
    },
    "ATTACK_TYPE_MELEE": {
        "body": "ATTACK_TYPE_MELEE",
        "description": "ConvertAttackType(1)",
        "prefix": "ATTACK_TYPE_MELEE"
    },
    "ATTACK_TYPE_PIERCE": {
        "body": "ATTACK_TYPE_PIERCE",
        "description": "ConvertAttackType(2)",
        "prefix": "ATTACK_TYPE_PIERCE"
    },
    "ATTACK_TYPE_SIEGE": {
        "body": "ATTACK_TYPE_SIEGE",
        "description": "ConvertAttackType(3)",
        "prefix": "ATTACK_TYPE_SIEGE"
    },
    "ATTACK_TYPE_MAGIC": {
        "body": "ATTACK_TYPE_MAGIC",
        "description": "ConvertAttackType(4)",
        "prefix": "ATTACK_TYPE_MAGIC"
    },
    "ATTACK_TYPE_CHAOS": {
        "body": "ATTACK_TYPE_CHAOS",
        "description": "ConvertAttackType(5)",
        "prefix": "ATTACK_TYPE_CHAOS"
    },
    "ATTACK_TYPE_HERO": {
        "body": "ATTACK_TYPE_HERO",
        "description": "ConvertAttackType(6)",
        "prefix": "ATTACK_TYPE_HERO"
    },
    "DAMAGE_TYPE_UNKNOWN": {
        "body": "DAMAGE_TYPE_UNKNOWN",
        "description": "ConvertDamageType(0)",
        "prefix": "DAMAGE_TYPE_UNKNOWN"
    },
    "DAMAGE_TYPE_NORMAL": {
        "body": "DAMAGE_TYPE_NORMAL",
        "description": "ConvertDamageType(4)",
        "prefix": "DAMAGE_TYPE_NORMAL"
    },
    "DAMAGE_TYPE_ENHANCED": {
        "body": "DAMAGE_TYPE_ENHANCED",
        "description": "ConvertDamageType(5)",
        "prefix": "DAMAGE_TYPE_ENHANCED"
    },
    "DAMAGE_TYPE_FIRE": {
        "body": "DAMAGE_TYPE_FIRE",
        "description": "ConvertDamageType(8)",
        "prefix": "DAMAGE_TYPE_FIRE"
    },
    "DAMAGE_TYPE_COLD": {
        "body": "DAMAGE_TYPE_COLD",
        "description": "ConvertDamageType(9)",
        "prefix": "DAMAGE_TYPE_COLD"
    },
    "DAMAGE_TYPE_LIGHTNING": {
        "body": "DAMAGE_TYPE_LIGHTNING",
        "description": "ConvertDamageType(10)",
        "prefix": "DAMAGE_TYPE_LIGHTNING"
    },
    "DAMAGE_TYPE_POISON": {
        "body": "DAMAGE_TYPE_POISON",
        "description": "ConvertDamageType(11)",
        "prefix": "DAMAGE_TYPE_POISON"
    },
    "DAMAGE_TYPE_DISEASE": {
        "body": "DAMAGE_TYPE_DISEASE",
        "description": "ConvertDamageType(12)",
        "prefix": "DAMAGE_TYPE_DISEASE"
    },
    "DAMAGE_TYPE_DIVINE": {
        "body": "DAMAGE_TYPE_DIVINE",
        "description": "ConvertDamageType(13)",
        "prefix": "DAMAGE_TYPE_DIVINE"
    },
    "DAMAGE_TYPE_MAGIC": {
        "body": "DAMAGE_TYPE_MAGIC",
        "description": "ConvertDamageType(14)",
        "prefix": "DAMAGE_TYPE_MAGIC"
    },
    "DAMAGE_TYPE_SONIC": {
        "body": "DAMAGE_TYPE_SONIC",
        "description": "ConvertDamageType(15)",
        "prefix": "DAMAGE_TYPE_SONIC"
    },
    "DAMAGE_TYPE_ACID": {
        "body": "DAMAGE_TYPE_ACID",
        "description": "ConvertDamageType(16)",
        "prefix": "DAMAGE_TYPE_ACID"
    },
    "DAMAGE_TYPE_FORCE": {
        "body": "DAMAGE_TYPE_FORCE",
        "description": "ConvertDamageType(17)",
        "prefix": "DAMAGE_TYPE_FORCE"
    },
    "DAMAGE_TYPE_DEATH": {
        "body": "DAMAGE_TYPE_DEATH",
        "description": "ConvertDamageType(18)",
        "prefix": "DAMAGE_TYPE_DEATH"
    },
    "DAMAGE_TYPE_MIND": {
        "body": "DAMAGE_TYPE_MIND",
        "description": "ConvertDamageType(19)",
        "prefix": "DAMAGE_TYPE_MIND"
    },
    "DAMAGE_TYPE_PLANT": {
        "body": "DAMAGE_TYPE_PLANT",
        "description": "ConvertDamageType(20)",
        "prefix": "DAMAGE_TYPE_PLANT"
    },
    "DAMAGE_TYPE_DEFENSIVE": {
        "body": "DAMAGE_TYPE_DEFENSIVE",
        "description": "ConvertDamageType(21)",
        "prefix": "DAMAGE_TYPE_DEFENSIVE"
    },
    "DAMAGE_TYPE_DEMOLITION": {
        "body": "DAMAGE_TYPE_DEMOLITION",
        "description": "ConvertDamageType(22)",
        "prefix": "DAMAGE_TYPE_DEMOLITION"
    },
    "DAMAGE_TYPE_SLOW_POISON": {
        "body": "DAMAGE_TYPE_SLOW_POISON",
        "description": "ConvertDamageType(23)",
        "prefix": "DAMAGE_TYPE_SLOW_POISON"
    },
    "DAMAGE_TYPE_SPIRIT_LINK": {
        "body": "DAMAGE_TYPE_SPIRIT_LINK",
        "description": "ConvertDamageType(24)",
        "prefix": "DAMAGE_TYPE_SPIRIT_LINK"
    },
    "DAMAGE_TYPE_SHADOW_STRIKE": {
        "body": "DAMAGE_TYPE_SHADOW_STRIKE",
        "description": "ConvertDamageType(25)",
        "prefix": "DAMAGE_TYPE_SHADOW_STRIKE"
    },
    "DAMAGE_TYPE_UNIVERSAL": {
        "body": "DAMAGE_TYPE_UNIVERSAL",
        "description": "ConvertDamageType(26)",
        "prefix": "DAMAGE_TYPE_UNIVERSAL"
    },
    "WEAPON_TYPE_WHOKNOWS": {
        "body": "WEAPON_TYPE_WHOKNOWS",
        "description": "ConvertWeaponType(0)",
        "prefix": "WEAPON_TYPE_WHOKNOWS"
    },
    "WEAPON_TYPE_METAL_LIGHT_CHOP": {
        "body": "WEAPON_TYPE_METAL_LIGHT_CHOP",
        "description": "ConvertWeaponType(1)",
        "prefix": "WEAPON_TYPE_METAL_LIGHT_CHOP"
    },
    "WEAPON_TYPE_METAL_MEDIUM_CHOP": {
        "body": "WEAPON_TYPE_METAL_MEDIUM_CHOP",
        "description": "ConvertWeaponType(2)",
        "prefix": "WEAPON_TYPE_METAL_MEDIUM_CHOP"
    },
    "WEAPON_TYPE_METAL_HEAVY_CHOP": {
        "body": "WEAPON_TYPE_METAL_HEAVY_CHOP",
        "description": "ConvertWeaponType(3)",
        "prefix": "WEAPON_TYPE_METAL_HEAVY_CHOP"
    },
    "WEAPON_TYPE_METAL_LIGHT_SLICE": {
        "body": "WEAPON_TYPE_METAL_LIGHT_SLICE",
        "description": "ConvertWeaponType(4)",
        "prefix": "WEAPON_TYPE_METAL_LIGHT_SLICE"
    },
    "WEAPON_TYPE_METAL_MEDIUM_SLICE": {
        "body": "WEAPON_TYPE_METAL_MEDIUM_SLICE",
        "description": "ConvertWeaponType(5)",
        "prefix": "WEAPON_TYPE_METAL_MEDIUM_SLICE"
    },
    "WEAPON_TYPE_METAL_HEAVY_SLICE": {
        "body": "WEAPON_TYPE_METAL_HEAVY_SLICE",
        "description": "ConvertWeaponType(6)",
        "prefix": "WEAPON_TYPE_METAL_HEAVY_SLICE"
    },
    "WEAPON_TYPE_METAL_MEDIUM_BASH": {
        "body": "WEAPON_TYPE_METAL_MEDIUM_BASH",
        "description": "ConvertWeaponType(7)",
        "prefix": "WEAPON_TYPE_METAL_MEDIUM_BASH"
    },
    "WEAPON_TYPE_METAL_HEAVY_BASH": {
        "body": "WEAPON_TYPE_METAL_HEAVY_BASH",
        "description": "ConvertWeaponType(8)",
        "prefix": "WEAPON_TYPE_METAL_HEAVY_BASH"
    },
    "WEAPON_TYPE_METAL_MEDIUM_STAB": {
        "body": "WEAPON_TYPE_METAL_MEDIUM_STAB",
        "description": "ConvertWeaponType(9)",
        "prefix": "WEAPON_TYPE_METAL_MEDIUM_STAB"
    },
    "WEAPON_TYPE_METAL_HEAVY_STAB": {
        "body": "WEAPON_TYPE_METAL_HEAVY_STAB",
        "description": "ConvertWeaponType(10)",
        "prefix": "WEAPON_TYPE_METAL_HEAVY_STAB"
    },
    "WEAPON_TYPE_WOOD_LIGHT_SLICE": {
        "body": "WEAPON_TYPE_WOOD_LIGHT_SLICE",
        "description": "ConvertWeaponType(11)",
        "prefix": "WEAPON_TYPE_WOOD_LIGHT_SLICE"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_SLICE": {
        "body": "WEAPON_TYPE_WOOD_MEDIUM_SLICE",
        "description": "ConvertWeaponType(12)",
        "prefix": "WEAPON_TYPE_WOOD_MEDIUM_SLICE"
    },
    "WEAPON_TYPE_WOOD_HEAVY_SLICE": {
        "body": "WEAPON_TYPE_WOOD_HEAVY_SLICE",
        "description": "ConvertWeaponType(13)",
        "prefix": "WEAPON_TYPE_WOOD_HEAVY_SLICE"
    },
    "WEAPON_TYPE_WOOD_LIGHT_BASH": {
        "body": "WEAPON_TYPE_WOOD_LIGHT_BASH",
        "description": "ConvertWeaponType(14)",
        "prefix": "WEAPON_TYPE_WOOD_LIGHT_BASH"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_BASH": {
        "body": "WEAPON_TYPE_WOOD_MEDIUM_BASH",
        "description": "ConvertWeaponType(15)",
        "prefix": "WEAPON_TYPE_WOOD_MEDIUM_BASH"
    },
    "WEAPON_TYPE_WOOD_HEAVY_BASH": {
        "body": "WEAPON_TYPE_WOOD_HEAVY_BASH",
        "description": "ConvertWeaponType(16)",
        "prefix": "WEAPON_TYPE_WOOD_HEAVY_BASH"
    },
    "WEAPON_TYPE_WOOD_LIGHT_STAB": {
        "body": "WEAPON_TYPE_WOOD_LIGHT_STAB",
        "description": "ConvertWeaponType(17)",
        "prefix": "WEAPON_TYPE_WOOD_LIGHT_STAB"
    },
    "WEAPON_TYPE_WOOD_MEDIUM_STAB": {
        "body": "WEAPON_TYPE_WOOD_MEDIUM_STAB",
        "description": "ConvertWeaponType(18)",
        "prefix": "WEAPON_TYPE_WOOD_MEDIUM_STAB"
    },
    "WEAPON_TYPE_CLAW_LIGHT_SLICE": {
        "body": "WEAPON_TYPE_CLAW_LIGHT_SLICE",
        "description": "ConvertWeaponType(19)",
        "prefix": "WEAPON_TYPE_CLAW_LIGHT_SLICE"
    },
    "WEAPON_TYPE_CLAW_MEDIUM_SLICE": {
        "body": "WEAPON_TYPE_CLAW_MEDIUM_SLICE",
        "description": "ConvertWeaponType(20)",
        "prefix": "WEAPON_TYPE_CLAW_MEDIUM_SLICE"
    },
    "WEAPON_TYPE_CLAW_HEAVY_SLICE": {
        "body": "WEAPON_TYPE_CLAW_HEAVY_SLICE",
        "description": "ConvertWeaponType(21)",
        "prefix": "WEAPON_TYPE_CLAW_HEAVY_SLICE"
    },
    "WEAPON_TYPE_AXE_MEDIUM_CHOP": {
        "body": "WEAPON_TYPE_AXE_MEDIUM_CHOP",
        "description": "ConvertWeaponType(22)",
        "prefix": "WEAPON_TYPE_AXE_MEDIUM_CHOP"
    },
    "WEAPON_TYPE_ROCK_HEAVY_BASH": {
        "body": "WEAPON_TYPE_ROCK_HEAVY_BASH",
        "description": "ConvertWeaponType(23)",
        "prefix": "WEAPON_TYPE_ROCK_HEAVY_BASH"
    },
    "PATHING_TYPE_ANY": {
        "body": "PATHING_TYPE_ANY",
        "description": "ConvertPathingType(0)",
        "prefix": "PATHING_TYPE_ANY"
    },
    "PATHING_TYPE_WALKABILITY": {
        "body": "PATHING_TYPE_WALKABILITY",
        "description": "ConvertPathingType(1)",
        "prefix": "PATHING_TYPE_WALKABILITY"
    },
    "PATHING_TYPE_FLYABILITY": {
        "body": "PATHING_TYPE_FLYABILITY",
        "description": "ConvertPathingType(2)",
        "prefix": "PATHING_TYPE_FLYABILITY"
    },
    "PATHING_TYPE_BUILDABILITY": {
        "body": "PATHING_TYPE_BUILDABILITY",
        "description": "ConvertPathingType(3)",
        "prefix": "PATHING_TYPE_BUILDABILITY"
    },
    "PATHING_TYPE_PEONHARVESTPATHING": {
        "body": "PATHING_TYPE_PEONHARVESTPATHING",
        "description": "ConvertPathingType(4)",
        "prefix": "PATHING_TYPE_PEONHARVESTPATHING"
    },
    "PATHING_TYPE_BLIGHTPATHING": {
        "body": "PATHING_TYPE_BLIGHTPATHING",
        "description": "ConvertPathingType(5)",
        "prefix": "PATHING_TYPE_BLIGHTPATHING"
    },
    "PATHING_TYPE_FLOATABILITY": {
        "body": "PATHING_TYPE_FLOATABILITY",
        "description": "ConvertPathingType(6)",
        "prefix": "PATHING_TYPE_FLOATABILITY"
    },
    "PATHING_TYPE_AMPHIBIOUSPATHING": {
        "body": "PATHING_TYPE_AMPHIBIOUSPATHING",
        "description": "ConvertPathingType(7)",
        "prefix": "PATHING_TYPE_AMPHIBIOUSPATHING"
    },
    "MOUSE_BUTTON_TYPE_LEFT": {
        "body": "MOUSE_BUTTON_TYPE_LEFT",
        "description": "ConvertMouseButtonType(1)",
        "prefix": "MOUSE_BUTTON_TYPE_LEFT"
    },
    "MOUSE_BUTTON_TYPE_MIDDLE": {
        "body": "MOUSE_BUTTON_TYPE_MIDDLE",
        "description": "ConvertMouseButtonType(2)",
        "prefix": "MOUSE_BUTTON_TYPE_MIDDLE"
    },
    "MOUSE_BUTTON_TYPE_RIGHT": {
        "body": "MOUSE_BUTTON_TYPE_RIGHT",
        "description": "ConvertMouseButtonType(3)",
        "prefix": "MOUSE_BUTTON_TYPE_RIGHT"
    },
    "ANIM_TYPE_BIRTH": {
        "body": "ANIM_TYPE_BIRTH",
        "description": "ConvertAnimType(0)",
        "prefix": "ANIM_TYPE_BIRTH"
    },
    "ANIM_TYPE_DEATH": {
        "body": "ANIM_TYPE_DEATH",
        "description": "ConvertAnimType(1)",
        "prefix": "ANIM_TYPE_DEATH"
    },
    "ANIM_TYPE_DECAY": {
        "body": "ANIM_TYPE_DECAY",
        "description": "ConvertAnimType(2)",
        "prefix": "ANIM_TYPE_DECAY"
    },
    "ANIM_TYPE_DISSIPATE": {
        "body": "ANIM_TYPE_DISSIPATE",
        "description": "ConvertAnimType(3)",
        "prefix": "ANIM_TYPE_DISSIPATE"
    },
    "ANIM_TYPE_STAND": {
        "body": "ANIM_TYPE_STAND",
        "description": "ConvertAnimType(4)",
        "prefix": "ANIM_TYPE_STAND"
    },
    "ANIM_TYPE_WALK": {
        "body": "ANIM_TYPE_WALK",
        "description": "ConvertAnimType(5)",
        "prefix": "ANIM_TYPE_WALK"
    },
    "ANIM_TYPE_ATTACK": {
        "body": "ANIM_TYPE_ATTACK",
        "description": "ConvertAnimType(6)",
        "prefix": "ANIM_TYPE_ATTACK"
    },
    "ANIM_TYPE_MORPH": {
        "body": "ANIM_TYPE_MORPH",
        "description": "ConvertAnimType(7)",
        "prefix": "ANIM_TYPE_MORPH"
    },
    "ANIM_TYPE_SLEEP": {
        "body": "ANIM_TYPE_SLEEP",
        "description": "ConvertAnimType(8)",
        "prefix": "ANIM_TYPE_SLEEP"
    },
    "ANIM_TYPE_SPELL": {
        "body": "ANIM_TYPE_SPELL",
        "description": "ConvertAnimType(9)",
        "prefix": "ANIM_TYPE_SPELL"
    },
    "ANIM_TYPE_PORTRAIT": {
        "body": "ANIM_TYPE_PORTRAIT",
        "description": "ConvertAnimType(10)",
        "prefix": "ANIM_TYPE_PORTRAIT"
    },
    "SUBANIM_TYPE_ROOTED": {
        "body": "SUBANIM_TYPE_ROOTED",
        "description": "ConvertSubAnimType(11)",
        "prefix": "SUBANIM_TYPE_ROOTED"
    },
    "SUBANIM_TYPE_ALTERNATE_EX": {
        "body": "SUBANIM_TYPE_ALTERNATE_EX",
        "description": "ConvertSubAnimType(12)",
        "prefix": "SUBANIM_TYPE_ALTERNATE_EX"
    },
    "SUBANIM_TYPE_LOOPING": {
        "body": "SUBANIM_TYPE_LOOPING",
        "description": "ConvertSubAnimType(13)",
        "prefix": "SUBANIM_TYPE_LOOPING"
    },
    "SUBANIM_TYPE_SLAM": {
        "body": "SUBANIM_TYPE_SLAM",
        "description": "ConvertSubAnimType(14)",
        "prefix": "SUBANIM_TYPE_SLAM"
    },
    "SUBANIM_TYPE_THROW": {
        "body": "SUBANIM_TYPE_THROW",
        "description": "ConvertSubAnimType(15)",
        "prefix": "SUBANIM_TYPE_THROW"
    },
    "SUBANIM_TYPE_SPIKED": {
        "body": "SUBANIM_TYPE_SPIKED",
        "description": "ConvertSubAnimType(16)",
        "prefix": "SUBANIM_TYPE_SPIKED"
    },
    "SUBANIM_TYPE_FAST": {
        "body": "SUBANIM_TYPE_FAST",
        "description": "ConvertSubAnimType(17)",
        "prefix": "SUBANIM_TYPE_FAST"
    },
    "SUBANIM_TYPE_SPIN": {
        "body": "SUBANIM_TYPE_SPIN",
        "description": "ConvertSubAnimType(18)",
        "prefix": "SUBANIM_TYPE_SPIN"
    },
    "SUBANIM_TYPE_READY": {
        "body": "SUBANIM_TYPE_READY",
        "description": "ConvertSubAnimType(19)",
        "prefix": "SUBANIM_TYPE_READY"
    },
    "SUBANIM_TYPE_CHANNEL": {
        "body": "SUBANIM_TYPE_CHANNEL",
        "description": "ConvertSubAnimType(20)",
        "prefix": "SUBANIM_TYPE_CHANNEL"
    },
    "SUBANIM_TYPE_DEFEND": {
        "body": "SUBANIM_TYPE_DEFEND",
        "description": "ConvertSubAnimType(21)",
        "prefix": "SUBANIM_TYPE_DEFEND"
    },
    "SUBANIM_TYPE_VICTORY": {
        "body": "SUBANIM_TYPE_VICTORY",
        "description": "ConvertSubAnimType(22)",
        "prefix": "SUBANIM_TYPE_VICTORY"
    },
    "SUBANIM_TYPE_TURN": {
        "body": "SUBANIM_TYPE_TURN",
        "description": "ConvertSubAnimType(23)",
        "prefix": "SUBANIM_TYPE_TURN"
    },
    "SUBANIM_TYPE_LEFT": {
        "body": "SUBANIM_TYPE_LEFT",
        "description": "ConvertSubAnimType(24)",
        "prefix": "SUBANIM_TYPE_LEFT"
    },
    "SUBANIM_TYPE_RIGHT": {
        "body": "SUBANIM_TYPE_RIGHT",
        "description": "ConvertSubAnimType(25)",
        "prefix": "SUBANIM_TYPE_RIGHT"
    },
    "SUBANIM_TYPE_FIRE": {
        "body": "SUBANIM_TYPE_FIRE",
        "description": "ConvertSubAnimType(26)",
        "prefix": "SUBANIM_TYPE_FIRE"
    },
    "SUBANIM_TYPE_FLESH": {
        "body": "SUBANIM_TYPE_FLESH",
        "description": "ConvertSubAnimType(27)",
        "prefix": "SUBANIM_TYPE_FLESH"
    },
    "SUBANIM_TYPE_HIT": {
        "body": "SUBANIM_TYPE_HIT",
        "description": "ConvertSubAnimType(28)",
        "prefix": "SUBANIM_TYPE_HIT"
    },
    "SUBANIM_TYPE_WOUNDED": {
        "body": "SUBANIM_TYPE_WOUNDED",
        "description": "ConvertSubAnimType(29)",
        "prefix": "SUBANIM_TYPE_WOUNDED"
    },
    "SUBANIM_TYPE_LIGHT": {
        "body": "SUBANIM_TYPE_LIGHT",
        "description": "ConvertSubAnimType(30)",
        "prefix": "SUBANIM_TYPE_LIGHT"
    },
    "SUBANIM_TYPE_MODERATE": {
        "body": "SUBANIM_TYPE_MODERATE",
        "description": "ConvertSubAnimType(31)",
        "prefix": "SUBANIM_TYPE_MODERATE"
    },
    "SUBANIM_TYPE_SEVERE": {
        "body": "SUBANIM_TYPE_SEVERE",
        "description": "ConvertSubAnimType(32)",
        "prefix": "SUBANIM_TYPE_SEVERE"
    },
    "SUBANIM_TYPE_CRITICAL": {
        "body": "SUBANIM_TYPE_CRITICAL",
        "description": "ConvertSubAnimType(33)",
        "prefix": "SUBANIM_TYPE_CRITICAL"
    },
    "SUBANIM_TYPE_COMPLETE": {
        "body": "SUBANIM_TYPE_COMPLETE",
        "description": "ConvertSubAnimType(34)",
        "prefix": "SUBANIM_TYPE_COMPLETE"
    },
    "SUBANIM_TYPE_GOLD": {
        "body": "SUBANIM_TYPE_GOLD",
        "description": "ConvertSubAnimType(35)",
        "prefix": "SUBANIM_TYPE_GOLD"
    },
    "SUBANIM_TYPE_LUMBER": {
        "body": "SUBANIM_TYPE_LUMBER",
        "description": "ConvertSubAnimType(36)",
        "prefix": "SUBANIM_TYPE_LUMBER"
    },
    "SUBANIM_TYPE_WORK": {
        "body": "SUBANIM_TYPE_WORK",
        "description": "ConvertSubAnimType(37)",
        "prefix": "SUBANIM_TYPE_WORK"
    },
    "SUBANIM_TYPE_TALK": {
        "body": "SUBANIM_TYPE_TALK",
        "description": "ConvertSubAnimType(38)",
        "prefix": "SUBANIM_TYPE_TALK"
    },
    "SUBANIM_TYPE_FIRST": {
        "body": "SUBANIM_TYPE_FIRST",
        "description": "ConvertSubAnimType(39)",
        "prefix": "SUBANIM_TYPE_FIRST"
    },
    "SUBANIM_TYPE_SECOND": {
        "body": "SUBANIM_TYPE_SECOND",
        "description": "ConvertSubAnimType(40)",
        "prefix": "SUBANIM_TYPE_SECOND"
    },
    "SUBANIM_TYPE_THIRD": {
        "body": "SUBANIM_TYPE_THIRD",
        "description": "ConvertSubAnimType(41)",
        "prefix": "SUBANIM_TYPE_THIRD"
    },
    "SUBANIM_TYPE_FOURTH": {
        "body": "SUBANIM_TYPE_FOURTH",
        "description": "ConvertSubAnimType(42)",
        "prefix": "SUBANIM_TYPE_FOURTH"
    },
    "SUBANIM_TYPE_FIFTH": {
        "body": "SUBANIM_TYPE_FIFTH",
        "description": "ConvertSubAnimType(43)",
        "prefix": "SUBANIM_TYPE_FIFTH"
    },
    "SUBANIM_TYPE_ONE": {
        "body": "SUBANIM_TYPE_ONE",
        "description": "ConvertSubAnimType(44)",
        "prefix": "SUBANIM_TYPE_ONE"
    },
    "SUBANIM_TYPE_TWO": {
        "body": "SUBANIM_TYPE_TWO",
        "description": "ConvertSubAnimType(45)",
        "prefix": "SUBANIM_TYPE_TWO"
    },
    "SUBANIM_TYPE_THREE": {
        "body": "SUBANIM_TYPE_THREE",
        "description": "ConvertSubAnimType(46)",
        "prefix": "SUBANIM_TYPE_THREE"
    },
    "SUBANIM_TYPE_FOUR": {
        "body": "SUBANIM_TYPE_FOUR",
        "description": "ConvertSubAnimType(47)",
        "prefix": "SUBANIM_TYPE_FOUR"
    },
    "SUBANIM_TYPE_FIVE": {
        "body": "SUBANIM_TYPE_FIVE",
        "description": "ConvertSubAnimType(48)",
        "prefix": "SUBANIM_TYPE_FIVE"
    },
    "SUBANIM_TYPE_SMALL": {
        "body": "SUBANIM_TYPE_SMALL",
        "description": "ConvertSubAnimType(49)",
        "prefix": "SUBANIM_TYPE_SMALL"
    },
    "SUBANIM_TYPE_MEDIUM": {
        "body": "SUBANIM_TYPE_MEDIUM",
        "description": "ConvertSubAnimType(50)",
        "prefix": "SUBANIM_TYPE_MEDIUM"
    },
    "SUBANIM_TYPE_LARGE": {
        "body": "SUBANIM_TYPE_LARGE",
        "description": "ConvertSubAnimType(51)",
        "prefix": "SUBANIM_TYPE_LARGE"
    },
    "SUBANIM_TYPE_UPGRADE": {
        "body": "SUBANIM_TYPE_UPGRADE",
        "description": "ConvertSubAnimType(52)",
        "prefix": "SUBANIM_TYPE_UPGRADE"
    },
    "SUBANIM_TYPE_DRAIN": {
        "body": "SUBANIM_TYPE_DRAIN",
        "description": "ConvertSubAnimType(53)",
        "prefix": "SUBANIM_TYPE_DRAIN"
    },
    "SUBANIM_TYPE_FILL": {
        "body": "SUBANIM_TYPE_FILL",
        "description": "ConvertSubAnimType(54)",
        "prefix": "SUBANIM_TYPE_FILL"
    },
    "SUBANIM_TYPE_CHAINLIGHTNING": {
        "body": "SUBANIM_TYPE_CHAINLIGHTNING",
        "description": "ConvertSubAnimType(55)",
        "prefix": "SUBANIM_TYPE_CHAINLIGHTNING"
    },
    "SUBANIM_TYPE_EATTREE": {
        "body": "SUBANIM_TYPE_EATTREE",
        "description": "ConvertSubAnimType(56)",
        "prefix": "SUBANIM_TYPE_EATTREE"
    },
    "SUBANIM_TYPE_PUKE": {
        "body": "SUBANIM_TYPE_PUKE",
        "description": "ConvertSubAnimType(57)",
        "prefix": "SUBANIM_TYPE_PUKE"
    },
    "SUBANIM_TYPE_FLAIL": {
        "body": "SUBANIM_TYPE_FLAIL",
        "description": "ConvertSubAnimType(58)",
        "prefix": "SUBANIM_TYPE_FLAIL"
    },
    "SUBANIM_TYPE_OFF": {
        "body": "SUBANIM_TYPE_OFF",
        "description": "ConvertSubAnimType(59)",
        "prefix": "SUBANIM_TYPE_OFF"
    },
    "SUBANIM_TYPE_SWIM": {
        "body": "SUBANIM_TYPE_SWIM",
        "description": "ConvertSubAnimType(60)",
        "prefix": "SUBANIM_TYPE_SWIM"
    },
    "SUBANIM_TYPE_ENTANGLE": {
        "body": "SUBANIM_TYPE_ENTANGLE",
        "description": "ConvertSubAnimType(61)",
        "prefix": "SUBANIM_TYPE_ENTANGLE"
    },
    "SUBANIM_TYPE_BERSERK": {
        "body": "SUBANIM_TYPE_BERSERK",
        "description": "ConvertSubAnimType(62)",
        "prefix": "SUBANIM_TYPE_BERSERK"
    },
    "RACE_PREF_HUMAN": {
        "body": "RACE_PREF_HUMAN",
        "description": "ConvertRacePref(1)",
        "prefix": "RACE_PREF_HUMAN"
    },
    "RACE_PREF_ORC": {
        "body": "RACE_PREF_ORC",
        "description": "ConvertRacePref(2)",
        "prefix": "RACE_PREF_ORC"
    },
    "RACE_PREF_NIGHTELF": {
        "body": "RACE_PREF_NIGHTELF",
        "description": "ConvertRacePref(4)",
        "prefix": "RACE_PREF_NIGHTELF"
    },
    "RACE_PREF_UNDEAD": {
        "body": "RACE_PREF_UNDEAD",
        "description": "ConvertRacePref(8)",
        "prefix": "RACE_PREF_UNDEAD"
    },
    "RACE_PREF_DEMON": {
        "body": "RACE_PREF_DEMON",
        "description": "ConvertRacePref(16)",
        "prefix": "RACE_PREF_DEMON"
    },
    "RACE_PREF_RANDOM": {
        "body": "RACE_PREF_RANDOM",
        "description": "ConvertRacePref(32)",
        "prefix": "RACE_PREF_RANDOM"
    },
    "RACE_PREF_USER_SELECTABLE": {
        "body": "RACE_PREF_USER_SELECTABLE",
        "description": "ConvertRacePref(64)",
        "prefix": "RACE_PREF_USER_SELECTABLE"
    },
    "MAP_CONTROL_USER": {
        "body": "MAP_CONTROL_USER",
        "description": "ConvertMapControl(0)",
        "prefix": "MAP_CONTROL_USER"
    },
    "MAP_CONTROL_COMPUTER": {
        "body": "MAP_CONTROL_COMPUTER",
        "description": "ConvertMapControl(1)",
        "prefix": "MAP_CONTROL_COMPUTER"
    },
    "MAP_CONTROL_RESCUABLE": {
        "body": "MAP_CONTROL_RESCUABLE",
        "description": "ConvertMapControl(2)",
        "prefix": "MAP_CONTROL_RESCUABLE"
    },
    "MAP_CONTROL_NEUTRAL": {
        "body": "MAP_CONTROL_NEUTRAL",
        "description": "ConvertMapControl(3)",
        "prefix": "MAP_CONTROL_NEUTRAL"
    },
    "MAP_CONTROL_CREEP": {
        "body": "MAP_CONTROL_CREEP",
        "description": "ConvertMapControl(4)",
        "prefix": "MAP_CONTROL_CREEP"
    },
    "MAP_CONTROL_NONE": {
        "body": "MAP_CONTROL_NONE",
        "description": "ConvertMapControl(5)",
        "prefix": "MAP_CONTROL_NONE"
    },
    "GAME_TYPE_MELEE": {
        "body": "GAME_TYPE_MELEE",
        "description": "ConvertGameType(1)",
        "prefix": "GAME_TYPE_MELEE"
    },
    "GAME_TYPE_FFA": {
        "body": "GAME_TYPE_FFA",
        "description": "ConvertGameType(2)",
        "prefix": "GAME_TYPE_FFA"
    },
    "GAME_TYPE_USE_MAP_SETTINGS": {
        "body": "GAME_TYPE_USE_MAP_SETTINGS",
        "description": "ConvertGameType(4)",
        "prefix": "GAME_TYPE_USE_MAP_SETTINGS"
    },
    "GAME_TYPE_BLIZ": {
        "body": "GAME_TYPE_BLIZ",
        "description": "ConvertGameType(8)",
        "prefix": "GAME_TYPE_BLIZ"
    },
    "GAME_TYPE_ONE_ON_ONE": {
        "body": "GAME_TYPE_ONE_ON_ONE",
        "description": "ConvertGameType(16)",
        "prefix": "GAME_TYPE_ONE_ON_ONE"
    },
    "GAME_TYPE_TWO_TEAM_PLAY": {
        "body": "GAME_TYPE_TWO_TEAM_PLAY",
        "description": "ConvertGameType(32)",
        "prefix": "GAME_TYPE_TWO_TEAM_PLAY"
    },
    "GAME_TYPE_THREE_TEAM_PLAY": {
        "body": "GAME_TYPE_THREE_TEAM_PLAY",
        "description": "ConvertGameType(64)",
        "prefix": "GAME_TYPE_THREE_TEAM_PLAY"
    },
    "GAME_TYPE_FOUR_TEAM_PLAY": {
        "body": "GAME_TYPE_FOUR_TEAM_PLAY",
        "description": "ConvertGameType(128)",
        "prefix": "GAME_TYPE_FOUR_TEAM_PLAY"
    },
    "MAP_FOG_HIDE_TERRAIN": {
        "body": "MAP_FOG_HIDE_TERRAIN",
        "description": "ConvertMapFlag(1)",
        "prefix": "MAP_FOG_HIDE_TERRAIN"
    },
    "MAP_FOG_MAP_EXPLORED": {
        "body": "MAP_FOG_MAP_EXPLORED",
        "description": "ConvertMapFlag(2)",
        "prefix": "MAP_FOG_MAP_EXPLORED"
    },
    "MAP_FOG_ALWAYS_VISIBLE": {
        "body": "MAP_FOG_ALWAYS_VISIBLE",
        "description": "ConvertMapFlag(4)",
        "prefix": "MAP_FOG_ALWAYS_VISIBLE"
    },
    "MAP_USE_HANDICAPS": {
        "body": "MAP_USE_HANDICAPS",
        "description": "ConvertMapFlag(8)",
        "prefix": "MAP_USE_HANDICAPS"
    },
    "MAP_OBSERVERS": {
        "body": "MAP_OBSERVERS",
        "description": "ConvertMapFlag(16)",
        "prefix": "MAP_OBSERVERS"
    },
    "MAP_OBSERVERS_ON_DEATH": {
        "body": "MAP_OBSERVERS_ON_DEATH",
        "description": "ConvertMapFlag(32)",
        "prefix": "MAP_OBSERVERS_ON_DEATH"
    },
    "MAP_FIXED_COLORS": {
        "body": "MAP_FIXED_COLORS",
        "description": "ConvertMapFlag(128)",
        "prefix": "MAP_FIXED_COLORS"
    },
    "MAP_LOCK_RESOURCE_TRADING": {
        "body": "MAP_LOCK_RESOURCE_TRADING",
        "description": "ConvertMapFlag(256)",
        "prefix": "MAP_LOCK_RESOURCE_TRADING"
    },
    "MAP_RESOURCE_TRADING_ALLIES_ONLY": {
        "body": "MAP_RESOURCE_TRADING_ALLIES_ONLY",
        "description": "ConvertMapFlag(512)",
        "prefix": "MAP_RESOURCE_TRADING_ALLIES_ONLY"
    },
    "MAP_LOCK_ALLIANCE_CHANGES": {
        "body": "MAP_LOCK_ALLIANCE_CHANGES",
        "description": "ConvertMapFlag(1024)",
        "prefix": "MAP_LOCK_ALLIANCE_CHANGES"
    },
    "MAP_ALLIANCE_CHANGES_HIDDEN": {
        "body": "MAP_ALLIANCE_CHANGES_HIDDEN",
        "description": "ConvertMapFlag(2048)",
        "prefix": "MAP_ALLIANCE_CHANGES_HIDDEN"
    },
    "MAP_CHEATS": {
        "body": "MAP_CHEATS",
        "description": "ConvertMapFlag(4096)",
        "prefix": "MAP_CHEATS"
    },
    "MAP_CHEATS_HIDDEN": {
        "body": "MAP_CHEATS_HIDDEN",
        "description": "ConvertMapFlag(8192)",
        "prefix": "MAP_CHEATS_HIDDEN"
    },
    "MAP_LOCK_SPEED": {
        "body": "MAP_LOCK_SPEED",
        "description": "ConvertMapFlag(8192*2)",
        "prefix": "MAP_LOCK_SPEED"
    },
    "MAP_LOCK_RANDOM_SEED": {
        "body": "MAP_LOCK_RANDOM_SEED",
        "description": "ConvertMapFlag(8192*4)",
        "prefix": "MAP_LOCK_RANDOM_SEED"
    },
    "MAP_SHARED_ADVANCED_CONTROL": {
        "body": "MAP_SHARED_ADVANCED_CONTROL",
        "description": "ConvertMapFlag(8192*8)",
        "prefix": "MAP_SHARED_ADVANCED_CONTROL"
    },
    "MAP_RANDOM_HERO": {
        "body": "MAP_RANDOM_HERO",
        "description": "ConvertMapFlag(8192*16)",
        "prefix": "MAP_RANDOM_HERO"
    },
    "MAP_RANDOM_RACES": {
        "body": "MAP_RANDOM_RACES",
        "description": "ConvertMapFlag(8192*32)",
        "prefix": "MAP_RANDOM_RACES"
    },
    "MAP_RELOADED": {
        "body": "MAP_RELOADED",
        "description": "ConvertMapFlag(8192*64)",
        "prefix": "MAP_RELOADED"
    },
    "MAP_PLACEMENT_RANDOM": {
        "body": "MAP_PLACEMENT_RANDOM",
        "description": "ConvertPlacement(0)   // random among all slots",
        "prefix": "MAP_PLACEMENT_RANDOM"
    },
    "MAP_PLACEMENT_FIXED": {
        "body": "MAP_PLACEMENT_FIXED",
        "description": "ConvertPlacement(1)   // player 0 in start loc 0...",
        "prefix": "MAP_PLACEMENT_FIXED"
    },
    "MAP_PLACEMENT_USE_MAP_SETTINGS": {
        "body": "MAP_PLACEMENT_USE_MAP_SETTINGS",
        "description": "ConvertPlacement(2)   // whatever was specified by the script",
        "prefix": "MAP_PLACEMENT_USE_MAP_SETTINGS"
    },
    "MAP_PLACEMENT_TEAMS_TOGETHER": {
        "body": "MAP_PLACEMENT_TEAMS_TOGETHER",
        "description": "ConvertPlacement(3)   // random with allies next to each other",
        "prefix": "MAP_PLACEMENT_TEAMS_TOGETHER"
    },
    "MAP_LOC_PRIO_LOW": {
        "body": "MAP_LOC_PRIO_LOW",
        "description": "ConvertStartLocPrio(0)",
        "prefix": "MAP_LOC_PRIO_LOW"
    },
    "MAP_LOC_PRIO_HIGH": {
        "body": "MAP_LOC_PRIO_HIGH",
        "description": "ConvertStartLocPrio(1)",
        "prefix": "MAP_LOC_PRIO_HIGH"
    },
    "MAP_LOC_PRIO_NOT": {
        "body": "MAP_LOC_PRIO_NOT",
        "description": "ConvertStartLocPrio(2)",
        "prefix": "MAP_LOC_PRIO_NOT"
    },
    "MAP_DENSITY_NONE": {
        "body": "MAP_DENSITY_NONE",
        "description": "ConvertMapDensity(0)",
        "prefix": "MAP_DENSITY_NONE"
    },
    "MAP_DENSITY_LIGHT": {
        "body": "MAP_DENSITY_LIGHT",
        "description": "ConvertMapDensity(1)",
        "prefix": "MAP_DENSITY_LIGHT"
    },
    "MAP_DENSITY_MEDIUM": {
        "body": "MAP_DENSITY_MEDIUM",
        "description": "ConvertMapDensity(2)",
        "prefix": "MAP_DENSITY_MEDIUM"
    },
    "MAP_DENSITY_HEAVY": {
        "body": "MAP_DENSITY_HEAVY",
        "description": "ConvertMapDensity(3)",
        "prefix": "MAP_DENSITY_HEAVY"
    },
    "MAP_DIFFICULTY_EASY": {
        "body": "MAP_DIFFICULTY_EASY",
        "description": "ConvertGameDifficulty(0)",
        "prefix": "MAP_DIFFICULTY_EASY"
    },
    "MAP_DIFFICULTY_NORMAL": {
        "body": "MAP_DIFFICULTY_NORMAL",
        "description": "ConvertGameDifficulty(1)",
        "prefix": "MAP_DIFFICULTY_NORMAL"
    },
    "MAP_DIFFICULTY_HARD": {
        "body": "MAP_DIFFICULTY_HARD",
        "description": "ConvertGameDifficulty(2)",
        "prefix": "MAP_DIFFICULTY_HARD"
    },
    "MAP_DIFFICULTY_INSANE": {
        "body": "MAP_DIFFICULTY_INSANE",
        "description": "ConvertGameDifficulty(3)",
        "prefix": "MAP_DIFFICULTY_INSANE"
    },
    "MAP_SPEED_SLOWEST": {
        "body": "MAP_SPEED_SLOWEST",
        "description": "ConvertGameSpeed(0)",
        "prefix": "MAP_SPEED_SLOWEST"
    },
    "MAP_SPEED_SLOW": {
        "body": "MAP_SPEED_SLOW",
        "description": "ConvertGameSpeed(1)",
        "prefix": "MAP_SPEED_SLOW"
    },
    "MAP_SPEED_NORMAL": {
        "body": "MAP_SPEED_NORMAL",
        "description": "ConvertGameSpeed(2)",
        "prefix": "MAP_SPEED_NORMAL"
    },
    "MAP_SPEED_FAST": {
        "body": "MAP_SPEED_FAST",
        "description": "ConvertGameSpeed(3)",
        "prefix": "MAP_SPEED_FAST"
    },
    "MAP_SPEED_FASTEST": {
        "body": "MAP_SPEED_FASTEST",
        "description": "ConvertGameSpeed(4)",
        "prefix": "MAP_SPEED_FASTEST"
    },
    "PLAYER_SLOT_STATE_EMPTY": {
        "body": "PLAYER_SLOT_STATE_EMPTY",
        "description": "ConvertPlayerSlotState(0)",
        "prefix": "PLAYER_SLOT_STATE_EMPTY"
    },
    "PLAYER_SLOT_STATE_PLAYING": {
        "body": "PLAYER_SLOT_STATE_PLAYING",
        "description": "ConvertPlayerSlotState(1)",
        "prefix": "PLAYER_SLOT_STATE_PLAYING"
    },
    "PLAYER_SLOT_STATE_LEFT": {
        "body": "PLAYER_SLOT_STATE_LEFT",
        "description": "ConvertPlayerSlotState(2)",
        "prefix": "PLAYER_SLOT_STATE_LEFT"
    },
    "SOUND_VOLUMEGROUP_UNITMOVEMENT": {
        "body": "SOUND_VOLUMEGROUP_UNITMOVEMENT",
        "description": "ConvertVolumeGroup(0)",
        "prefix": "SOUND_VOLUMEGROUP_UNITMOVEMENT"
    },
    "SOUND_VOLUMEGROUP_UNITSOUNDS": {
        "body": "SOUND_VOLUMEGROUP_UNITSOUNDS",
        "description": "ConvertVolumeGroup(1)",
        "prefix": "SOUND_VOLUMEGROUP_UNITSOUNDS"
    },
    "SOUND_VOLUMEGROUP_COMBAT": {
        "body": "SOUND_VOLUMEGROUP_COMBAT",
        "description": "ConvertVolumeGroup(2)",
        "prefix": "SOUND_VOLUMEGROUP_COMBAT"
    },
    "SOUND_VOLUMEGROUP_SPELLS": {
        "body": "SOUND_VOLUMEGROUP_SPELLS",
        "description": "ConvertVolumeGroup(3)",
        "prefix": "SOUND_VOLUMEGROUP_SPELLS"
    },
    "SOUND_VOLUMEGROUP_UI": {
        "body": "SOUND_VOLUMEGROUP_UI",
        "description": "ConvertVolumeGroup(4)",
        "prefix": "SOUND_VOLUMEGROUP_UI"
    },
    "SOUND_VOLUMEGROUP_MUSIC": {
        "body": "SOUND_VOLUMEGROUP_MUSIC",
        "description": "ConvertVolumeGroup(5)",
        "prefix": "SOUND_VOLUMEGROUP_MUSIC"
    },
    "SOUND_VOLUMEGROUP_AMBIENTSOUNDS": {
        "body": "SOUND_VOLUMEGROUP_AMBIENTSOUNDS",
        "description": "ConvertVolumeGroup(6)",
        "prefix": "SOUND_VOLUMEGROUP_AMBIENTSOUNDS"
    },
    "SOUND_VOLUMEGROUP_FIRE": {
        "body": "SOUND_VOLUMEGROUP_FIRE",
        "description": "ConvertVolumeGroup(7)",
        "prefix": "SOUND_VOLUMEGROUP_FIRE"
    },
    "GAME_STATE_DIVINE_INTERVENTION": {
        "body": "GAME_STATE_DIVINE_INTERVENTION",
        "description": "ConvertIGameState(0)",
        "prefix": "GAME_STATE_DIVINE_INTERVENTION"
    },
    "GAME_STATE_DISCONNECTED": {
        "body": "GAME_STATE_DISCONNECTED",
        "description": "ConvertIGameState(1)",
        "prefix": "GAME_STATE_DISCONNECTED"
    },
    "GAME_STATE_TIME_OF_DAY": {
        "body": "GAME_STATE_TIME_OF_DAY",
        "description": "ConvertFGameState(2)",
        "prefix": "GAME_STATE_TIME_OF_DAY"
    },
    "PLAYER_STATE_GAME_RESULT": {
        "body": "PLAYER_STATE_GAME_RESULT",
        "description": "ConvertPlayerState(0)",
        "prefix": "PLAYER_STATE_GAME_RESULT"
    },
    "PLAYER_STATE_RESOURCE_GOLD": {
        "body": "PLAYER_STATE_RESOURCE_GOLD",
        "description": "ConvertPlayerState(1)",
        "prefix": "PLAYER_STATE_RESOURCE_GOLD"
    },
    "PLAYER_STATE_RESOURCE_LUMBER": {
        "body": "PLAYER_STATE_RESOURCE_LUMBER",
        "description": "ConvertPlayerState(2)",
        "prefix": "PLAYER_STATE_RESOURCE_LUMBER"
    },
    "PLAYER_STATE_RESOURCE_HERO_TOKENS": {
        "body": "PLAYER_STATE_RESOURCE_HERO_TOKENS",
        "description": "ConvertPlayerState(3)",
        "prefix": "PLAYER_STATE_RESOURCE_HERO_TOKENS"
    },
    "PLAYER_STATE_RESOURCE_FOOD_CAP": {
        "body": "PLAYER_STATE_RESOURCE_FOOD_CAP",
        "description": "ConvertPlayerState(4)",
        "prefix": "PLAYER_STATE_RESOURCE_FOOD_CAP"
    },
    "PLAYER_STATE_RESOURCE_FOOD_USED": {
        "body": "PLAYER_STATE_RESOURCE_FOOD_USED",
        "description": "ConvertPlayerState(5)",
        "prefix": "PLAYER_STATE_RESOURCE_FOOD_USED"
    },
    "PLAYER_STATE_FOOD_CAP_CEILING": {
        "body": "PLAYER_STATE_FOOD_CAP_CEILING",
        "description": "ConvertPlayerState(6)",
        "prefix": "PLAYER_STATE_FOOD_CAP_CEILING"
    },
    "PLAYER_STATE_GIVES_BOUNTY": {
        "body": "PLAYER_STATE_GIVES_BOUNTY",
        "description": "ConvertPlayerState(7)",
        "prefix": "PLAYER_STATE_GIVES_BOUNTY"
    },
    "PLAYER_STATE_ALLIED_VICTORY": {
        "body": "PLAYER_STATE_ALLIED_VICTORY",
        "description": "ConvertPlayerState(8)",
        "prefix": "PLAYER_STATE_ALLIED_VICTORY"
    },
    "PLAYER_STATE_PLACED": {
        "body": "PLAYER_STATE_PLACED",
        "description": "ConvertPlayerState(9)",
        "prefix": "PLAYER_STATE_PLACED"
    },
    "PLAYER_STATE_OBSERVER_ON_DEATH": {
        "body": "PLAYER_STATE_OBSERVER_ON_DEATH",
        "description": "ConvertPlayerState(10)",
        "prefix": "PLAYER_STATE_OBSERVER_ON_DEATH"
    },
    "PLAYER_STATE_OBSERVER": {
        "body": "PLAYER_STATE_OBSERVER",
        "description": "ConvertPlayerState(11)",
        "prefix": "PLAYER_STATE_OBSERVER"
    },
    "PLAYER_STATE_UNFOLLOWABLE": {
        "body": "PLAYER_STATE_UNFOLLOWABLE",
        "description": "ConvertPlayerState(12)",
        "prefix": "PLAYER_STATE_UNFOLLOWABLE"
    },
    "PLAYER_STATE_GOLD_UPKEEP_RATE": {
        "body": "PLAYER_STATE_GOLD_UPKEEP_RATE",
        "description": "ConvertPlayerState(13)",
        "prefix": "PLAYER_STATE_GOLD_UPKEEP_RATE"
    },
    "PLAYER_STATE_LUMBER_UPKEEP_RATE": {
        "body": "PLAYER_STATE_LUMBER_UPKEEP_RATE",
        "description": "ConvertPlayerState(14)",
        "prefix": "PLAYER_STATE_LUMBER_UPKEEP_RATE"
    },
    "PLAYER_STATE_GOLD_GATHERED": {
        "body": "PLAYER_STATE_GOLD_GATHERED",
        "description": "ConvertPlayerState(15)",
        "prefix": "PLAYER_STATE_GOLD_GATHERED"
    },
    "PLAYER_STATE_LUMBER_GATHERED": {
        "body": "PLAYER_STATE_LUMBER_GATHERED",
        "description": "ConvertPlayerState(16)",
        "prefix": "PLAYER_STATE_LUMBER_GATHERED"
    },
    "PLAYER_STATE_NO_CREEP_SLEEP": {
        "body": "PLAYER_STATE_NO_CREEP_SLEEP",
        "description": "ConvertPlayerState(25)",
        "prefix": "PLAYER_STATE_NO_CREEP_SLEEP"
    },
    "UNIT_STATE_LIFE": {
        "body": "UNIT_STATE_LIFE",
        "description": "ConvertUnitState(0)",
        "prefix": "UNIT_STATE_LIFE"
    },
    "UNIT_STATE_MAX_LIFE": {
        "body": "UNIT_STATE_MAX_LIFE",
        "description": "ConvertUnitState(1)",
        "prefix": "UNIT_STATE_MAX_LIFE"
    },
    "UNIT_STATE_MANA": {
        "body": "UNIT_STATE_MANA",
        "description": "ConvertUnitState(2)",
        "prefix": "UNIT_STATE_MANA"
    },
    "UNIT_STATE_MAX_MANA": {
        "body": "UNIT_STATE_MAX_MANA",
        "description": "ConvertUnitState(3)",
        "prefix": "UNIT_STATE_MAX_MANA"
    },
    "AI_DIFFICULTY_NEWBIE": {
        "body": "AI_DIFFICULTY_NEWBIE",
        "description": "ConvertAIDifficulty(0)",
        "prefix": "AI_DIFFICULTY_NEWBIE"
    },
    "AI_DIFFICULTY_NORMAL": {
        "body": "AI_DIFFICULTY_NORMAL",
        "description": "ConvertAIDifficulty(1)",
        "prefix": "AI_DIFFICULTY_NORMAL"
    },
    "AI_DIFFICULTY_INSANE": {
        "body": "AI_DIFFICULTY_INSANE",
        "description": "ConvertAIDifficulty(2)",
        "prefix": "AI_DIFFICULTY_INSANE"
    },
    "PLAYER_SCORE_UNITS_TRAINED": {
        "body": "PLAYER_SCORE_UNITS_TRAINED",
        "description": "ConvertPlayerScore(0)",
        "prefix": "PLAYER_SCORE_UNITS_TRAINED"
    },
    "PLAYER_SCORE_UNITS_KILLED": {
        "body": "PLAYER_SCORE_UNITS_KILLED",
        "description": "ConvertPlayerScore(1)",
        "prefix": "PLAYER_SCORE_UNITS_KILLED"
    },
    "PLAYER_SCORE_STRUCT_BUILT": {
        "body": "PLAYER_SCORE_STRUCT_BUILT",
        "description": "ConvertPlayerScore(2)",
        "prefix": "PLAYER_SCORE_STRUCT_BUILT"
    },
    "PLAYER_SCORE_STRUCT_RAZED": {
        "body": "PLAYER_SCORE_STRUCT_RAZED",
        "description": "ConvertPlayerScore(3)",
        "prefix": "PLAYER_SCORE_STRUCT_RAZED"
    },
    "PLAYER_SCORE_TECH_PERCENT": {
        "body": "PLAYER_SCORE_TECH_PERCENT",
        "description": "ConvertPlayerScore(4)",
        "prefix": "PLAYER_SCORE_TECH_PERCENT"
    },
    "PLAYER_SCORE_FOOD_MAXPROD": {
        "body": "PLAYER_SCORE_FOOD_MAXPROD",
        "description": "ConvertPlayerScore(5)",
        "prefix": "PLAYER_SCORE_FOOD_MAXPROD"
    },
    "PLAYER_SCORE_FOOD_MAXUSED": {
        "body": "PLAYER_SCORE_FOOD_MAXUSED",
        "description": "ConvertPlayerScore(6)",
        "prefix": "PLAYER_SCORE_FOOD_MAXUSED"
    },
    "PLAYER_SCORE_HEROES_KILLED": {
        "body": "PLAYER_SCORE_HEROES_KILLED",
        "description": "ConvertPlayerScore(7)",
        "prefix": "PLAYER_SCORE_HEROES_KILLED"
    },
    "PLAYER_SCORE_ITEMS_GAINED": {
        "body": "PLAYER_SCORE_ITEMS_GAINED",
        "description": "ConvertPlayerScore(8)",
        "prefix": "PLAYER_SCORE_ITEMS_GAINED"
    },
    "PLAYER_SCORE_MERCS_HIRED": {
        "body": "PLAYER_SCORE_MERCS_HIRED",
        "description": "ConvertPlayerScore(9)",
        "prefix": "PLAYER_SCORE_MERCS_HIRED"
    },
    "PLAYER_SCORE_GOLD_MINED_TOTAL": {
        "body": "PLAYER_SCORE_GOLD_MINED_TOTAL",
        "description": "ConvertPlayerScore(10)",
        "prefix": "PLAYER_SCORE_GOLD_MINED_TOTAL"
    },
    "PLAYER_SCORE_GOLD_MINED_UPKEEP": {
        "body": "PLAYER_SCORE_GOLD_MINED_UPKEEP",
        "description": "ConvertPlayerScore(11)",
        "prefix": "PLAYER_SCORE_GOLD_MINED_UPKEEP"
    },
    "PLAYER_SCORE_GOLD_LOST_UPKEEP": {
        "body": "PLAYER_SCORE_GOLD_LOST_UPKEEP",
        "description": "ConvertPlayerScore(12)",
        "prefix": "PLAYER_SCORE_GOLD_LOST_UPKEEP"
    },
    "PLAYER_SCORE_GOLD_LOST_TAX": {
        "body": "PLAYER_SCORE_GOLD_LOST_TAX",
        "description": "ConvertPlayerScore(13)",
        "prefix": "PLAYER_SCORE_GOLD_LOST_TAX"
    },
    "PLAYER_SCORE_GOLD_GIVEN": {
        "body": "PLAYER_SCORE_GOLD_GIVEN",
        "description": "ConvertPlayerScore(14)",
        "prefix": "PLAYER_SCORE_GOLD_GIVEN"
    },
    "PLAYER_SCORE_GOLD_RECEIVED": {
        "body": "PLAYER_SCORE_GOLD_RECEIVED",
        "description": "ConvertPlayerScore(15)",
        "prefix": "PLAYER_SCORE_GOLD_RECEIVED"
    },
    "PLAYER_SCORE_LUMBER_TOTAL": {
        "body": "PLAYER_SCORE_LUMBER_TOTAL",
        "description": "ConvertPlayerScore(16)",
        "prefix": "PLAYER_SCORE_LUMBER_TOTAL"
    },
    "PLAYER_SCORE_LUMBER_LOST_UPKEEP": {
        "body": "PLAYER_SCORE_LUMBER_LOST_UPKEEP",
        "description": "ConvertPlayerScore(17)",
        "prefix": "PLAYER_SCORE_LUMBER_LOST_UPKEEP"
    },
    "PLAYER_SCORE_LUMBER_LOST_TAX": {
        "body": "PLAYER_SCORE_LUMBER_LOST_TAX",
        "description": "ConvertPlayerScore(18)",
        "prefix": "PLAYER_SCORE_LUMBER_LOST_TAX"
    },
    "PLAYER_SCORE_LUMBER_GIVEN": {
        "body": "PLAYER_SCORE_LUMBER_GIVEN",
        "description": "ConvertPlayerScore(19)",
        "prefix": "PLAYER_SCORE_LUMBER_GIVEN"
    },
    "PLAYER_SCORE_LUMBER_RECEIVED": {
        "body": "PLAYER_SCORE_LUMBER_RECEIVED",
        "description": "ConvertPlayerScore(20)",
        "prefix": "PLAYER_SCORE_LUMBER_RECEIVED"
    },
    "PLAYER_SCORE_UNIT_TOTAL": {
        "body": "PLAYER_SCORE_UNIT_TOTAL",
        "description": "ConvertPlayerScore(21)",
        "prefix": "PLAYER_SCORE_UNIT_TOTAL"
    },
    "PLAYER_SCORE_HERO_TOTAL": {
        "body": "PLAYER_SCORE_HERO_TOTAL",
        "description": "ConvertPlayerScore(22)",
        "prefix": "PLAYER_SCORE_HERO_TOTAL"
    },
    "PLAYER_SCORE_RESOURCE_TOTAL": {
        "body": "PLAYER_SCORE_RESOURCE_TOTAL",
        "description": "ConvertPlayerScore(23)",
        "prefix": "PLAYER_SCORE_RESOURCE_TOTAL"
    },
    "PLAYER_SCORE_TOTAL": {
        "body": "PLAYER_SCORE_TOTAL",
        "description": "ConvertPlayerScore(24)",
        "prefix": "PLAYER_SCORE_TOTAL"
    },
    "EVENT_GAME_VICTORY": {
        "body": "EVENT_GAME_VICTORY",
        "description": "ConvertGameEvent(0)",
        "prefix": "EVENT_GAME_VICTORY"
    },
    "EVENT_GAME_END_LEVEL": {
        "body": "EVENT_GAME_END_LEVEL",
        "description": "ConvertGameEvent(1)",
        "prefix": "EVENT_GAME_END_LEVEL"
    },
    "EVENT_GAME_VARIABLE_LIMIT": {
        "body": "EVENT_GAME_VARIABLE_LIMIT",
        "description": "ConvertGameEvent(2)",
        "prefix": "EVENT_GAME_VARIABLE_LIMIT"
    },
    "EVENT_GAME_STATE_LIMIT": {
        "body": "EVENT_GAME_STATE_LIMIT",
        "description": "ConvertGameEvent(3)",
        "prefix": "EVENT_GAME_STATE_LIMIT"
    },
    "EVENT_GAME_TIMER_EXPIRED": {
        "body": "EVENT_GAME_TIMER_EXPIRED",
        "description": "ConvertGameEvent(4)",
        "prefix": "EVENT_GAME_TIMER_EXPIRED"
    },
    "EVENT_GAME_ENTER_REGION": {
        "body": "EVENT_GAME_ENTER_REGION",
        "description": "ConvertGameEvent(5)",
        "prefix": "EVENT_GAME_ENTER_REGION"
    },
    "EVENT_GAME_LEAVE_REGION": {
        "body": "EVENT_GAME_LEAVE_REGION",
        "description": "ConvertGameEvent(6)",
        "prefix": "EVENT_GAME_LEAVE_REGION"
    },
    "EVENT_GAME_TRACKABLE_HIT": {
        "body": "EVENT_GAME_TRACKABLE_HIT",
        "description": "ConvertGameEvent(7)",
        "prefix": "EVENT_GAME_TRACKABLE_HIT"
    },
    "EVENT_GAME_TRACKABLE_TRACK": {
        "body": "EVENT_GAME_TRACKABLE_TRACK",
        "description": "ConvertGameEvent(8)",
        "prefix": "EVENT_GAME_TRACKABLE_TRACK"
    },
    "EVENT_GAME_SHOW_SKILL": {
        "body": "EVENT_GAME_SHOW_SKILL",
        "description": "ConvertGameEvent(9)",
        "prefix": "EVENT_GAME_SHOW_SKILL"
    },
    "EVENT_GAME_BUILD_SUBMENU": {
        "body": "EVENT_GAME_BUILD_SUBMENU",
        "description": "ConvertGameEvent(10)",
        "prefix": "EVENT_GAME_BUILD_SUBMENU"
    },
    "EVENT_PLAYER_STATE_LIMIT": {
        "body": "EVENT_PLAYER_STATE_LIMIT",
        "description": "ConvertPlayerEvent(11)",
        "prefix": "EVENT_PLAYER_STATE_LIMIT"
    },
    "EVENT_PLAYER_ALLIANCE_CHANGED": {
        "body": "EVENT_PLAYER_ALLIANCE_CHANGED",
        "description": "ConvertPlayerEvent(12)",
        "prefix": "EVENT_PLAYER_ALLIANCE_CHANGED"
    },
    "EVENT_PLAYER_DEFEAT": {
        "body": "EVENT_PLAYER_DEFEAT",
        "description": "ConvertPlayerEvent(13)",
        "prefix": "EVENT_PLAYER_DEFEAT"
    },
    "EVENT_PLAYER_VICTORY": {
        "body": "EVENT_PLAYER_VICTORY",
        "description": "ConvertPlayerEvent(14)",
        "prefix": "EVENT_PLAYER_VICTORY"
    },
    "EVENT_PLAYER_LEAVE": {
        "body": "EVENT_PLAYER_LEAVE",
        "description": "ConvertPlayerEvent(15)",
        "prefix": "EVENT_PLAYER_LEAVE"
    },
    "EVENT_PLAYER_CHAT": {
        "body": "EVENT_PLAYER_CHAT",
        "description": "ConvertPlayerEvent(16)",
        "prefix": "EVENT_PLAYER_CHAT"
    },
    "EVENT_PLAYER_END_CINEMATIC": {
        "body": "EVENT_PLAYER_END_CINEMATIC",
        "description": "ConvertPlayerEvent(17)",
        "prefix": "EVENT_PLAYER_END_CINEMATIC"
    },
    "EVENT_PLAYER_UNIT_ATTACKED": {
        "body": "EVENT_PLAYER_UNIT_ATTACKED",
        "description": "ConvertPlayerUnitEvent(18)",
        "prefix": "EVENT_PLAYER_UNIT_ATTACKED"
    },
    "EVENT_PLAYER_UNIT_RESCUED": {
        "body": "EVENT_PLAYER_UNIT_RESCUED",
        "description": "ConvertPlayerUnitEvent(19)",
        "prefix": "EVENT_PLAYER_UNIT_RESCUED"
    },
    "EVENT_PLAYER_UNIT_DEATH": {
        "body": "EVENT_PLAYER_UNIT_DEATH",
        "description": "ConvertPlayerUnitEvent(20)",
        "prefix": "EVENT_PLAYER_UNIT_DEATH"
    },
    "EVENT_PLAYER_UNIT_DECAY": {
        "body": "EVENT_PLAYER_UNIT_DECAY",
        "description": "ConvertPlayerUnitEvent(21)",
        "prefix": "EVENT_PLAYER_UNIT_DECAY"
    },
    "EVENT_PLAYER_UNIT_DETECTED": {
        "body": "EVENT_PLAYER_UNIT_DETECTED",
        "description": "ConvertPlayerUnitEvent(22)",
        "prefix": "EVENT_PLAYER_UNIT_DETECTED"
    },
    "EVENT_PLAYER_UNIT_HIDDEN": {
        "body": "EVENT_PLAYER_UNIT_HIDDEN",
        "description": "ConvertPlayerUnitEvent(23)",
        "prefix": "EVENT_PLAYER_UNIT_HIDDEN"
    },
    "EVENT_PLAYER_UNIT_SELECTED": {
        "body": "EVENT_PLAYER_UNIT_SELECTED",
        "description": "ConvertPlayerUnitEvent(24)",
        "prefix": "EVENT_PLAYER_UNIT_SELECTED"
    },
    "EVENT_PLAYER_UNIT_DESELECTED": {
        "body": "EVENT_PLAYER_UNIT_DESELECTED",
        "description": "ConvertPlayerUnitEvent(25)",
        "prefix": "EVENT_PLAYER_UNIT_DESELECTED"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_START": {
        "body": "EVENT_PLAYER_UNIT_CONSTRUCT_START",
        "description": "ConvertPlayerUnitEvent(26)",
        "prefix": "EVENT_PLAYER_UNIT_CONSTRUCT_START"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL": {
        "body": "EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL",
        "description": "ConvertPlayerUnitEvent(27)",
        "prefix": "EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL"
    },
    "EVENT_PLAYER_UNIT_CONSTRUCT_FINISH": {
        "body": "EVENT_PLAYER_UNIT_CONSTRUCT_FINISH",
        "description": "ConvertPlayerUnitEvent(28)",
        "prefix": "EVENT_PLAYER_UNIT_CONSTRUCT_FINISH"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_START": {
        "body": "EVENT_PLAYER_UNIT_UPGRADE_START",
        "description": "ConvertPlayerUnitEvent(29)",
        "prefix": "EVENT_PLAYER_UNIT_UPGRADE_START"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_CANCEL": {
        "body": "EVENT_PLAYER_UNIT_UPGRADE_CANCEL",
        "description": "ConvertPlayerUnitEvent(30)",
        "prefix": "EVENT_PLAYER_UNIT_UPGRADE_CANCEL"
    },
    "EVENT_PLAYER_UNIT_UPGRADE_FINISH": {
        "body": "EVENT_PLAYER_UNIT_UPGRADE_FINISH",
        "description": "ConvertPlayerUnitEvent(31)",
        "prefix": "EVENT_PLAYER_UNIT_UPGRADE_FINISH"
    },
    "EVENT_PLAYER_UNIT_TRAIN_START": {
        "body": "EVENT_PLAYER_UNIT_TRAIN_START",
        "description": "ConvertPlayerUnitEvent(32)",
        "prefix": "EVENT_PLAYER_UNIT_TRAIN_START"
    },
    "EVENT_PLAYER_UNIT_TRAIN_CANCEL": {
        "body": "EVENT_PLAYER_UNIT_TRAIN_CANCEL",
        "description": "ConvertPlayerUnitEvent(33)",
        "prefix": "EVENT_PLAYER_UNIT_TRAIN_CANCEL"
    },
    "EVENT_PLAYER_UNIT_TRAIN_FINISH": {
        "body": "EVENT_PLAYER_UNIT_TRAIN_FINISH",
        "description": "ConvertPlayerUnitEvent(34)",
        "prefix": "EVENT_PLAYER_UNIT_TRAIN_FINISH"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_START": {
        "body": "EVENT_PLAYER_UNIT_RESEARCH_START",
        "description": "ConvertPlayerUnitEvent(35)",
        "prefix": "EVENT_PLAYER_UNIT_RESEARCH_START"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_CANCEL": {
        "body": "EVENT_PLAYER_UNIT_RESEARCH_CANCEL",
        "description": "ConvertPlayerUnitEvent(36)",
        "prefix": "EVENT_PLAYER_UNIT_RESEARCH_CANCEL"
    },
    "EVENT_PLAYER_UNIT_RESEARCH_FINISH": {
        "body": "EVENT_PLAYER_UNIT_RESEARCH_FINISH",
        "description": "ConvertPlayerUnitEvent(37)",
        "prefix": "EVENT_PLAYER_UNIT_RESEARCH_FINISH"
    },
    "EVENT_PLAYER_UNIT_ISSUED_ORDER": {
        "body": "EVENT_PLAYER_UNIT_ISSUED_ORDER",
        "description": "ConvertPlayerUnitEvent(38)",
        "prefix": "EVENT_PLAYER_UNIT_ISSUED_ORDER"
    },
    "EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER": {
        "body": "EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER",
        "description": "ConvertPlayerUnitEvent(39)",
        "prefix": "EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER"
    },
    "EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER": {
        "body": "EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER",
        "description": "ConvertPlayerUnitEvent(40)",
        "prefix": "EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER"
    },
    "EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER": {
        "body": "EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER",
        "description": "ConvertPlayerUnitEvent(40)    // for compat",
        "prefix": "EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER"
    },
    "EVENT_PLAYER_HERO_LEVEL": {
        "body": "EVENT_PLAYER_HERO_LEVEL",
        "description": "ConvertPlayerUnitEvent(41)",
        "prefix": "EVENT_PLAYER_HERO_LEVEL"
    },
    "EVENT_PLAYER_HERO_SKILL": {
        "body": "EVENT_PLAYER_HERO_SKILL",
        "description": "ConvertPlayerUnitEvent(42)",
        "prefix": "EVENT_PLAYER_HERO_SKILL"
    },
    "EVENT_PLAYER_HERO_REVIVABLE": {
        "body": "EVENT_PLAYER_HERO_REVIVABLE",
        "description": "ConvertPlayerUnitEvent(43)",
        "prefix": "EVENT_PLAYER_HERO_REVIVABLE"
    },
    "EVENT_PLAYER_HERO_REVIVE_START": {
        "body": "EVENT_PLAYER_HERO_REVIVE_START",
        "description": "ConvertPlayerUnitEvent(44)",
        "prefix": "EVENT_PLAYER_HERO_REVIVE_START"
    },
    "EVENT_PLAYER_HERO_REVIVE_CANCEL": {
        "body": "EVENT_PLAYER_HERO_REVIVE_CANCEL",
        "description": "ConvertPlayerUnitEvent(45)",
        "prefix": "EVENT_PLAYER_HERO_REVIVE_CANCEL"
    },
    "EVENT_PLAYER_HERO_REVIVE_FINISH": {
        "body": "EVENT_PLAYER_HERO_REVIVE_FINISH",
        "description": "ConvertPlayerUnitEvent(46)",
        "prefix": "EVENT_PLAYER_HERO_REVIVE_FINISH"
    },
    "EVENT_PLAYER_UNIT_SUMMON": {
        "body": "EVENT_PLAYER_UNIT_SUMMON",
        "description": "ConvertPlayerUnitEvent(47)",
        "prefix": "EVENT_PLAYER_UNIT_SUMMON"
    },
    "EVENT_PLAYER_UNIT_DROP_ITEM": {
        "body": "EVENT_PLAYER_UNIT_DROP_ITEM",
        "description": "ConvertPlayerUnitEvent(48)",
        "prefix": "EVENT_PLAYER_UNIT_DROP_ITEM"
    },
    "EVENT_PLAYER_UNIT_PICKUP_ITEM": {
        "body": "EVENT_PLAYER_UNIT_PICKUP_ITEM",
        "description": "ConvertPlayerUnitEvent(49)",
        "prefix": "EVENT_PLAYER_UNIT_PICKUP_ITEM"
    },
    "EVENT_PLAYER_UNIT_USE_ITEM": {
        "body": "EVENT_PLAYER_UNIT_USE_ITEM",
        "description": "ConvertPlayerUnitEvent(50)",
        "prefix": "EVENT_PLAYER_UNIT_USE_ITEM"
    },
    "EVENT_PLAYER_UNIT_LOADED": {
        "body": "EVENT_PLAYER_UNIT_LOADED",
        "description": "ConvertPlayerUnitEvent(51)",
        "prefix": "EVENT_PLAYER_UNIT_LOADED"
    },
    "EVENT_PLAYER_UNIT_DAMAGED": {
        "body": "EVENT_PLAYER_UNIT_DAMAGED",
        "description": "ConvertPlayerUnitEvent(308)",
        "prefix": "EVENT_PLAYER_UNIT_DAMAGED"
    },
    "EVENT_PLAYER_UNIT_DAMAGING": {
        "body": "EVENT_PLAYER_UNIT_DAMAGING",
        "description": "ConvertPlayerUnitEvent(315)",
        "prefix": "EVENT_PLAYER_UNIT_DAMAGING"
    },
    "EVENT_UNIT_DAMAGED": {
        "body": "EVENT_UNIT_DAMAGED",
        "description": "ConvertUnitEvent(52)",
        "prefix": "EVENT_UNIT_DAMAGED"
    },
    "EVENT_UNIT_DAMAGING": {
        "body": "EVENT_UNIT_DAMAGING",
        "description": "ConvertUnitEvent(314)",
        "prefix": "EVENT_UNIT_DAMAGING"
    },
    "EVENT_UNIT_DEATH": {
        "body": "EVENT_UNIT_DEATH",
        "description": "ConvertUnitEvent(53)",
        "prefix": "EVENT_UNIT_DEATH"
    },
    "EVENT_UNIT_DECAY": {
        "body": "EVENT_UNIT_DECAY",
        "description": "ConvertUnitEvent(54)",
        "prefix": "EVENT_UNIT_DECAY"
    },
    "EVENT_UNIT_DETECTED": {
        "body": "EVENT_UNIT_DETECTED",
        "description": "ConvertUnitEvent(55)",
        "prefix": "EVENT_UNIT_DETECTED"
    },
    "EVENT_UNIT_HIDDEN": {
        "body": "EVENT_UNIT_HIDDEN",
        "description": "ConvertUnitEvent(56)",
        "prefix": "EVENT_UNIT_HIDDEN"
    },
    "EVENT_UNIT_SELECTED": {
        "body": "EVENT_UNIT_SELECTED",
        "description": "ConvertUnitEvent(57)",
        "prefix": "EVENT_UNIT_SELECTED"
    },
    "EVENT_UNIT_DESELECTED": {
        "body": "EVENT_UNIT_DESELECTED",
        "description": "ConvertUnitEvent(58)",
        "prefix": "EVENT_UNIT_DESELECTED"
    },
    "EVENT_UNIT_STATE_LIMIT": {
        "body": "EVENT_UNIT_STATE_LIMIT",
        "description": "ConvertUnitEvent(59)",
        "prefix": "EVENT_UNIT_STATE_LIMIT"
    },
    "EVENT_UNIT_ACQUIRED_TARGET": {
        "body": "EVENT_UNIT_ACQUIRED_TARGET",
        "description": "ConvertUnitEvent(60)",
        "prefix": "EVENT_UNIT_ACQUIRED_TARGET"
    },
    "EVENT_UNIT_TARGET_IN_RANGE": {
        "body": "EVENT_UNIT_TARGET_IN_RANGE",
        "description": "ConvertUnitEvent(61)",
        "prefix": "EVENT_UNIT_TARGET_IN_RANGE"
    },
    "EVENT_UNIT_ATTACKED": {
        "body": "EVENT_UNIT_ATTACKED",
        "description": "ConvertUnitEvent(62)",
        "prefix": "EVENT_UNIT_ATTACKED"
    },
    "EVENT_UNIT_RESCUED": {
        "body": "EVENT_UNIT_RESCUED",
        "description": "ConvertUnitEvent(63)",
        "prefix": "EVENT_UNIT_RESCUED"
    },
    "EVENT_UNIT_CONSTRUCT_CANCEL": {
        "body": "EVENT_UNIT_CONSTRUCT_CANCEL",
        "description": "ConvertUnitEvent(64)",
        "prefix": "EVENT_UNIT_CONSTRUCT_CANCEL"
    },
    "EVENT_UNIT_CONSTRUCT_FINISH": {
        "body": "EVENT_UNIT_CONSTRUCT_FINISH",
        "description": "ConvertUnitEvent(65)",
        "prefix": "EVENT_UNIT_CONSTRUCT_FINISH"
    },
    "EVENT_UNIT_UPGRADE_START": {
        "body": "EVENT_UNIT_UPGRADE_START",
        "description": "ConvertUnitEvent(66)",
        "prefix": "EVENT_UNIT_UPGRADE_START"
    },
    "EVENT_UNIT_UPGRADE_CANCEL": {
        "body": "EVENT_UNIT_UPGRADE_CANCEL",
        "description": "ConvertUnitEvent(67)",
        "prefix": "EVENT_UNIT_UPGRADE_CANCEL"
    },
    "EVENT_UNIT_UPGRADE_FINISH": {
        "body": "EVENT_UNIT_UPGRADE_FINISH",
        "description": "ConvertUnitEvent(68)",
        "prefix": "EVENT_UNIT_UPGRADE_FINISH"
    },
    "EVENT_UNIT_TRAIN_START": {
        "body": "EVENT_UNIT_TRAIN_START",
        "description": "ConvertUnitEvent(69)",
        "prefix": "EVENT_UNIT_TRAIN_START"
    },
    "EVENT_UNIT_TRAIN_CANCEL": {
        "body": "EVENT_UNIT_TRAIN_CANCEL",
        "description": "ConvertUnitEvent(70)",
        "prefix": "EVENT_UNIT_TRAIN_CANCEL"
    },
    "EVENT_UNIT_TRAIN_FINISH": {
        "body": "EVENT_UNIT_TRAIN_FINISH",
        "description": "ConvertUnitEvent(71)",
        "prefix": "EVENT_UNIT_TRAIN_FINISH"
    },
    "EVENT_UNIT_RESEARCH_START": {
        "body": "EVENT_UNIT_RESEARCH_START",
        "description": "ConvertUnitEvent(72)",
        "prefix": "EVENT_UNIT_RESEARCH_START"
    },
    "EVENT_UNIT_RESEARCH_CANCEL": {
        "body": "EVENT_UNIT_RESEARCH_CANCEL",
        "description": "ConvertUnitEvent(73)",
        "prefix": "EVENT_UNIT_RESEARCH_CANCEL"
    },
    "EVENT_UNIT_RESEARCH_FINISH": {
        "body": "EVENT_UNIT_RESEARCH_FINISH",
        "description": "ConvertUnitEvent(74)",
        "prefix": "EVENT_UNIT_RESEARCH_FINISH"
    },
    "EVENT_UNIT_ISSUED_ORDER": {
        "body": "EVENT_UNIT_ISSUED_ORDER",
        "description": "ConvertUnitEvent(75)",
        "prefix": "EVENT_UNIT_ISSUED_ORDER"
    },
    "EVENT_UNIT_ISSUED_POINT_ORDER": {
        "body": "EVENT_UNIT_ISSUED_POINT_ORDER",
        "description": "ConvertUnitEvent(76)",
        "prefix": "EVENT_UNIT_ISSUED_POINT_ORDER"
    },
    "EVENT_UNIT_ISSUED_TARGET_ORDER": {
        "body": "EVENT_UNIT_ISSUED_TARGET_ORDER",
        "description": "ConvertUnitEvent(77)",
        "prefix": "EVENT_UNIT_ISSUED_TARGET_ORDER"
    },
    "EVENT_UNIT_HERO_LEVEL": {
        "body": "EVENT_UNIT_HERO_LEVEL",
        "description": "ConvertUnitEvent(78)",
        "prefix": "EVENT_UNIT_HERO_LEVEL"
    },
    "EVENT_UNIT_HERO_SKILL": {
        "body": "EVENT_UNIT_HERO_SKILL",
        "description": "ConvertUnitEvent(79)",
        "prefix": "EVENT_UNIT_HERO_SKILL"
    },
    "EVENT_UNIT_HERO_REVIVABLE": {
        "body": "EVENT_UNIT_HERO_REVIVABLE",
        "description": "ConvertUnitEvent(80)",
        "prefix": "EVENT_UNIT_HERO_REVIVABLE"
    },
    "EVENT_UNIT_HERO_REVIVE_START": {
        "body": "EVENT_UNIT_HERO_REVIVE_START",
        "description": "ConvertUnitEvent(81)",
        "prefix": "EVENT_UNIT_HERO_REVIVE_START"
    },
    "EVENT_UNIT_HERO_REVIVE_CANCEL": {
        "body": "EVENT_UNIT_HERO_REVIVE_CANCEL",
        "description": "ConvertUnitEvent(82)",
        "prefix": "EVENT_UNIT_HERO_REVIVE_CANCEL"
    },
    "EVENT_UNIT_HERO_REVIVE_FINISH": {
        "body": "EVENT_UNIT_HERO_REVIVE_FINISH",
        "description": "ConvertUnitEvent(83)",
        "prefix": "EVENT_UNIT_HERO_REVIVE_FINISH"
    },
    "EVENT_UNIT_SUMMON": {
        "body": "EVENT_UNIT_SUMMON",
        "description": "ConvertUnitEvent(84)",
        "prefix": "EVENT_UNIT_SUMMON"
    },
    "EVENT_UNIT_DROP_ITEM": {
        "body": "EVENT_UNIT_DROP_ITEM",
        "description": "ConvertUnitEvent(85)",
        "prefix": "EVENT_UNIT_DROP_ITEM"
    },
    "EVENT_UNIT_PICKUP_ITEM": {
        "body": "EVENT_UNIT_PICKUP_ITEM",
        "description": "ConvertUnitEvent(86)",
        "prefix": "EVENT_UNIT_PICKUP_ITEM"
    },
    "EVENT_UNIT_USE_ITEM": {
        "body": "EVENT_UNIT_USE_ITEM",
        "description": "ConvertUnitEvent(87)",
        "prefix": "EVENT_UNIT_USE_ITEM"
    },
    "EVENT_UNIT_LOADED": {
        "body": "EVENT_UNIT_LOADED",
        "description": "ConvertUnitEvent(88)",
        "prefix": "EVENT_UNIT_LOADED"
    },
    "EVENT_WIDGET_DEATH": {
        "body": "EVENT_WIDGET_DEATH",
        "description": "ConvertWidgetEvent(89)",
        "prefix": "EVENT_WIDGET_DEATH"
    },
    "EVENT_DIALOG_BUTTON_CLICK": {
        "body": "EVENT_DIALOG_BUTTON_CLICK",
        "description": "ConvertDialogEvent(90)",
        "prefix": "EVENT_DIALOG_BUTTON_CLICK"
    },
    "EVENT_DIALOG_CLICK": {
        "body": "EVENT_DIALOG_CLICK",
        "description": "ConvertDialogEvent(91)",
        "prefix": "EVENT_DIALOG_CLICK"
    },
    "EVENT_GAME_LOADED": {
        "body": "EVENT_GAME_LOADED",
        "description": "ConvertGameEvent(256)",
        "prefix": "EVENT_GAME_LOADED"
    },
    "EVENT_GAME_TOURNAMENT_FINISH_SOON": {
        "body": "EVENT_GAME_TOURNAMENT_FINISH_SOON",
        "description": "ConvertGameEvent(257)",
        "prefix": "EVENT_GAME_TOURNAMENT_FINISH_SOON"
    },
    "EVENT_GAME_TOURNAMENT_FINISH_NOW": {
        "body": "EVENT_GAME_TOURNAMENT_FINISH_NOW",
        "description": "ConvertGameEvent(258)",
        "prefix": "EVENT_GAME_TOURNAMENT_FINISH_NOW"
    },
    "EVENT_GAME_SAVE": {
        "body": "EVENT_GAME_SAVE",
        "description": "ConvertGameEvent(259)",
        "prefix": "EVENT_GAME_SAVE"
    },
    "EVENT_GAME_CUSTOM_UI_FRAME": {
        "body": "EVENT_GAME_CUSTOM_UI_FRAME",
        "description": "ConvertGameEvent(310)",
        "prefix": "EVENT_GAME_CUSTOM_UI_FRAME"
    },
    "EVENT_PLAYER_ARROW_LEFT_DOWN": {
        "body": "EVENT_PLAYER_ARROW_LEFT_DOWN",
        "description": "ConvertPlayerEvent(261)",
        "prefix": "EVENT_PLAYER_ARROW_LEFT_DOWN"
    },
    "EVENT_PLAYER_ARROW_LEFT_UP": {
        "body": "EVENT_PLAYER_ARROW_LEFT_UP",
        "description": "ConvertPlayerEvent(262)",
        "prefix": "EVENT_PLAYER_ARROW_LEFT_UP"
    },
    "EVENT_PLAYER_ARROW_RIGHT_DOWN": {
        "body": "EVENT_PLAYER_ARROW_RIGHT_DOWN",
        "description": "ConvertPlayerEvent(263)",
        "prefix": "EVENT_PLAYER_ARROW_RIGHT_DOWN"
    },
    "EVENT_PLAYER_ARROW_RIGHT_UP": {
        "body": "EVENT_PLAYER_ARROW_RIGHT_UP",
        "description": "ConvertPlayerEvent(264)",
        "prefix": "EVENT_PLAYER_ARROW_RIGHT_UP"
    },
    "EVENT_PLAYER_ARROW_DOWN_DOWN": {
        "body": "EVENT_PLAYER_ARROW_DOWN_DOWN",
        "description": "ConvertPlayerEvent(265)",
        "prefix": "EVENT_PLAYER_ARROW_DOWN_DOWN"
    },
    "EVENT_PLAYER_ARROW_DOWN_UP": {
        "body": "EVENT_PLAYER_ARROW_DOWN_UP",
        "description": "ConvertPlayerEvent(266)",
        "prefix": "EVENT_PLAYER_ARROW_DOWN_UP"
    },
    "EVENT_PLAYER_ARROW_UP_DOWN": {
        "body": "EVENT_PLAYER_ARROW_UP_DOWN",
        "description": "ConvertPlayerEvent(267)",
        "prefix": "EVENT_PLAYER_ARROW_UP_DOWN"
    },
    "EVENT_PLAYER_ARROW_UP_UP": {
        "body": "EVENT_PLAYER_ARROW_UP_UP",
        "description": "ConvertPlayerEvent(268)",
        "prefix": "EVENT_PLAYER_ARROW_UP_UP"
    },
    "EVENT_PLAYER_MOUSE_DOWN": {
        "body": "EVENT_PLAYER_MOUSE_DOWN",
        "description": "ConvertPlayerEvent(305)",
        "prefix": "EVENT_PLAYER_MOUSE_DOWN"
    },
    "EVENT_PLAYER_MOUSE_UP": {
        "body": "EVENT_PLAYER_MOUSE_UP",
        "description": "ConvertPlayerEvent(306)",
        "prefix": "EVENT_PLAYER_MOUSE_UP"
    },
    "EVENT_PLAYER_MOUSE_MOVE": {
        "body": "EVENT_PLAYER_MOUSE_MOVE",
        "description": "ConvertPlayerEvent(307)",
        "prefix": "EVENT_PLAYER_MOUSE_MOVE"
    },
    "EVENT_PLAYER_SYNC_DATA": {
        "body": "EVENT_PLAYER_SYNC_DATA",
        "description": "ConvertPlayerEvent(309)",
        "prefix": "EVENT_PLAYER_SYNC_DATA"
    },
    "EVENT_PLAYER_KEY": {
        "body": "EVENT_PLAYER_KEY",
        "description": "ConvertPlayerEvent(311)",
        "prefix": "EVENT_PLAYER_KEY"
    },
    "EVENT_PLAYER_KEY_DOWN": {
        "body": "EVENT_PLAYER_KEY_DOWN",
        "description": "ConvertPlayerEvent(312)",
        "prefix": "EVENT_PLAYER_KEY_DOWN"
    },
    "EVENT_PLAYER_KEY_UP": {
        "body": "EVENT_PLAYER_KEY_UP",
        "description": "ConvertPlayerEvent(313)",
        "prefix": "EVENT_PLAYER_KEY_UP"
    },
    "EVENT_PLAYER_UNIT_SELL": {
        "body": "EVENT_PLAYER_UNIT_SELL",
        "description": "ConvertPlayerUnitEvent(269)",
        "prefix": "EVENT_PLAYER_UNIT_SELL"
    },
    "EVENT_PLAYER_UNIT_CHANGE_OWNER": {
        "body": "EVENT_PLAYER_UNIT_CHANGE_OWNER",
        "description": "ConvertPlayerUnitEvent(270)",
        "prefix": "EVENT_PLAYER_UNIT_CHANGE_OWNER"
    },
    "EVENT_PLAYER_UNIT_SELL_ITEM": {
        "body": "EVENT_PLAYER_UNIT_SELL_ITEM",
        "description": "ConvertPlayerUnitEvent(271)",
        "prefix": "EVENT_PLAYER_UNIT_SELL_ITEM"
    },
    "EVENT_PLAYER_UNIT_SPELL_CHANNEL": {
        "body": "EVENT_PLAYER_UNIT_SPELL_CHANNEL",
        "description": "ConvertPlayerUnitEvent(272)",
        "prefix": "EVENT_PLAYER_UNIT_SPELL_CHANNEL"
    },
    "EVENT_PLAYER_UNIT_SPELL_CAST": {
        "body": "EVENT_PLAYER_UNIT_SPELL_CAST",
        "description": "ConvertPlayerUnitEvent(273)",
        "prefix": "EVENT_PLAYER_UNIT_SPELL_CAST"
    },
    "EVENT_PLAYER_UNIT_SPELL_EFFECT": {
        "body": "EVENT_PLAYER_UNIT_SPELL_EFFECT",
        "description": "ConvertPlayerUnitEvent(274)",
        "prefix": "EVENT_PLAYER_UNIT_SPELL_EFFECT"
    },
    "EVENT_PLAYER_UNIT_SPELL_FINISH": {
        "body": "EVENT_PLAYER_UNIT_SPELL_FINISH",
        "description": "ConvertPlayerUnitEvent(275)",
        "prefix": "EVENT_PLAYER_UNIT_SPELL_FINISH"
    },
    "EVENT_PLAYER_UNIT_SPELL_ENDCAST": {
        "body": "EVENT_PLAYER_UNIT_SPELL_ENDCAST",
        "description": "ConvertPlayerUnitEvent(276)",
        "prefix": "EVENT_PLAYER_UNIT_SPELL_ENDCAST"
    },
    "EVENT_PLAYER_UNIT_PAWN_ITEM": {
        "body": "EVENT_PLAYER_UNIT_PAWN_ITEM",
        "description": "ConvertPlayerUnitEvent(277)",
        "prefix": "EVENT_PLAYER_UNIT_PAWN_ITEM"
    },
    "EVENT_UNIT_SELL": {
        "body": "EVENT_UNIT_SELL",
        "description": "ConvertUnitEvent(286)",
        "prefix": "EVENT_UNIT_SELL"
    },
    "EVENT_UNIT_CHANGE_OWNER": {
        "body": "EVENT_UNIT_CHANGE_OWNER",
        "description": "ConvertUnitEvent(287)",
        "prefix": "EVENT_UNIT_CHANGE_OWNER"
    },
    "EVENT_UNIT_SELL_ITEM": {
        "body": "EVENT_UNIT_SELL_ITEM",
        "description": "ConvertUnitEvent(288)",
        "prefix": "EVENT_UNIT_SELL_ITEM"
    },
    "EVENT_UNIT_SPELL_CHANNEL": {
        "body": "EVENT_UNIT_SPELL_CHANNEL",
        "description": "ConvertUnitEvent(289)",
        "prefix": "EVENT_UNIT_SPELL_CHANNEL"
    },
    "EVENT_UNIT_SPELL_CAST": {
        "body": "EVENT_UNIT_SPELL_CAST",
        "description": "ConvertUnitEvent(290)",
        "prefix": "EVENT_UNIT_SPELL_CAST"
    },
    "EVENT_UNIT_SPELL_EFFECT": {
        "body": "EVENT_UNIT_SPELL_EFFECT",
        "description": "ConvertUnitEvent(291)",
        "prefix": "EVENT_UNIT_SPELL_EFFECT"
    },
    "EVENT_UNIT_SPELL_FINISH": {
        "body": "EVENT_UNIT_SPELL_FINISH",
        "description": "ConvertUnitEvent(292)",
        "prefix": "EVENT_UNIT_SPELL_FINISH"
    },
    "EVENT_UNIT_SPELL_ENDCAST": {
        "body": "EVENT_UNIT_SPELL_ENDCAST",
        "description": "ConvertUnitEvent(293)",
        "prefix": "EVENT_UNIT_SPELL_ENDCAST"
    },
    "EVENT_UNIT_PAWN_ITEM": {
        "body": "EVENT_UNIT_PAWN_ITEM",
        "description": "ConvertUnitEvent(294)",
        "prefix": "EVENT_UNIT_PAWN_ITEM"
    },
    "LESS_THAN": {
        "body": "LESS_THAN",
        "description": "ConvertLimitOp(0)",
        "prefix": "LESS_THAN"
    },
    "LESS_THAN_OR_EQUAL": {
        "body": "LESS_THAN_OR_EQUAL",
        "description": "ConvertLimitOp(1)",
        "prefix": "LESS_THAN_OR_EQUAL"
    },
    "EQUAL": {
        "body": "EQUAL",
        "description": "ConvertLimitOp(2)",
        "prefix": "EQUAL"
    },
    "GREATER_THAN_OR_EQUAL": {
        "body": "GREATER_THAN_OR_EQUAL",
        "description": "ConvertLimitOp(3)",
        "prefix": "GREATER_THAN_OR_EQUAL"
    },
    "GREATER_THAN": {
        "body": "GREATER_THAN",
        "description": "ConvertLimitOp(4)",
        "prefix": "GREATER_THAN"
    },
    "NOT_EQUAL": {
        "body": "NOT_EQUAL",
        "description": "ConvertLimitOp(5)",
        "prefix": "NOT_EQUAL"
    },
    "UNIT_TYPE_HERO": {
        "body": "UNIT_TYPE_HERO",
        "description": "ConvertUnitType(0)",
        "prefix": "UNIT_TYPE_HERO"
    },
    "UNIT_TYPE_DEAD": {
        "body": "UNIT_TYPE_DEAD",
        "description": "ConvertUnitType(1)",
        "prefix": "UNIT_TYPE_DEAD"
    },
    "UNIT_TYPE_STRUCTURE": {
        "body": "UNIT_TYPE_STRUCTURE",
        "description": "ConvertUnitType(2)",
        "prefix": "UNIT_TYPE_STRUCTURE"
    },
    "UNIT_TYPE_FLYING": {
        "body": "UNIT_TYPE_FLYING",
        "description": "ConvertUnitType(3)",
        "prefix": "UNIT_TYPE_FLYING"
    },
    "UNIT_TYPE_GROUND": {
        "body": "UNIT_TYPE_GROUND",
        "description": "ConvertUnitType(4)",
        "prefix": "UNIT_TYPE_GROUND"
    },
    "UNIT_TYPE_ATTACKS_FLYING": {
        "body": "UNIT_TYPE_ATTACKS_FLYING",
        "description": "ConvertUnitType(5)",
        "prefix": "UNIT_TYPE_ATTACKS_FLYING"
    },
    "UNIT_TYPE_ATTACKS_GROUND": {
        "body": "UNIT_TYPE_ATTACKS_GROUND",
        "description": "ConvertUnitType(6)",
        "prefix": "UNIT_TYPE_ATTACKS_GROUND"
    },
    "UNIT_TYPE_MELEE_ATTACKER": {
        "body": "UNIT_TYPE_MELEE_ATTACKER",
        "description": "ConvertUnitType(7)",
        "prefix": "UNIT_TYPE_MELEE_ATTACKER"
    },
    "UNIT_TYPE_RANGED_ATTACKER": {
        "body": "UNIT_TYPE_RANGED_ATTACKER",
        "description": "ConvertUnitType(8)",
        "prefix": "UNIT_TYPE_RANGED_ATTACKER"
    },
    "UNIT_TYPE_GIANT": {
        "body": "UNIT_TYPE_GIANT",
        "description": "ConvertUnitType(9)",
        "prefix": "UNIT_TYPE_GIANT"
    },
    "UNIT_TYPE_SUMMONED": {
        "body": "UNIT_TYPE_SUMMONED",
        "description": "ConvertUnitType(10)",
        "prefix": "UNIT_TYPE_SUMMONED"
    },
    "UNIT_TYPE_STUNNED": {
        "body": "UNIT_TYPE_STUNNED",
        "description": "ConvertUnitType(11)",
        "prefix": "UNIT_TYPE_STUNNED"
    },
    "UNIT_TYPE_PLAGUED": {
        "body": "UNIT_TYPE_PLAGUED",
        "description": "ConvertUnitType(12)",
        "prefix": "UNIT_TYPE_PLAGUED"
    },
    "UNIT_TYPE_SNARED": {
        "body": "UNIT_TYPE_SNARED",
        "description": "ConvertUnitType(13)",
        "prefix": "UNIT_TYPE_SNARED"
    },
    "UNIT_TYPE_UNDEAD": {
        "body": "UNIT_TYPE_UNDEAD",
        "description": "ConvertUnitType(14)",
        "prefix": "UNIT_TYPE_UNDEAD"
    },
    "UNIT_TYPE_MECHANICAL": {
        "body": "UNIT_TYPE_MECHANICAL",
        "description": "ConvertUnitType(15)",
        "prefix": "UNIT_TYPE_MECHANICAL"
    },
    "UNIT_TYPE_PEON": {
        "body": "UNIT_TYPE_PEON",
        "description": "ConvertUnitType(16)",
        "prefix": "UNIT_TYPE_PEON"
    },
    "UNIT_TYPE_SAPPER": {
        "body": "UNIT_TYPE_SAPPER",
        "description": "ConvertUnitType(17)",
        "prefix": "UNIT_TYPE_SAPPER"
    },
    "UNIT_TYPE_TOWNHALL": {
        "body": "UNIT_TYPE_TOWNHALL",
        "description": "ConvertUnitType(18)",
        "prefix": "UNIT_TYPE_TOWNHALL"
    },
    "UNIT_TYPE_ANCIENT": {
        "body": "UNIT_TYPE_ANCIENT",
        "description": "ConvertUnitType(19)",
        "prefix": "UNIT_TYPE_ANCIENT"
    },
    "UNIT_TYPE_TAUREN": {
        "body": "UNIT_TYPE_TAUREN",
        "description": "ConvertUnitType(20)",
        "prefix": "UNIT_TYPE_TAUREN"
    },
    "UNIT_TYPE_POISONED": {
        "body": "UNIT_TYPE_POISONED",
        "description": "ConvertUnitType(21)",
        "prefix": "UNIT_TYPE_POISONED"
    },
    "UNIT_TYPE_POLYMORPHED": {
        "body": "UNIT_TYPE_POLYMORPHED",
        "description": "ConvertUnitType(22)",
        "prefix": "UNIT_TYPE_POLYMORPHED"
    },
    "UNIT_TYPE_SLEEPING": {
        "body": "UNIT_TYPE_SLEEPING",
        "description": "ConvertUnitType(23)",
        "prefix": "UNIT_TYPE_SLEEPING"
    },
    "UNIT_TYPE_RESISTANT": {
        "body": "UNIT_TYPE_RESISTANT",
        "description": "ConvertUnitType(24)",
        "prefix": "UNIT_TYPE_RESISTANT"
    },
    "UNIT_TYPE_ETHEREAL": {
        "body": "UNIT_TYPE_ETHEREAL",
        "description": "ConvertUnitType(25)",
        "prefix": "UNIT_TYPE_ETHEREAL"
    },
    "UNIT_TYPE_MAGIC_IMMUNE": {
        "body": "UNIT_TYPE_MAGIC_IMMUNE",
        "description": "ConvertUnitType(26)",
        "prefix": "UNIT_TYPE_MAGIC_IMMUNE"
    },
    "ITEM_TYPE_PERMANENT": {
        "body": "ITEM_TYPE_PERMANENT",
        "description": "ConvertItemType(0)",
        "prefix": "ITEM_TYPE_PERMANENT"
    },
    "ITEM_TYPE_CHARGED": {
        "body": "ITEM_TYPE_CHARGED",
        "description": "ConvertItemType(1)",
        "prefix": "ITEM_TYPE_CHARGED"
    },
    "ITEM_TYPE_POWERUP": {
        "body": "ITEM_TYPE_POWERUP",
        "description": "ConvertItemType(2)",
        "prefix": "ITEM_TYPE_POWERUP"
    },
    "ITEM_TYPE_ARTIFACT": {
        "body": "ITEM_TYPE_ARTIFACT",
        "description": "ConvertItemType(3)",
        "prefix": "ITEM_TYPE_ARTIFACT"
    },
    "ITEM_TYPE_PURCHASABLE": {
        "body": "ITEM_TYPE_PURCHASABLE",
        "description": "ConvertItemType(4)",
        "prefix": "ITEM_TYPE_PURCHASABLE"
    },
    "ITEM_TYPE_CAMPAIGN": {
        "body": "ITEM_TYPE_CAMPAIGN",
        "description": "ConvertItemType(5)",
        "prefix": "ITEM_TYPE_CAMPAIGN"
    },
    "ITEM_TYPE_MISCELLANEOUS": {
        "body": "ITEM_TYPE_MISCELLANEOUS",
        "description": "ConvertItemType(6)",
        "prefix": "ITEM_TYPE_MISCELLANEOUS"
    },
    "ITEM_TYPE_UNKNOWN": {
        "body": "ITEM_TYPE_UNKNOWN",
        "description": "ConvertItemType(7)",
        "prefix": "ITEM_TYPE_UNKNOWN"
    },
    "ITEM_TYPE_ANY": {
        "body": "ITEM_TYPE_ANY",
        "description": "ConvertItemType(8)",
        "prefix": "ITEM_TYPE_ANY"
    },
    "ITEM_TYPE_TOME": {
        "body": "ITEM_TYPE_TOME",
        "description": "ConvertItemType(2)",
        "prefix": "ITEM_TYPE_TOME"
    },
    "CAMERA_FIELD_TARGET_DISTANCE": {
        "body": "CAMERA_FIELD_TARGET_DISTANCE",
        "description": "ConvertCameraField(0)",
        "prefix": "CAMERA_FIELD_TARGET_DISTANCE"
    },
    "CAMERA_FIELD_FARZ": {
        "body": "CAMERA_FIELD_FARZ",
        "description": "ConvertCameraField(1)",
        "prefix": "CAMERA_FIELD_FARZ"
    },
    "CAMERA_FIELD_ANGLE_OF_ATTACK": {
        "body": "CAMERA_FIELD_ANGLE_OF_ATTACK",
        "description": "ConvertCameraField(2)",
        "prefix": "CAMERA_FIELD_ANGLE_OF_ATTACK"
    },
    "CAMERA_FIELD_FIELD_OF_VIEW": {
        "body": "CAMERA_FIELD_FIELD_OF_VIEW",
        "description": "ConvertCameraField(3)",
        "prefix": "CAMERA_FIELD_FIELD_OF_VIEW"
    },
    "CAMERA_FIELD_ROLL": {
        "body": "CAMERA_FIELD_ROLL",
        "description": "ConvertCameraField(4)",
        "prefix": "CAMERA_FIELD_ROLL"
    },
    "CAMERA_FIELD_ROTATION": {
        "body": "CAMERA_FIELD_ROTATION",
        "description": "ConvertCameraField(5)",
        "prefix": "CAMERA_FIELD_ROTATION"
    },
    "CAMERA_FIELD_ZOFFSET": {
        "body": "CAMERA_FIELD_ZOFFSET",
        "description": "ConvertCameraField(6)",
        "prefix": "CAMERA_FIELD_ZOFFSET"
    },
    "CAMERA_FIELD_NEARZ": {
        "body": "CAMERA_FIELD_NEARZ",
        "description": "ConvertCameraField(7)",
        "prefix": "CAMERA_FIELD_NEARZ"
    },
    "CAMERA_FIELD_LOCAL_PITCH": {
        "body": "CAMERA_FIELD_LOCAL_PITCH",
        "description": "ConvertCameraField(8)",
        "prefix": "CAMERA_FIELD_LOCAL_PITCH"
    },
    "CAMERA_FIELD_LOCAL_YAW": {
        "body": "CAMERA_FIELD_LOCAL_YAW",
        "description": "ConvertCameraField(9)",
        "prefix": "CAMERA_FIELD_LOCAL_YAW"
    },
    "CAMERA_FIELD_LOCAL_ROLL": {
        "body": "CAMERA_FIELD_LOCAL_ROLL",
        "description": "ConvertCameraField(10)",
        "prefix": "CAMERA_FIELD_LOCAL_ROLL"
    },
    "BLEND_MODE_NONE": {
        "body": "BLEND_MODE_NONE",
        "description": "ConvertBlendMode(0)",
        "prefix": "BLEND_MODE_NONE"
    },
    "BLEND_MODE_DONT_CARE": {
        "body": "BLEND_MODE_DONT_CARE",
        "description": "ConvertBlendMode(0)",
        "prefix": "BLEND_MODE_DONT_CARE"
    },
    "BLEND_MODE_KEYALPHA": {
        "body": "BLEND_MODE_KEYALPHA",
        "description": "ConvertBlendMode(1)",
        "prefix": "BLEND_MODE_KEYALPHA"
    },
    "BLEND_MODE_BLEND": {
        "body": "BLEND_MODE_BLEND",
        "description": "ConvertBlendMode(2)",
        "prefix": "BLEND_MODE_BLEND"
    },
    "BLEND_MODE_ADDITIVE": {
        "body": "BLEND_MODE_ADDITIVE",
        "description": "ConvertBlendMode(3)",
        "prefix": "BLEND_MODE_ADDITIVE"
    },
    "BLEND_MODE_MODULATE": {
        "body": "BLEND_MODE_MODULATE",
        "description": "ConvertBlendMode(4)",
        "prefix": "BLEND_MODE_MODULATE"
    },
    "BLEND_MODE_MODULATE_2X": {
        "body": "BLEND_MODE_MODULATE_2X",
        "description": "ConvertBlendMode(5)",
        "prefix": "BLEND_MODE_MODULATE_2X"
    },
    "RARITY_FREQUENT": {
        "body": "RARITY_FREQUENT",
        "description": "ConvertRarityControl(0)",
        "prefix": "RARITY_FREQUENT"
    },
    "RARITY_RARE": {
        "body": "RARITY_RARE",
        "description": "ConvertRarityControl(1)",
        "prefix": "RARITY_RARE"
    },
    "TEXMAP_FLAG_NONE": {
        "body": "TEXMAP_FLAG_NONE",
        "description": "ConvertTexMapFlags(0)",
        "prefix": "TEXMAP_FLAG_NONE"
    },
    "TEXMAP_FLAG_WRAP_U": {
        "body": "TEXMAP_FLAG_WRAP_U",
        "description": "ConvertTexMapFlags(1)",
        "prefix": "TEXMAP_FLAG_WRAP_U"
    },
    "TEXMAP_FLAG_WRAP_V": {
        "body": "TEXMAP_FLAG_WRAP_V",
        "description": "ConvertTexMapFlags(2)",
        "prefix": "TEXMAP_FLAG_WRAP_V"
    },
    "TEXMAP_FLAG_WRAP_UV": {
        "body": "TEXMAP_FLAG_WRAP_UV",
        "description": "ConvertTexMapFlags(3)",
        "prefix": "TEXMAP_FLAG_WRAP_UV"
    },
    "FOG_OF_WAR_MASKED": {
        "body": "FOG_OF_WAR_MASKED",
        "description": "ConvertFogState(1)",
        "prefix": "FOG_OF_WAR_MASKED"
    },
    "FOG_OF_WAR_FOGGED": {
        "body": "FOG_OF_WAR_FOGGED",
        "description": "ConvertFogState(2)",
        "prefix": "FOG_OF_WAR_FOGGED"
    },
    "FOG_OF_WAR_VISIBLE": {
        "body": "FOG_OF_WAR_VISIBLE",
        "description": "ConvertFogState(4)",
        "prefix": "FOG_OF_WAR_VISIBLE"
    },
    "CAMERA_MARGIN_LEFT": {
        "body": "CAMERA_MARGIN_LEFT",
        "description": "0",
        "prefix": "CAMERA_MARGIN_LEFT"
    },
    "CAMERA_MARGIN_RIGHT": {
        "body": "CAMERA_MARGIN_RIGHT",
        "description": "1",
        "prefix": "CAMERA_MARGIN_RIGHT"
    },
    "CAMERA_MARGIN_TOP": {
        "body": "CAMERA_MARGIN_TOP",
        "description": "2",
        "prefix": "CAMERA_MARGIN_TOP"
    },
    "CAMERA_MARGIN_BOTTOM": {
        "body": "CAMERA_MARGIN_BOTTOM",
        "description": "3",
        "prefix": "CAMERA_MARGIN_BOTTOM"
    },
    "EFFECT_TYPE_EFFECT": {
        "body": "EFFECT_TYPE_EFFECT",
        "description": "ConvertEffectType(0)",
        "prefix": "EFFECT_TYPE_EFFECT"
    },
    "EFFECT_TYPE_TARGET": {
        "body": "EFFECT_TYPE_TARGET",
        "description": "ConvertEffectType(1)",
        "prefix": "EFFECT_TYPE_TARGET"
    },
    "EFFECT_TYPE_CASTER": {
        "body": "EFFECT_TYPE_CASTER",
        "description": "ConvertEffectType(2)",
        "prefix": "EFFECT_TYPE_CASTER"
    },
    "EFFECT_TYPE_SPECIAL": {
        "body": "EFFECT_TYPE_SPECIAL",
        "description": "ConvertEffectType(3)",
        "prefix": "EFFECT_TYPE_SPECIAL"
    },
    "EFFECT_TYPE_AREA_EFFECT": {
        "body": "EFFECT_TYPE_AREA_EFFECT",
        "description": "ConvertEffectType(4)",
        "prefix": "EFFECT_TYPE_AREA_EFFECT"
    },
    "EFFECT_TYPE_MISSILE": {
        "body": "EFFECT_TYPE_MISSILE",
        "description": "ConvertEffectType(5)",
        "prefix": "EFFECT_TYPE_MISSILE"
    },
    "EFFECT_TYPE_LIGHTNING": {
        "body": "EFFECT_TYPE_LIGHTNING",
        "description": "ConvertEffectType(6)",
        "prefix": "EFFECT_TYPE_LIGHTNING"
    },
    "SOUND_TYPE_EFFECT": {
        "body": "SOUND_TYPE_EFFECT",
        "description": "ConvertSoundType(0)",
        "prefix": "SOUND_TYPE_EFFECT"
    },
    "SOUND_TYPE_EFFECT_LOOPED": {
        "body": "SOUND_TYPE_EFFECT_LOOPED",
        "description": "ConvertSoundType(1)",
        "prefix": "SOUND_TYPE_EFFECT_LOOPED"
    },
    "ORIGIN_FRAME_GAME_UI": {
        "body": "ORIGIN_FRAME_GAME_UI",
        "description": "ConvertOriginFrameType(0)",
        "prefix": "ORIGIN_FRAME_GAME_UI"
    },
    "ORIGIN_FRAME_COMMAND_BUTTON": {
        "body": "ORIGIN_FRAME_COMMAND_BUTTON",
        "description": "ConvertOriginFrameType(1)",
        "prefix": "ORIGIN_FRAME_COMMAND_BUTTON"
    },
    "ORIGIN_FRAME_HERO_BAR": {
        "body": "ORIGIN_FRAME_HERO_BAR",
        "description": "ConvertOriginFrameType(2)",
        "prefix": "ORIGIN_FRAME_HERO_BAR"
    },
    "ORIGIN_FRAME_HERO_BUTTON": {
        "body": "ORIGIN_FRAME_HERO_BUTTON",
        "description": "ConvertOriginFrameType(3)",
        "prefix": "ORIGIN_FRAME_HERO_BUTTON"
    },
    "ORIGIN_FRAME_HERO_HP_BAR": {
        "body": "ORIGIN_FRAME_HERO_HP_BAR",
        "description": "ConvertOriginFrameType(4)",
        "prefix": "ORIGIN_FRAME_HERO_HP_BAR"
    },
    "ORIGIN_FRAME_HERO_MANA_BAR": {
        "body": "ORIGIN_FRAME_HERO_MANA_BAR",
        "description": "ConvertOriginFrameType(5)",
        "prefix": "ORIGIN_FRAME_HERO_MANA_BAR"
    },
    "ORIGIN_FRAME_HERO_BUTTON_INDICATOR": {
        "body": "ORIGIN_FRAME_HERO_BUTTON_INDICATOR",
        "description": "ConvertOriginFrameType(6)",
        "prefix": "ORIGIN_FRAME_HERO_BUTTON_INDICATOR"
    },
    "ORIGIN_FRAME_ITEM_BUTTON": {
        "body": "ORIGIN_FRAME_ITEM_BUTTON",
        "description": "ConvertOriginFrameType(7)",
        "prefix": "ORIGIN_FRAME_ITEM_BUTTON"
    },
    "ORIGIN_FRAME_MINIMAP": {
        "body": "ORIGIN_FRAME_MINIMAP",
        "description": "ConvertOriginFrameType(8)",
        "prefix": "ORIGIN_FRAME_MINIMAP"
    },
    "ORIGIN_FRAME_MINIMAP_BUTTON": {
        "body": "ORIGIN_FRAME_MINIMAP_BUTTON",
        "description": "ConvertOriginFrameType(9)",
        "prefix": "ORIGIN_FRAME_MINIMAP_BUTTON"
    },
    "ORIGIN_FRAME_SYSTEM_BUTTON": {
        "body": "ORIGIN_FRAME_SYSTEM_BUTTON",
        "description": "ConvertOriginFrameType(10)",
        "prefix": "ORIGIN_FRAME_SYSTEM_BUTTON"
    },
    "ORIGIN_FRAME_TOOLTIP": {
        "body": "ORIGIN_FRAME_TOOLTIP",
        "description": "ConvertOriginFrameType(11)",
        "prefix": "ORIGIN_FRAME_TOOLTIP"
    },
    "ORIGIN_FRAME_UBERTOOLTIP": {
        "body": "ORIGIN_FRAME_UBERTOOLTIP",
        "description": "ConvertOriginFrameType(12)",
        "prefix": "ORIGIN_FRAME_UBERTOOLTIP"
    },
    "ORIGIN_FRAME_CHAT_MSG": {
        "body": "ORIGIN_FRAME_CHAT_MSG",
        "description": "ConvertOriginFrameType(13)",
        "prefix": "ORIGIN_FRAME_CHAT_MSG"
    },
    "ORIGIN_FRAME_UNIT_MSG": {
        "body": "ORIGIN_FRAME_UNIT_MSG",
        "description": "ConvertOriginFrameType(14)",
        "prefix": "ORIGIN_FRAME_UNIT_MSG"
    },
    "ORIGIN_FRAME_TOP_MSG": {
        "body": "ORIGIN_FRAME_TOP_MSG",
        "description": "ConvertOriginFrameType(15)",
        "prefix": "ORIGIN_FRAME_TOP_MSG"
    },
    "ORIGIN_FRAME_PORTRAIT": {
        "body": "ORIGIN_FRAME_PORTRAIT",
        "description": "ConvertOriginFrameType(16)",
        "prefix": "ORIGIN_FRAME_PORTRAIT"
    },
    "ORIGIN_FRAME_WORLD_FRAME": {
        "body": "ORIGIN_FRAME_WORLD_FRAME",
        "description": "ConvertOriginFrameType(17)",
        "prefix": "ORIGIN_FRAME_WORLD_FRAME"
    },
    "FRAMEPOINT_TOPLEFT": {
        "body": "FRAMEPOINT_TOPLEFT",
        "description": "ConvertFramePointType(0)",
        "prefix": "FRAMEPOINT_TOPLEFT"
    },
    "FRAMEPOINT_TOP": {
        "body": "FRAMEPOINT_TOP",
        "description": "ConvertFramePointType(1)",
        "prefix": "FRAMEPOINT_TOP"
    },
    "FRAMEPOINT_TOPRIGHT": {
        "body": "FRAMEPOINT_TOPRIGHT",
        "description": "ConvertFramePointType(2)",
        "prefix": "FRAMEPOINT_TOPRIGHT"
    },
    "FRAMEPOINT_LEFT": {
        "body": "FRAMEPOINT_LEFT",
        "description": "ConvertFramePointType(3)",
        "prefix": "FRAMEPOINT_LEFT"
    },
    "FRAMEPOINT_CENTER": {
        "body": "FRAMEPOINT_CENTER",
        "description": "ConvertFramePointType(4)",
        "prefix": "FRAMEPOINT_CENTER"
    },
    "FRAMEPOINT_RIGHT": {
        "body": "FRAMEPOINT_RIGHT",
        "description": "ConvertFramePointType(5)",
        "prefix": "FRAMEPOINT_RIGHT"
    },
    "FRAMEPOINT_BOTTOMLEFT": {
        "body": "FRAMEPOINT_BOTTOMLEFT",
        "description": "ConvertFramePointType(6)",
        "prefix": "FRAMEPOINT_BOTTOMLEFT"
    },
    "FRAMEPOINT_BOTTOM": {
        "body": "FRAMEPOINT_BOTTOM",
        "description": "ConvertFramePointType(7)",
        "prefix": "FRAMEPOINT_BOTTOM"
    },
    "FRAMEPOINT_BOTTOMRIGHT": {
        "body": "FRAMEPOINT_BOTTOMRIGHT",
        "description": "ConvertFramePointType(8)",
        "prefix": "FRAMEPOINT_BOTTOMRIGHT"
    },
    "TEXT_JUSTIFY_TOP": {
        "body": "TEXT_JUSTIFY_TOP",
        "description": "ConvertTextAlignType(0)",
        "prefix": "TEXT_JUSTIFY_TOP"
    },
    "TEXT_JUSTIFY_MIDDLE": {
        "body": "TEXT_JUSTIFY_MIDDLE",
        "description": "ConvertTextAlignType(1)",
        "prefix": "TEXT_JUSTIFY_MIDDLE"
    },
    "TEXT_JUSTIFY_BOTTOM": {
        "body": "TEXT_JUSTIFY_BOTTOM",
        "description": "ConvertTextAlignType(2)",
        "prefix": "TEXT_JUSTIFY_BOTTOM"
    },
    "TEXT_JUSTIFY_LEFT": {
        "body": "TEXT_JUSTIFY_LEFT",
        "description": "ConvertTextAlignType(3)",
        "prefix": "TEXT_JUSTIFY_LEFT"
    },
    "TEXT_JUSTIFY_CENTER": {
        "body": "TEXT_JUSTIFY_CENTER",
        "description": "ConvertTextAlignType(4)",
        "prefix": "TEXT_JUSTIFY_CENTER"
    },
    "TEXT_JUSTIFY_RIGHT": {
        "body": "TEXT_JUSTIFY_RIGHT",
        "description": "ConvertTextAlignType(5)",
        "prefix": "TEXT_JUSTIFY_RIGHT"
    },
    "FRAMEEVENT_CONTROL_CLICK": {
        "body": "FRAMEEVENT_CONTROL_CLICK",
        "description": "ConvertFrameEventType(1)",
        "prefix": "FRAMEEVENT_CONTROL_CLICK"
    },
    "FRAMEEVENT_MOUSE_ENTER": {
        "body": "FRAMEEVENT_MOUSE_ENTER",
        "description": "ConvertFrameEventType(2)",
        "prefix": "FRAMEEVENT_MOUSE_ENTER"
    },
    "FRAMEEVENT_MOUSE_LEAVE": {
        "body": "FRAMEEVENT_MOUSE_LEAVE",
        "description": "ConvertFrameEventType(3)",
        "prefix": "FRAMEEVENT_MOUSE_LEAVE"
    },
    "FRAMEEVENT_MOUSE_UP": {
        "body": "FRAMEEVENT_MOUSE_UP",
        "description": "ConvertFrameEventType(4)",
        "prefix": "FRAMEEVENT_MOUSE_UP"
    },
    "FRAMEEVENT_MOUSE_DOWN": {
        "body": "FRAMEEVENT_MOUSE_DOWN",
        "description": "ConvertFrameEventType(5)",
        "prefix": "FRAMEEVENT_MOUSE_DOWN"
    },
    "FRAMEEVENT_MOUSE_WHEEL": {
        "body": "FRAMEEVENT_MOUSE_WHEEL",
        "description": "ConvertFrameEventType(6)",
        "prefix": "FRAMEEVENT_MOUSE_WHEEL"
    },
    "FRAMEEVENT_CHECKBOX_CHECKED": {
        "body": "FRAMEEVENT_CHECKBOX_CHECKED",
        "description": "ConvertFrameEventType(7)",
        "prefix": "FRAMEEVENT_CHECKBOX_CHECKED"
    },
    "FRAMEEVENT_CHECKBOX_UNCHECKED": {
        "body": "FRAMEEVENT_CHECKBOX_UNCHECKED",
        "description": "ConvertFrameEventType(8)",
        "prefix": "FRAMEEVENT_CHECKBOX_UNCHECKED"
    },
    "FRAMEEVENT_EDITBOX_TEXT_CHANGED": {
        "body": "FRAMEEVENT_EDITBOX_TEXT_CHANGED",
        "description": "ConvertFrameEventType(9)",
        "prefix": "FRAMEEVENT_EDITBOX_TEXT_CHANGED"
    },
    "FRAMEEVENT_POPUPMENU_ITEM_CHANGED": {
        "body": "FRAMEEVENT_POPUPMENU_ITEM_CHANGED",
        "description": "ConvertFrameEventType(10)",
        "prefix": "FRAMEEVENT_POPUPMENU_ITEM_CHANGED"
    },
    "FRAMEEVENT_MOUSE_DOUBLECLICK": {
        "body": "FRAMEEVENT_MOUSE_DOUBLECLICK",
        "description": "ConvertFrameEventType(11)",
        "prefix": "FRAMEEVENT_MOUSE_DOUBLECLICK"
    },
    "FRAMEEVENT_SPRITE_ANIM_UPDATE": {
        "body": "FRAMEEVENT_SPRITE_ANIM_UPDATE",
        "description": "ConvertFrameEventType(12)",
        "prefix": "FRAMEEVENT_SPRITE_ANIM_UPDATE"
    },
    "FRAMEEVENT_SLIDER_VALUE_CHANGED": {
        "body": "FRAMEEVENT_SLIDER_VALUE_CHANGED",
        "description": "ConvertFrameEventType(13)",
        "prefix": "FRAMEEVENT_SLIDER_VALUE_CHANGED"
    },
    "FRAMEEVENT_DIALOG_CANCEL": {
        "body": "FRAMEEVENT_DIALOG_CANCEL",
        "description": "ConvertFrameEventType(14)",
        "prefix": "FRAMEEVENT_DIALOG_CANCEL"
    },
    "FRAMEEVENT_DIALOG_ACCEPT": {
        "body": "FRAMEEVENT_DIALOG_ACCEPT",
        "description": "ConvertFrameEventType(15)",
        "prefix": "FRAMEEVENT_DIALOG_ACCEPT"
    },
    "FRAMEEVENT_EDITBOX_ENTER": {
        "body": "FRAMEEVENT_EDITBOX_ENTER",
        "description": "ConvertFrameEventType(16)",
        "prefix": "FRAMEEVENT_EDITBOX_ENTER"
    },
    "OSKEY_BACKSPACE": {
        "body": "OSKEY_BACKSPACE",
        "description": "ConvertOsKeyType($08)",
        "prefix": "OSKEY_BACKSPACE"
    },
    "OSKEY_TAB": {
        "body": "OSKEY_TAB",
        "description": "ConvertOsKeyType($09)",
        "prefix": "OSKEY_TAB"
    },
    "OSKEY_CLEAR": {
        "body": "OSKEY_CLEAR",
        "description": "ConvertOsKeyType($0C)",
        "prefix": "OSKEY_CLEAR"
    },
    "OSKEY_RETURN": {
        "body": "OSKEY_RETURN",
        "description": "ConvertOsKeyType($0D)",
        "prefix": "OSKEY_RETURN"
    },
    "OSKEY_SHIFT": {
        "body": "OSKEY_SHIFT",
        "description": "ConvertOsKeyType($10)",
        "prefix": "OSKEY_SHIFT"
    },
    "OSKEY_CONTROL": {
        "body": "OSKEY_CONTROL",
        "description": "ConvertOsKeyType($11)",
        "prefix": "OSKEY_CONTROL"
    },
    "OSKEY_ALT": {
        "body": "OSKEY_ALT",
        "description": "ConvertOsKeyType($12)",
        "prefix": "OSKEY_ALT"
    },
    "OSKEY_PAUSE": {
        "body": "OSKEY_PAUSE",
        "description": "ConvertOsKeyType($13)",
        "prefix": "OSKEY_PAUSE"
    },
    "OSKEY_CAPSLOCK": {
        "body": "OSKEY_CAPSLOCK",
        "description": "ConvertOsKeyType($14)",
        "prefix": "OSKEY_CAPSLOCK"
    },
    "OSKEY_KANA": {
        "body": "OSKEY_KANA",
        "description": "ConvertOsKeyType($15)",
        "prefix": "OSKEY_KANA"
    },
    "OSKEY_HANGUL": {
        "body": "OSKEY_HANGUL",
        "description": "ConvertOsKeyType($15)",
        "prefix": "OSKEY_HANGUL"
    },
    "OSKEY_JUNJA": {
        "body": "OSKEY_JUNJA",
        "description": "ConvertOsKeyType($17)",
        "prefix": "OSKEY_JUNJA"
    },
    "OSKEY_FINAL": {
        "body": "OSKEY_FINAL",
        "description": "ConvertOsKeyType($18)",
        "prefix": "OSKEY_FINAL"
    },
    "OSKEY_HANJA": {
        "body": "OSKEY_HANJA",
        "description": "ConvertOsKeyType($19)",
        "prefix": "OSKEY_HANJA"
    },
    "OSKEY_KANJI": {
        "body": "OSKEY_KANJI",
        "description": "ConvertOsKeyType($19)",
        "prefix": "OSKEY_KANJI"
    },
    "OSKEY_ESCAPE": {
        "body": "OSKEY_ESCAPE",
        "description": "ConvertOsKeyType($1B)",
        "prefix": "OSKEY_ESCAPE"
    },
    "OSKEY_CONVERT": {
        "body": "OSKEY_CONVERT",
        "description": "ConvertOsKeyType($1C)",
        "prefix": "OSKEY_CONVERT"
    },
    "OSKEY_NONCONVERT": {
        "body": "OSKEY_NONCONVERT",
        "description": "ConvertOsKeyType($1D)",
        "prefix": "OSKEY_NONCONVERT"
    },
    "OSKEY_ACCEPT": {
        "body": "OSKEY_ACCEPT",
        "description": "ConvertOsKeyType($1E)",
        "prefix": "OSKEY_ACCEPT"
    },
    "OSKEY_MODECHANGE": {
        "body": "OSKEY_MODECHANGE",
        "description": "ConvertOsKeyType($1F)",
        "prefix": "OSKEY_MODECHANGE"
    },
    "OSKEY_SPACE": {
        "body": "OSKEY_SPACE",
        "description": "ConvertOsKeyType($20)",
        "prefix": "OSKEY_SPACE"
    },
    "OSKEY_PAGEUP": {
        "body": "OSKEY_PAGEUP",
        "description": "ConvertOsKeyType($21)",
        "prefix": "OSKEY_PAGEUP"
    },
    "OSKEY_PAGEDOWN": {
        "body": "OSKEY_PAGEDOWN",
        "description": "ConvertOsKeyType($22)",
        "prefix": "OSKEY_PAGEDOWN"
    },
    "OSKEY_END": {
        "body": "OSKEY_END",
        "description": "ConvertOsKeyType($23)",
        "prefix": "OSKEY_END"
    },
    "OSKEY_HOME": {
        "body": "OSKEY_HOME",
        "description": "ConvertOsKeyType($24)",
        "prefix": "OSKEY_HOME"
    },
    "OSKEY_LEFT": {
        "body": "OSKEY_LEFT",
        "description": "ConvertOsKeyType($25)",
        "prefix": "OSKEY_LEFT"
    },
    "OSKEY_UP": {
        "body": "OSKEY_UP",
        "description": "ConvertOsKeyType($26)",
        "prefix": "OSKEY_UP"
    },
    "OSKEY_RIGHT": {
        "body": "OSKEY_RIGHT",
        "description": "ConvertOsKeyType($27)",
        "prefix": "OSKEY_RIGHT"
    },
    "OSKEY_DOWN": {
        "body": "OSKEY_DOWN",
        "description": "ConvertOsKeyType($28)",
        "prefix": "OSKEY_DOWN"
    },
    "OSKEY_SELECT": {
        "body": "OSKEY_SELECT",
        "description": "ConvertOsKeyType($29)",
        "prefix": "OSKEY_SELECT"
    },
    "OSKEY_PRINT": {
        "body": "OSKEY_PRINT",
        "description": "ConvertOsKeyType($2A)",
        "prefix": "OSKEY_PRINT"
    },
    "OSKEY_EXECUTE": {
        "body": "OSKEY_EXECUTE",
        "description": "ConvertOsKeyType($2B)",
        "prefix": "OSKEY_EXECUTE"
    },
    "OSKEY_PRINTSCREEN": {
        "body": "OSKEY_PRINTSCREEN",
        "description": "ConvertOsKeyType($2C)",
        "prefix": "OSKEY_PRINTSCREEN"
    },
    "OSKEY_INSERT": {
        "body": "OSKEY_INSERT",
        "description": "ConvertOsKeyType($2D)",
        "prefix": "OSKEY_INSERT"
    },
    "OSKEY_DELETE": {
        "body": "OSKEY_DELETE",
        "description": "ConvertOsKeyType($2E)",
        "prefix": "OSKEY_DELETE"
    },
    "OSKEY_HELP": {
        "body": "OSKEY_HELP",
        "description": "ConvertOsKeyType($2F)",
        "prefix": "OSKEY_HELP"
    },
    "OSKEY_0": {
        "body": "OSKEY_0",
        "description": "ConvertOsKeyType($30)",
        "prefix": "OSKEY_0"
    },
    "OSKEY_1": {
        "body": "OSKEY_1",
        "description": "ConvertOsKeyType($31)",
        "prefix": "OSKEY_1"
    },
    "OSKEY_2": {
        "body": "OSKEY_2",
        "description": "ConvertOsKeyType($32)",
        "prefix": "OSKEY_2"
    },
    "OSKEY_3": {
        "body": "OSKEY_3",
        "description": "ConvertOsKeyType($33)",
        "prefix": "OSKEY_3"
    },
    "OSKEY_4": {
        "body": "OSKEY_4",
        "description": "ConvertOsKeyType($34)",
        "prefix": "OSKEY_4"
    },
    "OSKEY_5": {
        "body": "OSKEY_5",
        "description": "ConvertOsKeyType($35)",
        "prefix": "OSKEY_5"
    },
    "OSKEY_6": {
        "body": "OSKEY_6",
        "description": "ConvertOsKeyType($36)",
        "prefix": "OSKEY_6"
    },
    "OSKEY_7": {
        "body": "OSKEY_7",
        "description": "ConvertOsKeyType($37)",
        "prefix": "OSKEY_7"
    },
    "OSKEY_8": {
        "body": "OSKEY_8",
        "description": "ConvertOsKeyType($38)",
        "prefix": "OSKEY_8"
    },
    "OSKEY_9": {
        "body": "OSKEY_9",
        "description": "ConvertOsKeyType($39)",
        "prefix": "OSKEY_9"
    },
    "OSKEY_A": {
        "body": "OSKEY_A",
        "description": "ConvertOsKeyType($41)",
        "prefix": "OSKEY_A"
    },
    "OSKEY_B": {
        "body": "OSKEY_B",
        "description": "ConvertOsKeyType($42)",
        "prefix": "OSKEY_B"
    },
    "OSKEY_C": {
        "body": "OSKEY_C",
        "description": "ConvertOsKeyType($43)",
        "prefix": "OSKEY_C"
    },
    "OSKEY_D": {
        "body": "OSKEY_D",
        "description": "ConvertOsKeyType($44)",
        "prefix": "OSKEY_D"
    },
    "OSKEY_E": {
        "body": "OSKEY_E",
        "description": "ConvertOsKeyType($45)",
        "prefix": "OSKEY_E"
    },
    "OSKEY_F": {
        "body": "OSKEY_F",
        "description": "ConvertOsKeyType($46)",
        "prefix": "OSKEY_F"
    },
    "OSKEY_G": {
        "body": "OSKEY_G",
        "description": "ConvertOsKeyType($47)",
        "prefix": "OSKEY_G"
    },
    "OSKEY_H": {
        "body": "OSKEY_H",
        "description": "ConvertOsKeyType($48)",
        "prefix": "OSKEY_H"
    },
    "OSKEY_I": {
        "body": "OSKEY_I",
        "description": "ConvertOsKeyType($49)",
        "prefix": "OSKEY_I"
    },
    "OSKEY_J": {
        "body": "OSKEY_J",
        "description": "ConvertOsKeyType($4A)",
        "prefix": "OSKEY_J"
    },
    "OSKEY_K": {
        "body": "OSKEY_K",
        "description": "ConvertOsKeyType($4B)",
        "prefix": "OSKEY_K"
    },
    "OSKEY_L": {
        "body": "OSKEY_L",
        "description": "ConvertOsKeyType($4C)",
        "prefix": "OSKEY_L"
    },
    "OSKEY_M": {
        "body": "OSKEY_M",
        "description": "ConvertOsKeyType($4D)",
        "prefix": "OSKEY_M"
    },
    "OSKEY_N": {
        "body": "OSKEY_N",
        "description": "ConvertOsKeyType($4E)",
        "prefix": "OSKEY_N"
    },
    "OSKEY_O": {
        "body": "OSKEY_O",
        "description": "ConvertOsKeyType($4F)",
        "prefix": "OSKEY_O"
    },
    "OSKEY_P": {
        "body": "OSKEY_P",
        "description": "ConvertOsKeyType($50)",
        "prefix": "OSKEY_P"
    },
    "OSKEY_Q": {
        "body": "OSKEY_Q",
        "description": "ConvertOsKeyType($51)",
        "prefix": "OSKEY_Q"
    },
    "OSKEY_R": {
        "body": "OSKEY_R",
        "description": "ConvertOsKeyType($52)",
        "prefix": "OSKEY_R"
    },
    "OSKEY_S": {
        "body": "OSKEY_S",
        "description": "ConvertOsKeyType($53)",
        "prefix": "OSKEY_S"
    },
    "OSKEY_T": {
        "body": "OSKEY_T",
        "description": "ConvertOsKeyType($54)",
        "prefix": "OSKEY_T"
    },
    "OSKEY_U": {
        "body": "OSKEY_U",
        "description": "ConvertOsKeyType($55)",
        "prefix": "OSKEY_U"
    },
    "OSKEY_V": {
        "body": "OSKEY_V",
        "description": "ConvertOsKeyType($56)",
        "prefix": "OSKEY_V"
    },
    "OSKEY_W": {
        "body": "OSKEY_W",
        "description": "ConvertOsKeyType($57)",
        "prefix": "OSKEY_W"
    },
    "OSKEY_X": {
        "body": "OSKEY_X",
        "description": "ConvertOsKeyType($58)",
        "prefix": "OSKEY_X"
    },
    "OSKEY_Y": {
        "body": "OSKEY_Y",
        "description": "ConvertOsKeyType($59)",
        "prefix": "OSKEY_Y"
    },
    "OSKEY_Z": {
        "body": "OSKEY_Z",
        "description": "ConvertOsKeyType($5A)",
        "prefix": "OSKEY_Z"
    },
    "OSKEY_LMETA": {
        "body": "OSKEY_LMETA",
        "description": "ConvertOsKeyType($5B)",
        "prefix": "OSKEY_LMETA"
    },
    "OSKEY_RMETA": {
        "body": "OSKEY_RMETA",
        "description": "ConvertOsKeyType($5C)",
        "prefix": "OSKEY_RMETA"
    },
    "OSKEY_APPS": {
        "body": "OSKEY_APPS",
        "description": "ConvertOsKeyType($5D)",
        "prefix": "OSKEY_APPS"
    },
    "OSKEY_SLEEP": {
        "body": "OSKEY_SLEEP",
        "description": "ConvertOsKeyType($5F)",
        "prefix": "OSKEY_SLEEP"
    },
    "OSKEY_NUMPAD0": {
        "body": "OSKEY_NUMPAD0",
        "description": "ConvertOsKeyType($60)",
        "prefix": "OSKEY_NUMPAD0"
    },
    "OSKEY_NUMPAD1": {
        "body": "OSKEY_NUMPAD1",
        "description": "ConvertOsKeyType($61)",
        "prefix": "OSKEY_NUMPAD1"
    },
    "OSKEY_NUMPAD2": {
        "body": "OSKEY_NUMPAD2",
        "description": "ConvertOsKeyType($62)",
        "prefix": "OSKEY_NUMPAD2"
    },
    "OSKEY_NUMPAD3": {
        "body": "OSKEY_NUMPAD3",
        "description": "ConvertOsKeyType($63)",
        "prefix": "OSKEY_NUMPAD3"
    },
    "OSKEY_NUMPAD4": {
        "body": "OSKEY_NUMPAD4",
        "description": "ConvertOsKeyType($64)",
        "prefix": "OSKEY_NUMPAD4"
    },
    "OSKEY_NUMPAD5": {
        "body": "OSKEY_NUMPAD5",
        "description": "ConvertOsKeyType($65)",
        "prefix": "OSKEY_NUMPAD5"
    },
    "OSKEY_NUMPAD6": {
        "body": "OSKEY_NUMPAD6",
        "description": "ConvertOsKeyType($66)",
        "prefix": "OSKEY_NUMPAD6"
    },
    "OSKEY_NUMPAD7": {
        "body": "OSKEY_NUMPAD7",
        "description": "ConvertOsKeyType($67)",
        "prefix": "OSKEY_NUMPAD7"
    },
    "OSKEY_NUMPAD8": {
        "body": "OSKEY_NUMPAD8",
        "description": "ConvertOsKeyType($68)",
        "prefix": "OSKEY_NUMPAD8"
    },
    "OSKEY_NUMPAD9": {
        "body": "OSKEY_NUMPAD9",
        "description": "ConvertOsKeyType($69)",
        "prefix": "OSKEY_NUMPAD9"
    },
    "OSKEY_MULTIPLY": {
        "body": "OSKEY_MULTIPLY",
        "description": "ConvertOsKeyType($6A)",
        "prefix": "OSKEY_MULTIPLY"
    },
    "OSKEY_ADD": {
        "body": "OSKEY_ADD",
        "description": "ConvertOsKeyType($6B)",
        "prefix": "OSKEY_ADD"
    },
    "OSKEY_SEPARATOR": {
        "body": "OSKEY_SEPARATOR",
        "description": "ConvertOsKeyType($6C)",
        "prefix": "OSKEY_SEPARATOR"
    },
    "OSKEY_SUBTRACT": {
        "body": "OSKEY_SUBTRACT",
        "description": "ConvertOsKeyType($6D)",
        "prefix": "OSKEY_SUBTRACT"
    },
    "OSKEY_DECIMAL": {
        "body": "OSKEY_DECIMAL",
        "description": "ConvertOsKeyType($6E)",
        "prefix": "OSKEY_DECIMAL"
    },
    "OSKEY_DIVIDE": {
        "body": "OSKEY_DIVIDE",
        "description": "ConvertOsKeyType($6F)",
        "prefix": "OSKEY_DIVIDE"
    },
    "OSKEY_F1": {
        "body": "OSKEY_F1",
        "description": "ConvertOsKeyType($70)",
        "prefix": "OSKEY_F1"
    },
    "OSKEY_F2": {
        "body": "OSKEY_F2",
        "description": "ConvertOsKeyType($71)",
        "prefix": "OSKEY_F2"
    },
    "OSKEY_F3": {
        "body": "OSKEY_F3",
        "description": "ConvertOsKeyType($72)",
        "prefix": "OSKEY_F3"
    },
    "OSKEY_F4": {
        "body": "OSKEY_F4",
        "description": "ConvertOsKeyType($73)",
        "prefix": "OSKEY_F4"
    },
    "OSKEY_F5": {
        "body": "OSKEY_F5",
        "description": "ConvertOsKeyType($74)",
        "prefix": "OSKEY_F5"
    },
    "OSKEY_F6": {
        "body": "OSKEY_F6",
        "description": "ConvertOsKeyType($75)",
        "prefix": "OSKEY_F6"
    },
    "OSKEY_F7": {
        "body": "OSKEY_F7",
        "description": "ConvertOsKeyType($76)",
        "prefix": "OSKEY_F7"
    },
    "OSKEY_F8": {
        "body": "OSKEY_F8",
        "description": "ConvertOsKeyType($77)",
        "prefix": "OSKEY_F8"
    },
    "OSKEY_F9": {
        "body": "OSKEY_F9",
        "description": "ConvertOsKeyType($78)",
        "prefix": "OSKEY_F9"
    },
    "OSKEY_F10": {
        "body": "OSKEY_F10",
        "description": "ConvertOsKeyType($79)",
        "prefix": "OSKEY_F10"
    },
    "OSKEY_F11": {
        "body": "OSKEY_F11",
        "description": "ConvertOsKeyType($7A)",
        "prefix": "OSKEY_F11"
    },
    "OSKEY_F12": {
        "body": "OSKEY_F12",
        "description": "ConvertOsKeyType($7B)",
        "prefix": "OSKEY_F12"
    },
    "OSKEY_F13": {
        "body": "OSKEY_F13",
        "description": "ConvertOsKeyType($7C)",
        "prefix": "OSKEY_F13"
    },
    "OSKEY_F14": {
        "body": "OSKEY_F14",
        "description": "ConvertOsKeyType($7D)",
        "prefix": "OSKEY_F14"
    },
    "OSKEY_F15": {
        "body": "OSKEY_F15",
        "description": "ConvertOsKeyType($7E)",
        "prefix": "OSKEY_F15"
    },
    "OSKEY_F16": {
        "body": "OSKEY_F16",
        "description": "ConvertOsKeyType($7F)",
        "prefix": "OSKEY_F16"
    },
    "OSKEY_F17": {
        "body": "OSKEY_F17",
        "description": "ConvertOsKeyType($80)",
        "prefix": "OSKEY_F17"
    },
    "OSKEY_F18": {
        "body": "OSKEY_F18",
        "description": "ConvertOsKeyType($81)",
        "prefix": "OSKEY_F18"
    },
    "OSKEY_F19": {
        "body": "OSKEY_F19",
        "description": "ConvertOsKeyType($82)",
        "prefix": "OSKEY_F19"
    },
    "OSKEY_F20": {
        "body": "OSKEY_F20",
        "description": "ConvertOsKeyType($83)",
        "prefix": "OSKEY_F20"
    },
    "OSKEY_F21": {
        "body": "OSKEY_F21",
        "description": "ConvertOsKeyType($84)",
        "prefix": "OSKEY_F21"
    },
    "OSKEY_F22": {
        "body": "OSKEY_F22",
        "description": "ConvertOsKeyType($85)",
        "prefix": "OSKEY_F22"
    },
    "OSKEY_F23": {
        "body": "OSKEY_F23",
        "description": "ConvertOsKeyType($86)",
        "prefix": "OSKEY_F23"
    },
    "OSKEY_F24": {
        "body": "OSKEY_F24",
        "description": "ConvertOsKeyType($87)",
        "prefix": "OSKEY_F24"
    },
    "OSKEY_NUMLOCK": {
        "body": "OSKEY_NUMLOCK",
        "description": "ConvertOsKeyType($90)",
        "prefix": "OSKEY_NUMLOCK"
    },
    "OSKEY_SCROLLLOCK": {
        "body": "OSKEY_SCROLLLOCK",
        "description": "ConvertOsKeyType($91)",
        "prefix": "OSKEY_SCROLLLOCK"
    },
    "OSKEY_OEM_NEC_EQUAL": {
        "body": "OSKEY_OEM_NEC_EQUAL",
        "description": "ConvertOsKeyType($92)",
        "prefix": "OSKEY_OEM_NEC_EQUAL"
    },
    "OSKEY_OEM_FJ_JISHO": {
        "body": "OSKEY_OEM_FJ_JISHO",
        "description": "ConvertOsKeyType($92)",
        "prefix": "OSKEY_OEM_FJ_JISHO"
    },
    "OSKEY_OEM_FJ_MASSHOU": {
        "body": "OSKEY_OEM_FJ_MASSHOU",
        "description": "ConvertOsKeyType($93)",
        "prefix": "OSKEY_OEM_FJ_MASSHOU"
    },
    "OSKEY_OEM_FJ_TOUROKU": {
        "body": "OSKEY_OEM_FJ_TOUROKU",
        "description": "ConvertOsKeyType($94)",
        "prefix": "OSKEY_OEM_FJ_TOUROKU"
    },
    "OSKEY_OEM_FJ_LOYA": {
        "body": "OSKEY_OEM_FJ_LOYA",
        "description": "ConvertOsKeyType($95)",
        "prefix": "OSKEY_OEM_FJ_LOYA"
    },
    "OSKEY_OEM_FJ_ROYA": {
        "body": "OSKEY_OEM_FJ_ROYA",
        "description": "ConvertOsKeyType($96)",
        "prefix": "OSKEY_OEM_FJ_ROYA"
    },
    "OSKEY_LSHIFT": {
        "body": "OSKEY_LSHIFT",
        "description": "ConvertOsKeyType($A0)",
        "prefix": "OSKEY_LSHIFT"
    },
    "OSKEY_RSHIFT": {
        "body": "OSKEY_RSHIFT",
        "description": "ConvertOsKeyType($A1)",
        "prefix": "OSKEY_RSHIFT"
    },
    "OSKEY_LCONTROL": {
        "body": "OSKEY_LCONTROL",
        "description": "ConvertOsKeyType($A2)",
        "prefix": "OSKEY_LCONTROL"
    },
    "OSKEY_RCONTROL": {
        "body": "OSKEY_RCONTROL",
        "description": "ConvertOsKeyType($A3)",
        "prefix": "OSKEY_RCONTROL"
    },
    "OSKEY_LALT": {
        "body": "OSKEY_LALT",
        "description": "ConvertOsKeyType($A4)",
        "prefix": "OSKEY_LALT"
    },
    "OSKEY_RALT": {
        "body": "OSKEY_RALT",
        "description": "ConvertOsKeyType($A5)",
        "prefix": "OSKEY_RALT"
    },
    "OSKEY_BROWSER_BACK": {
        "body": "OSKEY_BROWSER_BACK",
        "description": "ConvertOsKeyType($A6)",
        "prefix": "OSKEY_BROWSER_BACK"
    },
    "OSKEY_BROWSER_FORWARD": {
        "body": "OSKEY_BROWSER_FORWARD",
        "description": "ConvertOsKeyType($A7)",
        "prefix": "OSKEY_BROWSER_FORWARD"
    },
    "OSKEY_BROWSER_REFRESH": {
        "body": "OSKEY_BROWSER_REFRESH",
        "description": "ConvertOsKeyType($A8)",
        "prefix": "OSKEY_BROWSER_REFRESH"
    },
    "OSKEY_BROWSER_STOP": {
        "body": "OSKEY_BROWSER_STOP",
        "description": "ConvertOsKeyType($A9)",
        "prefix": "OSKEY_BROWSER_STOP"
    },
    "OSKEY_BROWSER_SEARCH": {
        "body": "OSKEY_BROWSER_SEARCH",
        "description": "ConvertOsKeyType($AA)",
        "prefix": "OSKEY_BROWSER_SEARCH"
    },
    "OSKEY_BROWSER_FAVORITES": {
        "body": "OSKEY_BROWSER_FAVORITES",
        "description": "ConvertOsKeyType($AB)",
        "prefix": "OSKEY_BROWSER_FAVORITES"
    },
    "OSKEY_BROWSER_HOME": {
        "body": "OSKEY_BROWSER_HOME",
        "description": "ConvertOsKeyType($AC)",
        "prefix": "OSKEY_BROWSER_HOME"
    },
    "OSKEY_VOLUME_MUTE": {
        "body": "OSKEY_VOLUME_MUTE",
        "description": "ConvertOsKeyType($AD)",
        "prefix": "OSKEY_VOLUME_MUTE"
    },
    "OSKEY_VOLUME_DOWN": {
        "body": "OSKEY_VOLUME_DOWN",
        "description": "ConvertOsKeyType($AE)",
        "prefix": "OSKEY_VOLUME_DOWN"
    },
    "OSKEY_VOLUME_UP": {
        "body": "OSKEY_VOLUME_UP",
        "description": "ConvertOsKeyType($AF)",
        "prefix": "OSKEY_VOLUME_UP"
    },
    "OSKEY_MEDIA_NEXT_TRACK": {
        "body": "OSKEY_MEDIA_NEXT_TRACK",
        "description": "ConvertOsKeyType($B0)",
        "prefix": "OSKEY_MEDIA_NEXT_TRACK"
    },
    "OSKEY_MEDIA_PREV_TRACK": {
        "body": "OSKEY_MEDIA_PREV_TRACK",
        "description": "ConvertOsKeyType($B1)",
        "prefix": "OSKEY_MEDIA_PREV_TRACK"
    },
    "OSKEY_MEDIA_STOP": {
        "body": "OSKEY_MEDIA_STOP",
        "description": "ConvertOsKeyType($B2)",
        "prefix": "OSKEY_MEDIA_STOP"
    },
    "OSKEY_MEDIA_PLAY_PAUSE": {
        "body": "OSKEY_MEDIA_PLAY_PAUSE",
        "description": "ConvertOsKeyType($B3)",
        "prefix": "OSKEY_MEDIA_PLAY_PAUSE"
    },
    "OSKEY_LAUNCH_MAIL": {
        "body": "OSKEY_LAUNCH_MAIL",
        "description": "ConvertOsKeyType($B4)",
        "prefix": "OSKEY_LAUNCH_MAIL"
    },
    "OSKEY_LAUNCH_MEDIA_SELECT": {
        "body": "OSKEY_LAUNCH_MEDIA_SELECT",
        "description": "ConvertOsKeyType($B5)",
        "prefix": "OSKEY_LAUNCH_MEDIA_SELECT"
    },
    "OSKEY_LAUNCH_APP1": {
        "body": "OSKEY_LAUNCH_APP1",
        "description": "ConvertOsKeyType($B6)",
        "prefix": "OSKEY_LAUNCH_APP1"
    },
    "OSKEY_LAUNCH_APP2": {
        "body": "OSKEY_LAUNCH_APP2",
        "description": "ConvertOsKeyType($B7)",
        "prefix": "OSKEY_LAUNCH_APP2"
    },
    "OSKEY_OEM_1": {
        "body": "OSKEY_OEM_1",
        "description": "ConvertOsKeyType($BA)",
        "prefix": "OSKEY_OEM_1"
    },
    "OSKEY_OEM_PLUS": {
        "body": "OSKEY_OEM_PLUS",
        "description": "ConvertOsKeyType($BB)",
        "prefix": "OSKEY_OEM_PLUS"
    },
    "OSKEY_OEM_COMMA": {
        "body": "OSKEY_OEM_COMMA",
        "description": "ConvertOsKeyType($BC)",
        "prefix": "OSKEY_OEM_COMMA"
    },
    "OSKEY_OEM_MINUS": {
        "body": "OSKEY_OEM_MINUS",
        "description": "ConvertOsKeyType($BD)",
        "prefix": "OSKEY_OEM_MINUS"
    },
    "OSKEY_OEM_PERIOD": {
        "body": "OSKEY_OEM_PERIOD",
        "description": "ConvertOsKeyType($BE)",
        "prefix": "OSKEY_OEM_PERIOD"
    },
    "OSKEY_OEM_2": {
        "body": "OSKEY_OEM_2",
        "description": "ConvertOsKeyType($BF)",
        "prefix": "OSKEY_OEM_2"
    },
    "OSKEY_OEM_3": {
        "body": "OSKEY_OEM_3",
        "description": "ConvertOsKeyType($C0)",
        "prefix": "OSKEY_OEM_3"
    },
    "OSKEY_OEM_4": {
        "body": "OSKEY_OEM_4",
        "description": "ConvertOsKeyType($DB)",
        "prefix": "OSKEY_OEM_4"
    },
    "OSKEY_OEM_5": {
        "body": "OSKEY_OEM_5",
        "description": "ConvertOsKeyType($DC)",
        "prefix": "OSKEY_OEM_5"
    },
    "OSKEY_OEM_6": {
        "body": "OSKEY_OEM_6",
        "description": "ConvertOsKeyType($DD)",
        "prefix": "OSKEY_OEM_6"
    },
    "OSKEY_OEM_7": {
        "body": "OSKEY_OEM_7",
        "description": "ConvertOsKeyType($DE)",
        "prefix": "OSKEY_OEM_7"
    },
    "OSKEY_OEM_8": {
        "body": "OSKEY_OEM_8",
        "description": "ConvertOsKeyType($DF)",
        "prefix": "OSKEY_OEM_8"
    },
    "OSKEY_OEM_AX": {
        "body": "OSKEY_OEM_AX",
        "description": "ConvertOsKeyType($E1)",
        "prefix": "OSKEY_OEM_AX"
    },
    "OSKEY_OEM_102": {
        "body": "OSKEY_OEM_102",
        "description": "ConvertOsKeyType($E2)",
        "prefix": "OSKEY_OEM_102"
    },
    "OSKEY_ICO_HELP": {
        "body": "OSKEY_ICO_HELP",
        "description": "ConvertOsKeyType($E3)",
        "prefix": "OSKEY_ICO_HELP"
    },
    "OSKEY_ICO_00": {
        "body": "OSKEY_ICO_00",
        "description": "ConvertOsKeyType($E4)",
        "prefix": "OSKEY_ICO_00"
    },
    "OSKEY_PROCESSKEY": {
        "body": "OSKEY_PROCESSKEY",
        "description": "ConvertOsKeyType($E5)",
        "prefix": "OSKEY_PROCESSKEY"
    },
    "OSKEY_ICO_CLEAR": {
        "body": "OSKEY_ICO_CLEAR",
        "description": "ConvertOsKeyType($E6)",
        "prefix": "OSKEY_ICO_CLEAR"
    },
    "OSKEY_PACKET": {
        "body": "OSKEY_PACKET",
        "description": "ConvertOsKeyType($E7)",
        "prefix": "OSKEY_PACKET"
    },
    "OSKEY_OEM_RESET": {
        "body": "OSKEY_OEM_RESET",
        "description": "ConvertOsKeyType($E9)",
        "prefix": "OSKEY_OEM_RESET"
    },
    "OSKEY_OEM_JUMP": {
        "body": "OSKEY_OEM_JUMP",
        "description": "ConvertOsKeyType($EA)",
        "prefix": "OSKEY_OEM_JUMP"
    },
    "OSKEY_OEM_PA1": {
        "body": "OSKEY_OEM_PA1",
        "description": "ConvertOsKeyType($EB)",
        "prefix": "OSKEY_OEM_PA1"
    },
    "OSKEY_OEM_PA2": {
        "body": "OSKEY_OEM_PA2",
        "description": "ConvertOsKeyType($EC)",
        "prefix": "OSKEY_OEM_PA2"
    },
    "OSKEY_OEM_PA3": {
        "body": "OSKEY_OEM_PA3",
        "description": "ConvertOsKeyType($ED)",
        "prefix": "OSKEY_OEM_PA3"
    },
    "OSKEY_OEM_WSCTRL": {
        "body": "OSKEY_OEM_WSCTRL",
        "description": "ConvertOsKeyType($EE)",
        "prefix": "OSKEY_OEM_WSCTRL"
    },
    "OSKEY_OEM_CUSEL": {
        "body": "OSKEY_OEM_CUSEL",
        "description": "ConvertOsKeyType($EF)",
        "prefix": "OSKEY_OEM_CUSEL"
    },
    "OSKEY_OEM_ATTN": {
        "body": "OSKEY_OEM_ATTN",
        "description": "ConvertOsKeyType($F0)",
        "prefix": "OSKEY_OEM_ATTN"
    },
    "OSKEY_OEM_FINISH": {
        "body": "OSKEY_OEM_FINISH",
        "description": "ConvertOsKeyType($F1)",
        "prefix": "OSKEY_OEM_FINISH"
    },
    "OSKEY_OEM_COPY": {
        "body": "OSKEY_OEM_COPY",
        "description": "ConvertOsKeyType($F2)",
        "prefix": "OSKEY_OEM_COPY"
    },
    "OSKEY_OEM_AUTO": {
        "body": "OSKEY_OEM_AUTO",
        "description": "ConvertOsKeyType($F3)",
        "prefix": "OSKEY_OEM_AUTO"
    },
    "OSKEY_OEM_ENLW": {
        "body": "OSKEY_OEM_ENLW",
        "description": "ConvertOsKeyType($F4)",
        "prefix": "OSKEY_OEM_ENLW"
    },
    "OSKEY_OEM_BACKTAB": {
        "body": "OSKEY_OEM_BACKTAB",
        "description": "ConvertOsKeyType($F5)",
        "prefix": "OSKEY_OEM_BACKTAB"
    },
    "OSKEY_ATTN": {
        "body": "OSKEY_ATTN",
        "description": "ConvertOsKeyType($F6)",
        "prefix": "OSKEY_ATTN"
    },
    "OSKEY_CRSEL": {
        "body": "OSKEY_CRSEL",
        "description": "ConvertOsKeyType($F7)",
        "prefix": "OSKEY_CRSEL"
    },
    "OSKEY_EXSEL": {
        "body": "OSKEY_EXSEL",
        "description": "ConvertOsKeyType($F8)",
        "prefix": "OSKEY_EXSEL"
    },
    "OSKEY_EREOF": {
        "body": "OSKEY_EREOF",
        "description": "ConvertOsKeyType($F9)",
        "prefix": "OSKEY_EREOF"
    },
    "OSKEY_PLAY": {
        "body": "OSKEY_PLAY",
        "description": "ConvertOsKeyType($FA)",
        "prefix": "OSKEY_PLAY"
    },
    "OSKEY_ZOOM": {
        "body": "OSKEY_ZOOM",
        "description": "ConvertOsKeyType($FB)",
        "prefix": "OSKEY_ZOOM"
    },
    "OSKEY_NONAME": {
        "body": "OSKEY_NONAME",
        "description": "ConvertOsKeyType($FC)",
        "prefix": "OSKEY_NONAME"
    },
    "OSKEY_PA1": {
        "body": "OSKEY_PA1",
        "description": "ConvertOsKeyType($FD)",
        "prefix": "OSKEY_PA1"
    },
    "OSKEY_OEM_CLEAR": {
        "body": "OSKEY_OEM_CLEAR",
        "description": "ConvertOsKeyType($FE)",
        "prefix": "OSKEY_OEM_CLEAR"
    },
    "ABILITY_IF_BUTTON_POSITION_NORMAL_X": {
        "body": "ABILITY_IF_BUTTON_POSITION_NORMAL_X",
        "description": "ConvertAbilityIntegerField('abpx')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_NORMAL_X"
    },
    "ABILITY_IF_BUTTON_POSITION_NORMAL_Y": {
        "body": "ABILITY_IF_BUTTON_POSITION_NORMAL_Y",
        "description": "ConvertAbilityIntegerField('abpy')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_NORMAL_Y"
    },
    "ABILITY_IF_BUTTON_POSITION_ACTIVATED_X": {
        "body": "ABILITY_IF_BUTTON_POSITION_ACTIVATED_X",
        "description": "ConvertAbilityIntegerField('aubx')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_ACTIVATED_X"
    },
    "ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y": {
        "body": "ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y",
        "description": "ConvertAbilityIntegerField('auby')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y"
    },
    "ABILITY_IF_BUTTON_POSITION_RESEARCH_X": {
        "body": "ABILITY_IF_BUTTON_POSITION_RESEARCH_X",
        "description": "ConvertAbilityIntegerField('arpx')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_RESEARCH_X"
    },
    "ABILITY_IF_BUTTON_POSITION_RESEARCH_Y": {
        "body": "ABILITY_IF_BUTTON_POSITION_RESEARCH_Y",
        "description": "ConvertAbilityIntegerField('arpy')",
        "prefix": "ABILITY_IF_BUTTON_POSITION_RESEARCH_Y"
    },
    "ABILITY_IF_MISSILE_SPEED": {
        "body": "ABILITY_IF_MISSILE_SPEED",
        "description": "ConvertAbilityIntegerField('amsp')",
        "prefix": "ABILITY_IF_MISSILE_SPEED"
    },
    "ABILITY_IF_TARGET_ATTACHMENTS": {
        "body": "ABILITY_IF_TARGET_ATTACHMENTS",
        "description": "ConvertAbilityIntegerField('atac')",
        "prefix": "ABILITY_IF_TARGET_ATTACHMENTS"
    },
    "ABILITY_IF_CASTER_ATTACHMENTS": {
        "body": "ABILITY_IF_CASTER_ATTACHMENTS",
        "description": "ConvertAbilityIntegerField('acac')",
        "prefix": "ABILITY_IF_CASTER_ATTACHMENTS"
    },
    "ABILITY_IF_PRIORITY": {
        "body": "ABILITY_IF_PRIORITY",
        "description": "ConvertAbilityIntegerField('apri')",
        "prefix": "ABILITY_IF_PRIORITY"
    },
    "ABILITY_IF_LEVELS": {
        "body": "ABILITY_IF_LEVELS",
        "description": "ConvertAbilityIntegerField('alev')",
        "prefix": "ABILITY_IF_LEVELS"
    },
    "ABILITY_IF_REQUIRED_LEVEL": {
        "body": "ABILITY_IF_REQUIRED_LEVEL",
        "description": "ConvertAbilityIntegerField('arlv')",
        "prefix": "ABILITY_IF_REQUIRED_LEVEL"
    },
    "ABILITY_IF_LEVEL_SKIP_REQUIREMENT": {
        "body": "ABILITY_IF_LEVEL_SKIP_REQUIREMENT",
        "description": "ConvertAbilityIntegerField('alsk')",
        "prefix": "ABILITY_IF_LEVEL_SKIP_REQUIREMENT"
    },
    "ABILITY_BF_HERO_ABILITY": {
        "body": "ABILITY_BF_HERO_ABILITY",
        "description": "ConvertAbilityBooleanField('aher') // Get only",
        "prefix": "ABILITY_BF_HERO_ABILITY"
    },
    "ABILITY_BF_ITEM_ABILITY": {
        "body": "ABILITY_BF_ITEM_ABILITY",
        "description": "ConvertAbilityBooleanField('aite')",
        "prefix": "ABILITY_BF_ITEM_ABILITY"
    },
    "ABILITY_BF_CHECK_DEPENDENCIES": {
        "body": "ABILITY_BF_CHECK_DEPENDENCIES",
        "description": "ConvertAbilityBooleanField('achd')",
        "prefix": "ABILITY_BF_CHECK_DEPENDENCIES"
    },
    "ABILITY_RF_ARF_MISSILE_ARC": {
        "body": "ABILITY_RF_ARF_MISSILE_ARC",
        "description": "ConvertAbilityRealField('amac')",
        "prefix": "ABILITY_RF_ARF_MISSILE_ARC"
    },
    "ABILITY_SF_NAME": {
        "body": "ABILITY_SF_NAME",
        "description": "ConvertAbilityStringField('anam') // Get Only",
        "prefix": "ABILITY_SF_NAME"
    },
    "ABILITY_SF_ICON_ACTIVATED": {
        "body": "ABILITY_SF_ICON_ACTIVATED",
        "description": "ConvertAbilityStringField('auar')",
        "prefix": "ABILITY_SF_ICON_ACTIVATED"
    },
    "ABILITY_SF_ICON_RESEARCH": {
        "body": "ABILITY_SF_ICON_RESEARCH",
        "description": "ConvertAbilityStringField('arar')",
        "prefix": "ABILITY_SF_ICON_RESEARCH"
    },
    "ABILITY_SF_EFFECT_SOUND": {
        "body": "ABILITY_SF_EFFECT_SOUND",
        "description": "ConvertAbilityStringField('aefs')",
        "prefix": "ABILITY_SF_EFFECT_SOUND"
    },
    "ABILITY_SF_EFFECT_SOUND_LOOPING": {
        "body": "ABILITY_SF_EFFECT_SOUND_LOOPING",
        "description": "ConvertAbilityStringField('aefl')",
        "prefix": "ABILITY_SF_EFFECT_SOUND_LOOPING"
    },
    "ABILITY_ILF_MANA_COST": {
        "body": "ABILITY_ILF_MANA_COST",
        "description": "ConvertAbilityIntegerLevelField('amcs')",
        "prefix": "ABILITY_ILF_MANA_COST"
    },
    "ABILITY_ILF_NUMBER_OF_WAVES": {
        "body": "ABILITY_ILF_NUMBER_OF_WAVES",
        "description": "ConvertAbilityIntegerLevelField('Hbz1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_WAVES"
    },
    "ABILITY_ILF_NUMBER_OF_SHARDS": {
        "body": "ABILITY_ILF_NUMBER_OF_SHARDS",
        "description": "ConvertAbilityIntegerLevelField('Hbz3')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SHARDS"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED": {
        "body": "ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED",
        "description": "ConvertAbilityIntegerLevelField('Hmt1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED"
    },
    "ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2",
        "description": "ConvertAbilityIntegerLevelField('Hwe2')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2"
    },
    "ABILITY_ILF_NUMBER_OF_IMAGES": {
        "body": "ABILITY_ILF_NUMBER_OF_IMAGES",
        "description": "ConvertAbilityIntegerLevelField('Omi1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_IMAGES"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1": {
        "body": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1",
        "description": "ConvertAbilityIntegerLevelField('Uan1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1"
    },
    "ABILITY_ILF_MORPHING_FLAGS": {
        "body": "ABILITY_ILF_MORPHING_FLAGS",
        "description": "ConvertAbilityIntegerLevelField('Eme2')",
        "prefix": "ABILITY_ILF_MORPHING_FLAGS"
    },
    "ABILITY_ILF_STRENGTH_BONUS_NRG5": {
        "body": "ABILITY_ILF_STRENGTH_BONUS_NRG5",
        "description": "ConvertAbilityIntegerLevelField('Nrg5')",
        "prefix": "ABILITY_ILF_STRENGTH_BONUS_NRG5"
    },
    "ABILITY_ILF_DEFENSE_BONUS_NRG6": {
        "body": "ABILITY_ILF_DEFENSE_BONUS_NRG6",
        "description": "ConvertAbilityIntegerLevelField('Nrg6')",
        "prefix": "ABILITY_ILF_DEFENSE_BONUS_NRG6"
    },
    "ABILITY_ILF_NUMBER_OF_TARGETS_HIT": {
        "body": "ABILITY_ILF_NUMBER_OF_TARGETS_HIT",
        "description": "ConvertAbilityIntegerLevelField('Ocl2')",
        "prefix": "ABILITY_ILF_NUMBER_OF_TARGETS_HIT"
    },
    "ABILITY_ILF_DETECTION_TYPE_OFS1": {
        "body": "ABILITY_ILF_DETECTION_TYPE_OFS1",
        "description": "ConvertAbilityIntegerLevelField('Ofs1')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_OFS1"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2": {
        "body": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2",
        "description": "ConvertAbilityIntegerLevelField('Osf2')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1": {
        "body": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1",
        "description": "ConvertAbilityIntegerLevelField('Efn1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1": {
        "body": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1",
        "description": "ConvertAbilityIntegerLevelField('Hre1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1"
    },
    "ABILITY_ILF_STACK_FLAGS": {
        "body": "ABILITY_ILF_STACK_FLAGS",
        "description": "ConvertAbilityIntegerLevelField('Hca4')",
        "prefix": "ABILITY_ILF_STACK_FLAGS"
    },
    "ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS": {
        "body": "ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS",
        "description": "ConvertAbilityIntegerLevelField('Ndp2')",
        "prefix": "ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3",
        "description": "ConvertAbilityIntegerLevelField('Ndp3')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2": {
        "body": "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2",
        "description": "ConvertAbilityIntegerLevelField('Nrc2')",
        "prefix": "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2"
    },
    "ABILITY_ILF_SHIELD_LIFE": {
        "body": "ABILITY_ILF_SHIELD_LIFE",
        "description": "ConvertAbilityIntegerLevelField('Ams3')",
        "prefix": "ABILITY_ILF_SHIELD_LIFE"
    },
    "ABILITY_ILF_MANA_LOSS_AMS4": {
        "body": "ABILITY_ILF_MANA_LOSS_AMS4",
        "description": "ConvertAbilityIntegerLevelField('Ams4')",
        "prefix": "ABILITY_ILF_MANA_LOSS_AMS4"
    },
    "ABILITY_ILF_GOLD_PER_INTERVAL_BGM1": {
        "body": "ABILITY_ILF_GOLD_PER_INTERVAL_BGM1",
        "description": "ConvertAbilityIntegerLevelField('Bgm1')",
        "prefix": "ABILITY_ILF_GOLD_PER_INTERVAL_BGM1"
    },
    "ABILITY_ILF_MAX_NUMBER_OF_MINERS": {
        "body": "ABILITY_ILF_MAX_NUMBER_OF_MINERS",
        "description": "ConvertAbilityIntegerLevelField('Bgm3')",
        "prefix": "ABILITY_ILF_MAX_NUMBER_OF_MINERS"
    },
    "ABILITY_ILF_CARGO_CAPACITY": {
        "body": "ABILITY_ILF_CARGO_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('Car1')",
        "prefix": "ABILITY_ILF_CARGO_CAPACITY"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3": {
        "body": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3",
        "description": "ConvertAbilityIntegerLevelField('Dev3')",
        "prefix": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3"
    },
    "ABILITY_ILF_MAX_CREEP_LEVEL_DEV1": {
        "body": "ABILITY_ILF_MAX_CREEP_LEVEL_DEV1",
        "description": "ConvertAbilityIntegerLevelField('Dev1')",
        "prefix": "ABILITY_ILF_MAX_CREEP_LEVEL_DEV1"
    },
    "ABILITY_ILF_GOLD_PER_INTERVAL_EGM1": {
        "body": "ABILITY_ILF_GOLD_PER_INTERVAL_EGM1",
        "description": "ConvertAbilityIntegerLevelField('Egm1')",
        "prefix": "ABILITY_ILF_GOLD_PER_INTERVAL_EGM1"
    },
    "ABILITY_ILF_DEFENSE_REDUCTION": {
        "body": "ABILITY_ILF_DEFENSE_REDUCTION",
        "description": "ConvertAbilityIntegerLevelField('Fae1')",
        "prefix": "ABILITY_ILF_DEFENSE_REDUCTION"
    },
    "ABILITY_ILF_DETECTION_TYPE_FLA1": {
        "body": "ABILITY_ILF_DETECTION_TYPE_FLA1",
        "description": "ConvertAbilityIntegerLevelField('Fla1')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_FLA1"
    },
    "ABILITY_ILF_FLARE_COUNT": {
        "body": "ABILITY_ILF_FLARE_COUNT",
        "description": "ConvertAbilityIntegerLevelField('Fla3')",
        "prefix": "ABILITY_ILF_FLARE_COUNT"
    },
    "ABILITY_ILF_MAX_GOLD": {
        "body": "ABILITY_ILF_MAX_GOLD",
        "description": "ConvertAbilityIntegerLevelField('Gld1')",
        "prefix": "ABILITY_ILF_MAX_GOLD"
    },
    "ABILITY_ILF_MINING_CAPACITY": {
        "body": "ABILITY_ILF_MINING_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('Gld3')",
        "prefix": "ABILITY_ILF_MINING_CAPACITY"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1",
        "description": "ConvertAbilityIntegerLevelField('Gyd1')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1"
    },
    "ABILITY_ILF_DAMAGE_TO_TREE": {
        "body": "ABILITY_ILF_DAMAGE_TO_TREE",
        "description": "ConvertAbilityIntegerLevelField('Har1')",
        "prefix": "ABILITY_ILF_DAMAGE_TO_TREE"
    },
    "ABILITY_ILF_LUMBER_CAPACITY": {
        "body": "ABILITY_ILF_LUMBER_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('Har2')",
        "prefix": "ABILITY_ILF_LUMBER_CAPACITY"
    },
    "ABILITY_ILF_GOLD_CAPACITY": {
        "body": "ABILITY_ILF_GOLD_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('Har3')",
        "prefix": "ABILITY_ILF_GOLD_CAPACITY"
    },
    "ABILITY_ILF_DEFENSE_INCREASE_INF2": {
        "body": "ABILITY_ILF_DEFENSE_INCREASE_INF2",
        "description": "ConvertAbilityIntegerLevelField('Inf2')",
        "prefix": "ABILITY_ILF_DEFENSE_INCREASE_INF2"
    },
    "ABILITY_ILF_INTERACTION_TYPE": {
        "body": "ABILITY_ILF_INTERACTION_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Neu2')",
        "prefix": "ABILITY_ILF_INTERACTION_TYPE"
    },
    "ABILITY_ILF_GOLD_COST_NDT1": {
        "body": "ABILITY_ILF_GOLD_COST_NDT1",
        "description": "ConvertAbilityIntegerLevelField('Ndt1')",
        "prefix": "ABILITY_ILF_GOLD_COST_NDT1"
    },
    "ABILITY_ILF_LUMBER_COST_NDT2": {
        "body": "ABILITY_ILF_LUMBER_COST_NDT2",
        "description": "ConvertAbilityIntegerLevelField('Ndt2')",
        "prefix": "ABILITY_ILF_LUMBER_COST_NDT2"
    },
    "ABILITY_ILF_DETECTION_TYPE_NDT3": {
        "body": "ABILITY_ILF_DETECTION_TYPE_NDT3",
        "description": "ConvertAbilityIntegerLevelField('Ndt3')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_NDT3"
    },
    "ABILITY_ILF_STACKING_TYPE_POI4": {
        "body": "ABILITY_ILF_STACKING_TYPE_POI4",
        "description": "ConvertAbilityIntegerLevelField('Poi4')",
        "prefix": "ABILITY_ILF_STACKING_TYPE_POI4"
    },
    "ABILITY_ILF_STACKING_TYPE_POA5": {
        "body": "ABILITY_ILF_STACKING_TYPE_POA5",
        "description": "ConvertAbilityIntegerLevelField('Poa5')",
        "prefix": "ABILITY_ILF_STACKING_TYPE_POA5"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1": {
        "body": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1",
        "description": "ConvertAbilityIntegerLevelField('Ply1')",
        "prefix": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1": {
        "body": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1",
        "description": "ConvertAbilityIntegerLevelField('Pos1')",
        "prefix": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1"
    },
    "ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1": {
        "body": "ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1",
        "description": "ConvertAbilityIntegerLevelField('Prg1')",
        "prefix": "ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1"
    },
    "ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2": {
        "body": "ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2",
        "description": "ConvertAbilityIntegerLevelField('Prg2')",
        "prefix": "ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2"
    },
    "ABILITY_ILF_MANA_LOSS_PRG6": {
        "body": "ABILITY_ILF_MANA_LOSS_PRG6",
        "description": "ConvertAbilityIntegerLevelField('Prg6')",
        "prefix": "ABILITY_ILF_MANA_LOSS_PRG6"
    },
    "ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE": {
        "body": "ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE",
        "description": "ConvertAbilityIntegerLevelField('Rai1')",
        "prefix": "ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE"
    },
    "ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO": {
        "body": "ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO",
        "description": "ConvertAbilityIntegerLevelField('Rai2')",
        "prefix": "ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO"
    },
    "ABILITY_ILF_MAX_UNITS_SUMMONED": {
        "body": "ABILITY_ILF_MAX_UNITS_SUMMONED",
        "description": "ConvertAbilityIntegerLevelField('Ucb5')",
        "prefix": "ABILITY_ILF_MAX_UNITS_SUMMONED"
    },
    "ABILITY_ILF_ALLOW_WHEN_FULL_REJ3": {
        "body": "ABILITY_ILF_ALLOW_WHEN_FULL_REJ3",
        "description": "ConvertAbilityIntegerLevelField('Rej3')",
        "prefix": "ABILITY_ILF_ALLOW_WHEN_FULL_REJ3"
    },
    "ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER": {
        "body": "ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER",
        "description": "ConvertAbilityIntegerLevelField('Rpb5')",
        "prefix": "ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER"
    },
    "ABILITY_ILF_MAXIMUM_UNITS_AFFECTED": {
        "body": "ABILITY_ILF_MAXIMUM_UNITS_AFFECTED",
        "description": "ConvertAbilityIntegerLevelField('Rpb6')",
        "prefix": "ABILITY_ILF_MAXIMUM_UNITS_AFFECTED"
    },
    "ABILITY_ILF_DEFENSE_INCREASE_ROA2": {
        "body": "ABILITY_ILF_DEFENSE_INCREASE_ROA2",
        "description": "ConvertAbilityIntegerLevelField('Roa2')",
        "prefix": "ABILITY_ILF_DEFENSE_INCREASE_ROA2"
    },
    "ABILITY_ILF_MAX_UNITS_ROA7": {
        "body": "ABILITY_ILF_MAX_UNITS_ROA7",
        "description": "ConvertAbilityIntegerLevelField('Roa7')",
        "prefix": "ABILITY_ILF_MAX_UNITS_ROA7"
    },
    "ABILITY_ILF_ROOTED_WEAPONS": {
        "body": "ABILITY_ILF_ROOTED_WEAPONS",
        "description": "ConvertAbilityIntegerLevelField('Roo1')",
        "prefix": "ABILITY_ILF_ROOTED_WEAPONS"
    },
    "ABILITY_ILF_UPROOTED_WEAPONS": {
        "body": "ABILITY_ILF_UPROOTED_WEAPONS",
        "description": "ConvertAbilityIntegerLevelField('Roo2')",
        "prefix": "ABILITY_ILF_UPROOTED_WEAPONS"
    },
    "ABILITY_ILF_UPROOTED_DEFENSE_TYPE": {
        "body": "ABILITY_ILF_UPROOTED_DEFENSE_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Roo4')",
        "prefix": "ABILITY_ILF_UPROOTED_DEFENSE_TYPE"
    },
    "ABILITY_ILF_ACCUMULATION_STEP": {
        "body": "ABILITY_ILF_ACCUMULATION_STEP",
        "description": "ConvertAbilityIntegerLevelField('Sal2')",
        "prefix": "ABILITY_ILF_ACCUMULATION_STEP"
    },
    "ABILITY_ILF_NUMBER_OF_OWLS": {
        "body": "ABILITY_ILF_NUMBER_OF_OWLS",
        "description": "ConvertAbilityIntegerLevelField('Esn4')",
        "prefix": "ABILITY_ILF_NUMBER_OF_OWLS"
    },
    "ABILITY_ILF_STACKING_TYPE_SPO4": {
        "body": "ABILITY_ILF_STACKING_TYPE_SPO4",
        "description": "ConvertAbilityIntegerLevelField('Spo4')",
        "prefix": "ABILITY_ILF_STACKING_TYPE_SPO4"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS": {
        "body": "ABILITY_ILF_NUMBER_OF_UNITS",
        "description": "ConvertAbilityIntegerLevelField('Sod1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_UNITS"
    },
    "ABILITY_ILF_SPIDER_CAPACITY": {
        "body": "ABILITY_ILF_SPIDER_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('Spa1')",
        "prefix": "ABILITY_ILF_SPIDER_CAPACITY"
    },
    "ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES": {
        "body": "ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES",
        "description": "ConvertAbilityIntegerLevelField('Wha2')",
        "prefix": "ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES"
    },
    "ABILITY_ILF_AGILITY_BONUS": {
        "body": "ABILITY_ILF_AGILITY_BONUS",
        "description": "ConvertAbilityIntegerLevelField('Iagi')",
        "prefix": "ABILITY_ILF_AGILITY_BONUS"
    },
    "ABILITY_ILF_INTELLIGENCE_BONUS": {
        "body": "ABILITY_ILF_INTELLIGENCE_BONUS",
        "description": "ConvertAbilityIntegerLevelField('Iint')",
        "prefix": "ABILITY_ILF_INTELLIGENCE_BONUS"
    },
    "ABILITY_ILF_STRENGTH_BONUS_ISTR": {
        "body": "ABILITY_ILF_STRENGTH_BONUS_ISTR",
        "description": "ConvertAbilityIntegerLevelField('Istr')",
        "prefix": "ABILITY_ILF_STRENGTH_BONUS_ISTR"
    },
    "ABILITY_ILF_ATTACK_BONUS": {
        "body": "ABILITY_ILF_ATTACK_BONUS",
        "description": "ConvertAbilityIntegerLevelField('Iatt')",
        "prefix": "ABILITY_ILF_ATTACK_BONUS"
    },
    "ABILITY_ILF_DEFENSE_BONUS_IDEF": {
        "body": "ABILITY_ILF_DEFENSE_BONUS_IDEF",
        "description": "ConvertAbilityIntegerLevelField('Idef')",
        "prefix": "ABILITY_ILF_DEFENSE_BONUS_IDEF"
    },
    "ABILITY_ILF_SUMMON_1_AMOUNT": {
        "body": "ABILITY_ILF_SUMMON_1_AMOUNT",
        "description": "ConvertAbilityIntegerLevelField('Isn1')",
        "prefix": "ABILITY_ILF_SUMMON_1_AMOUNT"
    },
    "ABILITY_ILF_SUMMON_2_AMOUNT": {
        "body": "ABILITY_ILF_SUMMON_2_AMOUNT",
        "description": "ConvertAbilityIntegerLevelField('Isn2')",
        "prefix": "ABILITY_ILF_SUMMON_2_AMOUNT"
    },
    "ABILITY_ILF_EXPERIENCE_GAINED": {
        "body": "ABILITY_ILF_EXPERIENCE_GAINED",
        "description": "ConvertAbilityIntegerLevelField('Ixpg')",
        "prefix": "ABILITY_ILF_EXPERIENCE_GAINED"
    },
    "ABILITY_ILF_HIT_POINTS_GAINED_IHPG": {
        "body": "ABILITY_ILF_HIT_POINTS_GAINED_IHPG",
        "description": "ConvertAbilityIntegerLevelField('Ihpg')",
        "prefix": "ABILITY_ILF_HIT_POINTS_GAINED_IHPG"
    },
    "ABILITY_ILF_MANA_POINTS_GAINED_IMPG": {
        "body": "ABILITY_ILF_MANA_POINTS_GAINED_IMPG",
        "description": "ConvertAbilityIntegerLevelField('Impg')",
        "prefix": "ABILITY_ILF_MANA_POINTS_GAINED_IMPG"
    },
    "ABILITY_ILF_HIT_POINTS_GAINED_IHP2": {
        "body": "ABILITY_ILF_HIT_POINTS_GAINED_IHP2",
        "description": "ConvertAbilityIntegerLevelField('Ihp2')",
        "prefix": "ABILITY_ILF_HIT_POINTS_GAINED_IHP2"
    },
    "ABILITY_ILF_MANA_POINTS_GAINED_IMP2": {
        "body": "ABILITY_ILF_MANA_POINTS_GAINED_IMP2",
        "description": "ConvertAbilityIntegerLevelField('Imp2')",
        "prefix": "ABILITY_ILF_MANA_POINTS_GAINED_IMP2"
    },
    "ABILITY_ILF_DAMAGE_BONUS_DICE": {
        "body": "ABILITY_ILF_DAMAGE_BONUS_DICE",
        "description": "ConvertAbilityIntegerLevelField('Idic')",
        "prefix": "ABILITY_ILF_DAMAGE_BONUS_DICE"
    },
    "ABILITY_ILF_ARMOR_PENALTY_IARP": {
        "body": "ABILITY_ILF_ARMOR_PENALTY_IARP",
        "description": "ConvertAbilityIntegerLevelField('Iarp')",
        "prefix": "ABILITY_ILF_ARMOR_PENALTY_IARP"
    },
    "ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5": {
        "body": "ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5",
        "description": "ConvertAbilityIntegerLevelField('Iob5')",
        "prefix": "ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5"
    },
    "ABILITY_ILF_LEVELS_GAINED": {
        "body": "ABILITY_ILF_LEVELS_GAINED",
        "description": "ConvertAbilityIntegerLevelField('Ilev')",
        "prefix": "ABILITY_ILF_LEVELS_GAINED"
    },
    "ABILITY_ILF_MAX_LIFE_GAINED": {
        "body": "ABILITY_ILF_MAX_LIFE_GAINED",
        "description": "ConvertAbilityIntegerLevelField('Ilif')",
        "prefix": "ABILITY_ILF_MAX_LIFE_GAINED"
    },
    "ABILITY_ILF_MAX_MANA_GAINED": {
        "body": "ABILITY_ILF_MAX_MANA_GAINED",
        "description": "ConvertAbilityIntegerLevelField('Iman')",
        "prefix": "ABILITY_ILF_MAX_MANA_GAINED"
    },
    "ABILITY_ILF_GOLD_GIVEN": {
        "body": "ABILITY_ILF_GOLD_GIVEN",
        "description": "ConvertAbilityIntegerLevelField('Igol')",
        "prefix": "ABILITY_ILF_GOLD_GIVEN"
    },
    "ABILITY_ILF_LUMBER_GIVEN": {
        "body": "ABILITY_ILF_LUMBER_GIVEN",
        "description": "ConvertAbilityIntegerLevelField('Ilum')",
        "prefix": "ABILITY_ILF_LUMBER_GIVEN"
    },
    "ABILITY_ILF_DETECTION_TYPE_IFA1": {
        "body": "ABILITY_ILF_DETECTION_TYPE_IFA1",
        "description": "ConvertAbilityIntegerLevelField('Ifa1')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_IFA1"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE": {
        "body": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE",
        "description": "ConvertAbilityIntegerLevelField('Icre')",
        "prefix": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE"
    },
    "ABILITY_ILF_MOVEMENT_SPEED_BONUS": {
        "body": "ABILITY_ILF_MOVEMENT_SPEED_BONUS",
        "description": "ConvertAbilityIntegerLevelField('Imvb')",
        "prefix": "ABILITY_ILF_MOVEMENT_SPEED_BONUS"
    },
    "ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND": {
        "body": "ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND",
        "description": "ConvertAbilityIntegerLevelField('Ihpr')",
        "prefix": "ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND"
    },
    "ABILITY_ILF_SIGHT_RANGE_BONUS": {
        "body": "ABILITY_ILF_SIGHT_RANGE_BONUS",
        "description": "ConvertAbilityIntegerLevelField('Isib')",
        "prefix": "ABILITY_ILF_SIGHT_RANGE_BONUS"
    },
    "ABILITY_ILF_DAMAGE_PER_DURATION": {
        "body": "ABILITY_ILF_DAMAGE_PER_DURATION",
        "description": "ConvertAbilityIntegerLevelField('Icfd')",
        "prefix": "ABILITY_ILF_DAMAGE_PER_DURATION"
    },
    "ABILITY_ILF_MANA_USED_PER_SECOND": {
        "body": "ABILITY_ILF_MANA_USED_PER_SECOND",
        "description": "ConvertAbilityIntegerLevelField('Icfm')",
        "prefix": "ABILITY_ILF_MANA_USED_PER_SECOND"
    },
    "ABILITY_ILF_EXTRA_MANA_REQUIRED": {
        "body": "ABILITY_ILF_EXTRA_MANA_REQUIRED",
        "description": "ConvertAbilityIntegerLevelField('Icfx')",
        "prefix": "ABILITY_ILF_EXTRA_MANA_REQUIRED"
    },
    "ABILITY_ILF_DETECTION_RADIUS_IDET": {
        "body": "ABILITY_ILF_DETECTION_RADIUS_IDET",
        "description": "ConvertAbilityIntegerLevelField('Idet')",
        "prefix": "ABILITY_ILF_DETECTION_RADIUS_IDET"
    },
    "ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM": {
        "body": "ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM",
        "description": "ConvertAbilityIntegerLevelField('Idim')",
        "prefix": "ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM"
    },
    "ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID": {
        "body": "ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID",
        "description": "ConvertAbilityIntegerLevelField('Idid')",
        "prefix": "ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC",
        "description": "ConvertAbilityIntegerLevelField('Irec')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC"
    },
    "ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS": {
        "body": "ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS",
        "description": "ConvertAbilityIntegerLevelField('Ircd')",
        "prefix": "ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS"
    },
    "ABILITY_ILF_RESTORED_LIFE": {
        "body": "ABILITY_ILF_RESTORED_LIFE",
        "description": "ConvertAbilityIntegerLevelField('irc2')",
        "prefix": "ABILITY_ILF_RESTORED_LIFE"
    },
    "ABILITY_ILF_RESTORED_MANA__1_FOR_CURRENT": {
        "body": "ABILITY_ILF_RESTORED_MANA__1_FOR_CURRENT",
        "description": "ConvertAbilityIntegerLevelField('irc3')",
        "prefix": "ABILITY_ILF_RESTORED_MANA__1_FOR_CURRENT"
    },
    "ABILITY_ILF_HIT_POINTS_RESTORED": {
        "body": "ABILITY_ILF_HIT_POINTS_RESTORED",
        "description": "ConvertAbilityIntegerLevelField('Ihps')",
        "prefix": "ABILITY_ILF_HIT_POINTS_RESTORED"
    },
    "ABILITY_ILF_MANA_POINTS_RESTORED": {
        "body": "ABILITY_ILF_MANA_POINTS_RESTORED",
        "description": "ConvertAbilityIntegerLevelField('Imps')",
        "prefix": "ABILITY_ILF_MANA_POINTS_RESTORED"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM",
        "description": "ConvertAbilityIntegerLevelField('Itpm')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM"
    },
    "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1": {
        "body": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1",
        "description": "ConvertAbilityIntegerLevelField('Cad1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1"
    },
    "ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS": {
        "body": "ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS",
        "description": "ConvertAbilityIntegerLevelField('Wrs3')",
        "prefix": "ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS"
    },
    "ABILITY_ILF_MAXIMUM_UNITS": {
        "body": "ABILITY_ILF_MAXIMUM_UNITS",
        "description": "ConvertAbilityIntegerLevelField('Uds1')",
        "prefix": "ABILITY_ILF_MAXIMUM_UNITS"
    },
    "ABILITY_ILF_DETECTION_TYPE_DET1": {
        "body": "ABILITY_ILF_DETECTION_TYPE_DET1",
        "description": "ConvertAbilityIntegerLevelField('Det1')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_DET1"
    },
    "ABILITY_ILF_GOLD_COST_PER_STRUCTURE": {
        "body": "ABILITY_ILF_GOLD_COST_PER_STRUCTURE",
        "description": "ConvertAbilityIntegerLevelField('Nsp1')",
        "prefix": "ABILITY_ILF_GOLD_COST_PER_STRUCTURE"
    },
    "ABILITY_ILF_LUMBER_COST_PER_USE": {
        "body": "ABILITY_ILF_LUMBER_COST_PER_USE",
        "description": "ConvertAbilityIntegerLevelField('Nsp2')",
        "prefix": "ABILITY_ILF_LUMBER_COST_PER_USE"
    },
    "ABILITY_ILF_DETECTION_TYPE_NSP3": {
        "body": "ABILITY_ILF_DETECTION_TYPE_NSP3",
        "description": "ConvertAbilityIntegerLevelField('Nsp3')",
        "prefix": "ABILITY_ILF_DETECTION_TYPE_NSP3"
    },
    "ABILITY_ILF_NUMBER_OF_SWARM_UNITS": {
        "body": "ABILITY_ILF_NUMBER_OF_SWARM_UNITS",
        "description": "ConvertAbilityIntegerLevelField('Uls1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SWARM_UNITS"
    },
    "ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET": {
        "body": "ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET",
        "description": "ConvertAbilityIntegerLevelField('Uls3')",
        "prefix": "ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2": {
        "body": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2",
        "description": "ConvertAbilityIntegerLevelField('Nba2')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2"
    },
    "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1": {
        "body": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1",
        "description": "ConvertAbilityIntegerLevelField('Nch1')",
        "prefix": "ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1"
    },
    "ABILITY_ILF_ATTACKS_PREVENTED": {
        "body": "ABILITY_ILF_ATTACKS_PREVENTED",
        "description": "ConvertAbilityIntegerLevelField('Nsi1')",
        "prefix": "ABILITY_ILF_ATTACKS_PREVENTED"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3",
        "description": "ConvertAbilityIntegerLevelField('Efk3')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1": {
        "body": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1",
        "description": "ConvertAbilityIntegerLevelField('Esv1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1",
        "description": "ConvertAbilityIntegerLevelField('exh1')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1"
    },
    "ABILITY_ILF_ITEM_CAPACITY": {
        "body": "ABILITY_ILF_ITEM_CAPACITY",
        "description": "ConvertAbilityIntegerLevelField('inv1')",
        "prefix": "ABILITY_ILF_ITEM_CAPACITY"
    },
    "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2": {
        "body": "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2",
        "description": "ConvertAbilityIntegerLevelField('spl2')",
        "prefix": "ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2"
    },
    "ABILITY_ILF_ALLOW_WHEN_FULL_IRL3": {
        "body": "ABILITY_ILF_ALLOW_WHEN_FULL_IRL3",
        "description": "ConvertAbilityIntegerLevelField('irl3')",
        "prefix": "ABILITY_ILF_ALLOW_WHEN_FULL_IRL3"
    },
    "ABILITY_ILF_MAXIMUM_DISPELLED_UNITS": {
        "body": "ABILITY_ILF_MAXIMUM_DISPELLED_UNITS",
        "description": "ConvertAbilityIntegerLevelField('idc3')",
        "prefix": "ABILITY_ILF_MAXIMUM_DISPELLED_UNITS"
    },
    "ABILITY_ILF_NUMBER_OF_LURES": {
        "body": "ABILITY_ILF_NUMBER_OF_LURES",
        "description": "ConvertAbilityIntegerLevelField('imo1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_LURES"
    },
    "ABILITY_ILF_NEW_TIME_OF_DAY_HOUR": {
        "body": "ABILITY_ILF_NEW_TIME_OF_DAY_HOUR",
        "description": "ConvertAbilityIntegerLevelField('ict1')",
        "prefix": "ABILITY_ILF_NEW_TIME_OF_DAY_HOUR"
    },
    "ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE": {
        "body": "ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE",
        "description": "ConvertAbilityIntegerLevelField('ict2')",
        "prefix": "ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE"
    },
    "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1": {
        "body": "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1",
        "description": "ConvertAbilityIntegerLevelField('mec1')",
        "prefix": "ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1"
    },
    "ABILITY_ILF_MINIMUM_SPELLS": {
        "body": "ABILITY_ILF_MINIMUM_SPELLS",
        "description": "ConvertAbilityIntegerLevelField('spb3')",
        "prefix": "ABILITY_ILF_MINIMUM_SPELLS"
    },
    "ABILITY_ILF_MAXIMUM_SPELLS": {
        "body": "ABILITY_ILF_MAXIMUM_SPELLS",
        "description": "ConvertAbilityIntegerLevelField('spb4')",
        "prefix": "ABILITY_ILF_MAXIMUM_SPELLS"
    },
    "ABILITY_ILF_DISABLED_ATTACK_INDEX": {
        "body": "ABILITY_ILF_DISABLED_ATTACK_INDEX",
        "description": "ConvertAbilityIntegerLevelField('gra3')",
        "prefix": "ABILITY_ILF_DISABLED_ATTACK_INDEX"
    },
    "ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4": {
        "body": "ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4",
        "description": "ConvertAbilityIntegerLevelField('gra4')",
        "prefix": "ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4"
    },
    "ABILITY_ILF_MAXIMUM_ATTACKS": {
        "body": "ABILITY_ILF_MAXIMUM_ATTACKS",
        "description": "ConvertAbilityIntegerLevelField('gra5')",
        "prefix": "ABILITY_ILF_MAXIMUM_ATTACKS"
    },
    "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1": {
        "body": "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1",
        "description": "ConvertAbilityIntegerLevelField('Npr1')",
        "prefix": "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1"
    },
    "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1": {
        "body": "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1",
        "description": "ConvertAbilityIntegerLevelField('Nsa1')",
        "prefix": "ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1"
    },
    "ABILITY_ILF_ATTACK_MODIFICATION": {
        "body": "ABILITY_ILF_ATTACK_MODIFICATION",
        "description": "ConvertAbilityIntegerLevelField('Iaa1')",
        "prefix": "ABILITY_ILF_ATTACK_MODIFICATION"
    },
    "ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5",
        "description": "ConvertAbilityIntegerLevelField('Npa5')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5"
    },
    "ABILITY_ILF_UPGRADE_LEVELS": {
        "body": "ABILITY_ILF_UPGRADE_LEVELS",
        "description": "ConvertAbilityIntegerLevelField('Igl1')",
        "prefix": "ABILITY_ILF_UPGRADE_LEVELS"
    },
    "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2": {
        "body": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2",
        "description": "ConvertAbilityIntegerLevelField('Ndo2')",
        "prefix": "ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2"
    },
    "ABILITY_ILF_BEASTS_PER_SECOND": {
        "body": "ABILITY_ILF_BEASTS_PER_SECOND",
        "description": "ConvertAbilityIntegerLevelField('Nst1')",
        "prefix": "ABILITY_ILF_BEASTS_PER_SECOND"
    },
    "ABILITY_ILF_TARGET_TYPE": {
        "body": "ABILITY_ILF_TARGET_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Ncl2')",
        "prefix": "ABILITY_ILF_TARGET_TYPE"
    },
    "ABILITY_ILF_OPTIONS": {
        "body": "ABILITY_ILF_OPTIONS",
        "description": "ConvertAbilityIntegerLevelField('Ncl3')",
        "prefix": "ABILITY_ILF_OPTIONS"
    },
    "ABILITY_ILF_ARMOR_PENALTY_NAB3": {
        "body": "ABILITY_ILF_ARMOR_PENALTY_NAB3",
        "description": "ConvertAbilityIntegerLevelField('Nab3')",
        "prefix": "ABILITY_ILF_ARMOR_PENALTY_NAB3"
    },
    "ABILITY_ILF_WAVE_COUNT_NHS6": {
        "body": "ABILITY_ILF_WAVE_COUNT_NHS6",
        "description": "ConvertAbilityIntegerLevelField('Nhs6')",
        "prefix": "ABILITY_ILF_WAVE_COUNT_NHS6"
    },
    "ABILITY_ILF_MAX_CREEP_LEVEL_NTM3": {
        "body": "ABILITY_ILF_MAX_CREEP_LEVEL_NTM3",
        "description": "ConvertAbilityIntegerLevelField('Ntm3')",
        "prefix": "ABILITY_ILF_MAX_CREEP_LEVEL_NTM3"
    },
    "ABILITY_ILF_MISSILE_COUNT": {
        "body": "ABILITY_ILF_MISSILE_COUNT",
        "description": "ConvertAbilityIntegerLevelField('Ncs3')",
        "prefix": "ABILITY_ILF_MISSILE_COUNT"
    },
    "ABILITY_ILF_SPLIT_ATTACK_COUNT": {
        "body": "ABILITY_ILF_SPLIT_ATTACK_COUNT",
        "description": "ConvertAbilityIntegerLevelField('Nlm3')",
        "prefix": "ABILITY_ILF_SPLIT_ATTACK_COUNT"
    },
    "ABILITY_ILF_GENERATION_COUNT": {
        "body": "ABILITY_ILF_GENERATION_COUNT",
        "description": "ConvertAbilityIntegerLevelField('Nlm6')",
        "prefix": "ABILITY_ILF_GENERATION_COUNT"
    },
    "ABILITY_ILF_ROCK_RING_COUNT": {
        "body": "ABILITY_ILF_ROCK_RING_COUNT",
        "description": "ConvertAbilityIntegerLevelField('Nvc1')",
        "prefix": "ABILITY_ILF_ROCK_RING_COUNT"
    },
    "ABILITY_ILF_WAVE_COUNT_NVC2": {
        "body": "ABILITY_ILF_WAVE_COUNT_NVC2",
        "description": "ConvertAbilityIntegerLevelField('Nvc2')",
        "prefix": "ABILITY_ILF_WAVE_COUNT_NVC2"
    },
    "ABILITY_ILF_PREFER_HOSTILES_TAU1": {
        "body": "ABILITY_ILF_PREFER_HOSTILES_TAU1",
        "description": "ConvertAbilityIntegerLevelField('Tau1')",
        "prefix": "ABILITY_ILF_PREFER_HOSTILES_TAU1"
    },
    "ABILITY_ILF_PREFER_FRIENDLIES_TAU2": {
        "body": "ABILITY_ILF_PREFER_FRIENDLIES_TAU2",
        "description": "ConvertAbilityIntegerLevelField('Tau2')",
        "prefix": "ABILITY_ILF_PREFER_FRIENDLIES_TAU2"
    },
    "ABILITY_ILF_MAX_UNITS_TAU3": {
        "body": "ABILITY_ILF_MAX_UNITS_TAU3",
        "description": "ConvertAbilityIntegerLevelField('Tau3')",
        "prefix": "ABILITY_ILF_MAX_UNITS_TAU3"
    },
    "ABILITY_ILF_NUMBER_OF_PULSES": {
        "body": "ABILITY_ILF_NUMBER_OF_PULSES",
        "description": "ConvertAbilityIntegerLevelField('Tau4')",
        "prefix": "ABILITY_ILF_NUMBER_OF_PULSES"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1",
        "description": "ConvertAbilityIntegerLevelField('Hwe1')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1"
    },
    "ABILITY_ILF_SUMMONED_UNIT_UIN4": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_UIN4",
        "description": "ConvertAbilityIntegerLevelField('Uin4')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_UIN4"
    },
    "ABILITY_ILF_SUMMONED_UNIT_OSF1": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_OSF1",
        "description": "ConvertAbilityIntegerLevelField('Osf1')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_OSF1"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU",
        "description": "ConvertAbilityIntegerLevelField('Efnu')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU",
        "description": "ConvertAbilityIntegerLevelField('Nbau')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU",
        "description": "ConvertAbilityIntegerLevelField('Ntou')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU",
        "description": "ConvertAbilityIntegerLevelField('Esvu')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPES": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPES",
        "description": "ConvertAbilityIntegerLevelField('Nef1')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPES"
    },
    "ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU": {
        "body": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU",
        "description": "ConvertAbilityIntegerLevelField('Ndou')",
        "prefix": "ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU"
    },
    "ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU": {
        "body": "ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU",
        "description": "ConvertAbilityIntegerLevelField('Emeu')",
        "prefix": "ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU"
    },
    "ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE": {
        "body": "ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Aplu')",
        "prefix": "ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE"
    },
    "ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1": {
        "body": "ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1",
        "description": "ConvertAbilityIntegerLevelField('Btl1')",
        "prefix": "ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1"
    },
    "ABILITY_ILF_NEW_UNIT_TYPE": {
        "body": "ABILITY_ILF_NEW_UNIT_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Cha1')",
        "prefix": "ABILITY_ILF_NEW_UNIT_TYPE"
    },
    "ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1": {
        "body": "ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1",
        "description": "ConvertAbilityIntegerLevelField('ent1')",
        "prefix": "ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1"
    },
    "ABILITY_ILF_CORPSE_UNIT_TYPE": {
        "body": "ABILITY_ILF_CORPSE_UNIT_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Gydu')",
        "prefix": "ABILITY_ILF_CORPSE_UNIT_TYPE"
    },
    "ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1": {
        "body": "ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1",
        "description": "ConvertAbilityIntegerLevelField('Loa1')",
        "prefix": "ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1"
    },
    "ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK": {
        "body": "ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK",
        "description": "ConvertAbilityIntegerLevelField('Raiu')",
        "prefix": "ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK"
    },
    "ABILITY_ILF_WARD_UNIT_TYPE_STAU": {
        "body": "ABILITY_ILF_WARD_UNIT_TYPE_STAU",
        "description": "ConvertAbilityIntegerLevelField('Stau')",
        "prefix": "ABILITY_ILF_WARD_UNIT_TYPE_STAU"
    },
    "ABILITY_ILF_EFFECT_ABILITY": {
        "body": "ABILITY_ILF_EFFECT_ABILITY",
        "description": "ConvertAbilityIntegerLevelField('Iobu')",
        "prefix": "ABILITY_ILF_EFFECT_ABILITY"
    },
    "ABILITY_ILF_CONVERSION_UNIT": {
        "body": "ABILITY_ILF_CONVERSION_UNIT",
        "description": "ConvertAbilityIntegerLevelField('Ndc2')",
        "prefix": "ABILITY_ILF_CONVERSION_UNIT"
    },
    "ABILITY_ILF_UNIT_TO_PRESERVE": {
        "body": "ABILITY_ILF_UNIT_TO_PRESERVE",
        "description": "ConvertAbilityIntegerLevelField('Nsl1')",
        "prefix": "ABILITY_ILF_UNIT_TO_PRESERVE"
    },
    "ABILITY_ILF_UNIT_TYPE_ALLOWED": {
        "body": "ABILITY_ILF_UNIT_TYPE_ALLOWED",
        "description": "ConvertAbilityIntegerLevelField('Chl1')",
        "prefix": "ABILITY_ILF_UNIT_TYPE_ALLOWED"
    },
    "ABILITY_ILF_SWARM_UNIT_TYPE": {
        "body": "ABILITY_ILF_SWARM_UNIT_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Ulsu')",
        "prefix": "ABILITY_ILF_SWARM_UNIT_TYPE"
    },
    "ABILITY_ILF_RESULTING_UNIT_TYPE_COAU": {
        "body": "ABILITY_ILF_RESULTING_UNIT_TYPE_COAU",
        "description": "ConvertAbilityIntegerLevelField('coau')",
        "prefix": "ABILITY_ILF_RESULTING_UNIT_TYPE_COAU"
    },
    "ABILITY_ILF_UNIT_TYPE_EXHU": {
        "body": "ABILITY_ILF_UNIT_TYPE_EXHU",
        "description": "ConvertAbilityIntegerLevelField('exhu')",
        "prefix": "ABILITY_ILF_UNIT_TYPE_EXHU"
    },
    "ABILITY_ILF_WARD_UNIT_TYPE_HWDU": {
        "body": "ABILITY_ILF_WARD_UNIT_TYPE_HWDU",
        "description": "ConvertAbilityIntegerLevelField('hwdu')",
        "prefix": "ABILITY_ILF_WARD_UNIT_TYPE_HWDU"
    },
    "ABILITY_ILF_LURE_UNIT_TYPE": {
        "body": "ABILITY_ILF_LURE_UNIT_TYPE",
        "description": "ConvertAbilityIntegerLevelField('imou')",
        "prefix": "ABILITY_ILF_LURE_UNIT_TYPE"
    },
    "ABILITY_ILF_UNIT_TYPE_IPMU": {
        "body": "ABILITY_ILF_UNIT_TYPE_IPMU",
        "description": "ConvertAbilityIntegerLevelField('ipmu')",
        "prefix": "ABILITY_ILF_UNIT_TYPE_IPMU"
    },
    "ABILITY_ILF_FACTORY_UNIT_ID": {
        "body": "ABILITY_ILF_FACTORY_UNIT_ID",
        "description": "ConvertAbilityIntegerLevelField('Nsyu')",
        "prefix": "ABILITY_ILF_FACTORY_UNIT_ID"
    },
    "ABILITY_ILF_SPAWN_UNIT_ID_NFYU": {
        "body": "ABILITY_ILF_SPAWN_UNIT_ID_NFYU",
        "description": "ConvertAbilityIntegerLevelField('Nfyu')",
        "prefix": "ABILITY_ILF_SPAWN_UNIT_ID_NFYU"
    },
    "ABILITY_ILF_DESTRUCTIBLE_ID": {
        "body": "ABILITY_ILF_DESTRUCTIBLE_ID",
        "description": "ConvertAbilityIntegerLevelField('Nvcu')",
        "prefix": "ABILITY_ILF_DESTRUCTIBLE_ID"
    },
    "ABILITY_ILF_UPGRADE_TYPE": {
        "body": "ABILITY_ILF_UPGRADE_TYPE",
        "description": "ConvertAbilityIntegerLevelField('Iglu')",
        "prefix": "ABILITY_ILF_UPGRADE_TYPE"
    },
    "ABILITY_RLF_CASTING_TIME": {
        "body": "ABILITY_RLF_CASTING_TIME",
        "description": "ConvertAbilityRealLevelField('acas')",
        "prefix": "ABILITY_RLF_CASTING_TIME"
    },
    "ABILITY_RLF_DURATION_NORMAL": {
        "body": "ABILITY_RLF_DURATION_NORMAL",
        "description": "ConvertAbilityRealLevelField('adur')",
        "prefix": "ABILITY_RLF_DURATION_NORMAL"
    },
    "ABILITY_RLF_DURATION_HERO": {
        "body": "ABILITY_RLF_DURATION_HERO",
        "description": "ConvertAbilityRealLevelField('ahdu')",
        "prefix": "ABILITY_RLF_DURATION_HERO"
    },
    "ABILITY_RLF_COOLDOWN": {
        "body": "ABILITY_RLF_COOLDOWN",
        "description": "ConvertAbilityRealLevelField('acdn')",
        "prefix": "ABILITY_RLF_COOLDOWN"
    },
    "ABILITY_RLF_AREA_OF_EFFECT": {
        "body": "ABILITY_RLF_AREA_OF_EFFECT",
        "description": "ConvertAbilityRealLevelField('aare')",
        "prefix": "ABILITY_RLF_AREA_OF_EFFECT"
    },
    "ABILITY_RLF_CAST_RANGE": {
        "body": "ABILITY_RLF_CAST_RANGE",
        "description": "ConvertAbilityRealLevelField('aran')",
        "prefix": "ABILITY_RLF_CAST_RANGE"
    },
    "ABILITY_RLF_DAMAGE_HBZ2": {
        "body": "ABILITY_RLF_DAMAGE_HBZ2",
        "description": "ConvertAbilityRealLevelField('Hbz2')",
        "prefix": "ABILITY_RLF_DAMAGE_HBZ2"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_HBZ4": {
        "body": "ABILITY_RLF_BUILDING_REDUCTION_HBZ4",
        "description": "ConvertAbilityRealLevelField('Hbz4')",
        "prefix": "ABILITY_RLF_BUILDING_REDUCTION_HBZ4"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5",
        "description": "ConvertAbilityRealLevelField('Hbz5')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE": {
        "body": "ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE",
        "description": "ConvertAbilityRealLevelField('Hbz6')",
        "prefix": "ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE"
    },
    "ABILITY_RLF_MANA_REGENERATION_INCREASE": {
        "body": "ABILITY_RLF_MANA_REGENERATION_INCREASE",
        "description": "ConvertAbilityRealLevelField('Hab1')",
        "prefix": "ABILITY_RLF_MANA_REGENERATION_INCREASE"
    },
    "ABILITY_RLF_CASTING_DELAY": {
        "body": "ABILITY_RLF_CASTING_DELAY",
        "description": "ConvertAbilityRealLevelField('Hmt2')",
        "prefix": "ABILITY_RLF_CASTING_DELAY"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_OWW1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_OWW1",
        "description": "ConvertAbilityRealLevelField('Oww1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_OWW1"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2",
        "description": "ConvertAbilityRealLevelField('Oww2')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2"
    },
    "ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE": {
        "body": "ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE",
        "description": "ConvertAbilityRealLevelField('Ocr1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2": {
        "body": "ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2",
        "description": "ConvertAbilityRealLevelField('Ocr2')",
        "prefix": "ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2"
    },
    "ABILITY_RLF_DAMAGE_BONUS_OCR3": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_OCR3",
        "description": "ConvertAbilityRealLevelField('Ocr3')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_OCR3"
    },
    "ABILITY_RLF_CHANCE_TO_EVADE_OCR4": {
        "body": "ABILITY_RLF_CHANCE_TO_EVADE_OCR4",
        "description": "ConvertAbilityRealLevelField('Ocr4')",
        "prefix": "ABILITY_RLF_CHANCE_TO_EVADE_OCR4"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2",
        "description": "ConvertAbilityRealLevelField('Omi2')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3": {
        "body": "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3",
        "description": "ConvertAbilityRealLevelField('Omi3')",
        "prefix": "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3"
    },
    "ABILITY_RLF_ANIMATION_DELAY": {
        "body": "ABILITY_RLF_ANIMATION_DELAY",
        "description": "ConvertAbilityRealLevelField('Omi4')",
        "prefix": "ABILITY_RLF_ANIMATION_DELAY"
    },
    "ABILITY_RLF_TRANSITION_TIME": {
        "body": "ABILITY_RLF_TRANSITION_TIME",
        "description": "ConvertAbilityRealLevelField('Owk1')",
        "prefix": "ABILITY_RLF_TRANSITION_TIME"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2",
        "description": "ConvertAbilityRealLevelField('Owk2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2"
    },
    "ABILITY_RLF_BACKSTAB_DAMAGE": {
        "body": "ABILITY_RLF_BACKSTAB_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Owk3')",
        "prefix": "ABILITY_RLF_BACKSTAB_DAMAGE"
    },
    "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1": {
        "body": "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1",
        "description": "ConvertAbilityRealLevelField('Udc1')",
        "prefix": "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1"
    },
    "ABILITY_RLF_LIFE_CONVERTED_TO_MANA": {
        "body": "ABILITY_RLF_LIFE_CONVERTED_TO_MANA",
        "description": "ConvertAbilityRealLevelField('Udp1')",
        "prefix": "ABILITY_RLF_LIFE_CONVERTED_TO_MANA"
    },
    "ABILITY_RLF_LIFE_CONVERTED_TO_LIFE": {
        "body": "ABILITY_RLF_LIFE_CONVERTED_TO_LIFE",
        "description": "ConvertAbilityRealLevelField('Udp2')",
        "prefix": "ABILITY_RLF_LIFE_CONVERTED_TO_LIFE"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1",
        "description": "ConvertAbilityRealLevelField('Uau1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1"
    },
    "ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT": {
        "body": "ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT",
        "description": "ConvertAbilityRealLevelField('Uau2')",
        "prefix": "ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT"
    },
    "ABILITY_RLF_CHANCE_TO_EVADE_EEV1": {
        "body": "ABILITY_RLF_CHANCE_TO_EVADE_EEV1",
        "description": "ConvertAbilityRealLevelField('Eev1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_EVADE_EEV1"
    },
    "ABILITY_RLF_DAMAGE_PER_INTERVAL": {
        "body": "ABILITY_RLF_DAMAGE_PER_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Eim1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_INTERVAL"
    },
    "ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2": {
        "body": "ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2",
        "description": "ConvertAbilityRealLevelField('Eim2')",
        "prefix": "ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2"
    },
    "ABILITY_RLF_BUFFER_MANA_REQUIRED": {
        "body": "ABILITY_RLF_BUFFER_MANA_REQUIRED",
        "description": "ConvertAbilityRealLevelField('Eim3')",
        "prefix": "ABILITY_RLF_BUFFER_MANA_REQUIRED"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED": {
        "body": "ABILITY_RLF_MAX_MANA_DRAINED",
        "description": "ConvertAbilityRealLevelField('Emb1')",
        "prefix": "ABILITY_RLF_MAX_MANA_DRAINED"
    },
    "ABILITY_RLF_BOLT_DELAY": {
        "body": "ABILITY_RLF_BOLT_DELAY",
        "description": "ConvertAbilityRealLevelField('Emb2')",
        "prefix": "ABILITY_RLF_BOLT_DELAY"
    },
    "ABILITY_RLF_BOLT_LIFETIME": {
        "body": "ABILITY_RLF_BOLT_LIFETIME",
        "description": "ConvertAbilityRealLevelField('Emb3')",
        "prefix": "ABILITY_RLF_BOLT_LIFETIME"
    },
    "ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION": {
        "body": "ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION",
        "description": "ConvertAbilityRealLevelField('Eme3')",
        "prefix": "ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION"
    },
    "ABILITY_RLF_LANDING_DELAY_TIME": {
        "body": "ABILITY_RLF_LANDING_DELAY_TIME",
        "description": "ConvertAbilityRealLevelField('Eme4')",
        "prefix": "ABILITY_RLF_LANDING_DELAY_TIME"
    },
    "ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS": {
        "body": "ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS",
        "description": "ConvertAbilityRealLevelField('Eme5')",
        "prefix": "ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY": {
        "body": "ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY",
        "description": "ConvertAbilityRealLevelField('Ncr5')",
        "prefix": "ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY"
    },
    "ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY": {
        "body": "ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY",
        "description": "ConvertAbilityRealLevelField('Ncr6')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY"
    },
    "ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND": {
        "body": "ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('ave5')",
        "prefix": "ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND"
    },
    "ABILITY_RLF_STUN_DURATION_USL1": {
        "body": "ABILITY_RLF_STUN_DURATION_USL1",
        "description": "ConvertAbilityRealLevelField('Usl1')",
        "prefix": "ABILITY_RLF_STUN_DURATION_USL1"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT": {
        "body": "ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT",
        "description": "ConvertAbilityRealLevelField('Uav1')",
        "prefix": "ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT"
    },
    "ABILITY_RLF_DAMAGE_UCS1": {
        "body": "ABILITY_RLF_DAMAGE_UCS1",
        "description": "ConvertAbilityRealLevelField('Ucs1')",
        "prefix": "ABILITY_RLF_DAMAGE_UCS1"
    },
    "ABILITY_RLF_MAX_DAMAGE_UCS2": {
        "body": "ABILITY_RLF_MAX_DAMAGE_UCS2",
        "description": "ConvertAbilityRealLevelField('Ucs2')",
        "prefix": "ABILITY_RLF_MAX_DAMAGE_UCS2"
    },
    "ABILITY_RLF_DISTANCE_UCS3": {
        "body": "ABILITY_RLF_DISTANCE_UCS3",
        "description": "ConvertAbilityRealLevelField('Ucs3')",
        "prefix": "ABILITY_RLF_DISTANCE_UCS3"
    },
    "ABILITY_RLF_FINAL_AREA_UCS4": {
        "body": "ABILITY_RLF_FINAL_AREA_UCS4",
        "description": "ConvertAbilityRealLevelField('Ucs4')",
        "prefix": "ABILITY_RLF_FINAL_AREA_UCS4"
    },
    "ABILITY_RLF_DAMAGE_UIN1": {
        "body": "ABILITY_RLF_DAMAGE_UIN1",
        "description": "ConvertAbilityRealLevelField('Uin1')",
        "prefix": "ABILITY_RLF_DAMAGE_UIN1"
    },
    "ABILITY_RLF_DURATION": {
        "body": "ABILITY_RLF_DURATION",
        "description": "ConvertAbilityRealLevelField('Uin2')",
        "prefix": "ABILITY_RLF_DURATION"
    },
    "ABILITY_RLF_IMPACT_DELAY": {
        "body": "ABILITY_RLF_IMPACT_DELAY",
        "description": "ConvertAbilityRealLevelField('Uin3')",
        "prefix": "ABILITY_RLF_IMPACT_DELAY"
    },
    "ABILITY_RLF_DAMAGE_PER_TARGET_OCL1": {
        "body": "ABILITY_RLF_DAMAGE_PER_TARGET_OCL1",
        "description": "ConvertAbilityRealLevelField('Ocl1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_TARGET_OCL1"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET": {
        "body": "ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET",
        "description": "ConvertAbilityRealLevelField('Ocl3')",
        "prefix": "ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET"
    },
    "ABILITY_RLF_EFFECT_DELAY_OEQ1": {
        "body": "ABILITY_RLF_EFFECT_DELAY_OEQ1",
        "description": "ConvertAbilityRealLevelField('Oeq1')",
        "prefix": "ABILITY_RLF_EFFECT_DELAY_OEQ1"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS",
        "description": "ConvertAbilityRealLevelField('Oeq2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS"
    },
    "ABILITY_RLF_UNITS_SLOWED_PERCENT": {
        "body": "ABILITY_RLF_UNITS_SLOWED_PERCENT",
        "description": "ConvertAbilityRealLevelField('Oeq3')",
        "prefix": "ABILITY_RLF_UNITS_SLOWED_PERCENT"
    },
    "ABILITY_RLF_FINAL_AREA_OEQ4": {
        "body": "ABILITY_RLF_FINAL_AREA_OEQ4",
        "description": "ConvertAbilityRealLevelField('Oeq4')",
        "prefix": "ABILITY_RLF_FINAL_AREA_OEQ4"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_EER1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_EER1",
        "description": "ConvertAbilityRealLevelField('Eer1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_EER1"
    },
    "ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS",
        "description": "ConvertAbilityRealLevelField('Eah1')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS"
    },
    "ABILITY_RLF_LIFE_HEALED": {
        "body": "ABILITY_RLF_LIFE_HEALED",
        "description": "ConvertAbilityRealLevelField('Etq1')",
        "prefix": "ABILITY_RLF_LIFE_HEALED"
    },
    "ABILITY_RLF_HEAL_INTERVAL": {
        "body": "ABILITY_RLF_HEAL_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Etq2')",
        "prefix": "ABILITY_RLF_HEAL_INTERVAL"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_ETQ3": {
        "body": "ABILITY_RLF_BUILDING_REDUCTION_ETQ3",
        "description": "ConvertAbilityRealLevelField('Etq3')",
        "prefix": "ABILITY_RLF_BUILDING_REDUCTION_ETQ3"
    },
    "ABILITY_RLF_INITIAL_IMMUNITY_DURATION": {
        "body": "ABILITY_RLF_INITIAL_IMMUNITY_DURATION",
        "description": "ConvertAbilityRealLevelField('Etq4')",
        "prefix": "ABILITY_RLF_INITIAL_IMMUNITY_DURATION"
    },
    "ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT": {
        "body": "ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT",
        "description": "ConvertAbilityRealLevelField('Udd1')",
        "prefix": "ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_UDD2": {
        "body": "ABILITY_RLF_BUILDING_REDUCTION_UDD2",
        "description": "ConvertAbilityRealLevelField('Udd2')",
        "prefix": "ABILITY_RLF_BUILDING_REDUCTION_UDD2"
    },
    "ABILITY_RLF_ARMOR_DURATION": {
        "body": "ABILITY_RLF_ARMOR_DURATION",
        "description": "ConvertAbilityRealLevelField('Ufa1')",
        "prefix": "ABILITY_RLF_ARMOR_DURATION"
    },
    "ABILITY_RLF_ARMOR_BONUS_UFA2": {
        "body": "ABILITY_RLF_ARMOR_BONUS_UFA2",
        "description": "ConvertAbilityRealLevelField('Ufa2')",
        "prefix": "ABILITY_RLF_ARMOR_BONUS_UFA2"
    },
    "ABILITY_RLF_AREA_OF_EFFECT_DAMAGE": {
        "body": "ABILITY_RLF_AREA_OF_EFFECT_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Ufn1')",
        "prefix": "ABILITY_RLF_AREA_OF_EFFECT_DAMAGE"
    },
    "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2": {
        "body": "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2",
        "description": "ConvertAbilityRealLevelField('Ufn2')",
        "prefix": "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HFA1": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_HFA1",
        "description": "ConvertAbilityRealLevelField('Hfa1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_HFA1"
    },
    "ABILITY_RLF_DAMAGE_DEALT_ESF1": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_ESF1",
        "description": "ConvertAbilityRealLevelField('Esf1')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_ESF1"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_ESF2": {
        "body": "ABILITY_RLF_DAMAGE_INTERVAL_ESF2",
        "description": "ConvertAbilityRealLevelField('Esf2')",
        "prefix": "ABILITY_RLF_DAMAGE_INTERVAL_ESF2"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_ESF3": {
        "body": "ABILITY_RLF_BUILDING_REDUCTION_ESF3",
        "description": "ConvertAbilityRealLevelField('Esf3')",
        "prefix": "ABILITY_RLF_BUILDING_REDUCTION_ESF3"
    },
    "ABILITY_RLF_DAMAGE_BONUS_PERCENT": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Ear1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_PERCENT"
    },
    "ABILITY_RLF_DEFENSE_BONUS_HAV1": {
        "body": "ABILITY_RLF_DEFENSE_BONUS_HAV1",
        "description": "ConvertAbilityRealLevelField('Hav1')",
        "prefix": "ABILITY_RLF_DEFENSE_BONUS_HAV1"
    },
    "ABILITY_RLF_HIT_POINT_BONUS": {
        "body": "ABILITY_RLF_HIT_POINT_BONUS",
        "description": "ConvertAbilityRealLevelField('Hav2')",
        "prefix": "ABILITY_RLF_HIT_POINT_BONUS"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HAV3": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_HAV3",
        "description": "ConvertAbilityRealLevelField('Hav3')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_HAV3"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4",
        "description": "ConvertAbilityRealLevelField('Hav4')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4"
    },
    "ABILITY_RLF_CHANCE_TO_BASH": {
        "body": "ABILITY_RLF_CHANCE_TO_BASH",
        "description": "ConvertAbilityRealLevelField('Hbh1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_BASH"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2": {
        "body": "ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2",
        "description": "ConvertAbilityRealLevelField('Hbh2')",
        "prefix": "ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2"
    },
    "ABILITY_RLF_DAMAGE_BONUS_HBH3": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_HBH3",
        "description": "ConvertAbilityRealLevelField('Hbh3')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_HBH3"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_HBH4": {
        "body": "ABILITY_RLF_CHANCE_TO_MISS_HBH4",
        "description": "ConvertAbilityRealLevelField('Hbh4')",
        "prefix": "ABILITY_RLF_CHANCE_TO_MISS_HBH4"
    },
    "ABILITY_RLF_DAMAGE_HTB1": {
        "body": "ABILITY_RLF_DAMAGE_HTB1",
        "description": "ConvertAbilityRealLevelField('Htb1')",
        "prefix": "ABILITY_RLF_DAMAGE_HTB1"
    },
    "ABILITY_RLF_AOE_DAMAGE": {
        "body": "ABILITY_RLF_AOE_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Htc1')",
        "prefix": "ABILITY_RLF_AOE_DAMAGE"
    },
    "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2": {
        "body": "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2",
        "description": "ConvertAbilityRealLevelField('Htc2')",
        "prefix": "ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3",
        "description": "ConvertAbilityRealLevelField('Htc3')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4",
        "description": "ConvertAbilityRealLevelField('Htc4')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4"
    },
    "ABILITY_RLF_ARMOR_BONUS_HAD1": {
        "body": "ABILITY_RLF_ARMOR_BONUS_HAD1",
        "description": "ConvertAbilityRealLevelField('Had1')",
        "prefix": "ABILITY_RLF_ARMOR_BONUS_HAD1"
    },
    "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1": {
        "body": "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1",
        "description": "ConvertAbilityRealLevelField('Hhb1')",
        "prefix": "ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_HCA1": {
        "body": "ABILITY_RLF_EXTRA_DAMAGE_HCA1",
        "description": "ConvertAbilityRealLevelField('Hca1')",
        "prefix": "ABILITY_RLF_EXTRA_DAMAGE_HCA1"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2",
        "description": "ConvertAbilityRealLevelField('Hca2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3",
        "description": "ConvertAbilityRealLevelField('Hca3')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1",
        "description": "ConvertAbilityRealLevelField('Oae1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2",
        "description": "ConvertAbilityRealLevelField('Oae2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2"
    },
    "ABILITY_RLF_REINCARNATION_DELAY": {
        "body": "ABILITY_RLF_REINCARNATION_DELAY",
        "description": "ConvertAbilityRealLevelField('Ore1')",
        "prefix": "ABILITY_RLF_REINCARNATION_DELAY"
    },
    "ABILITY_RLF_DAMAGE_OSH1": {
        "body": "ABILITY_RLF_DAMAGE_OSH1",
        "description": "ConvertAbilityRealLevelField('Osh1')",
        "prefix": "ABILITY_RLF_DAMAGE_OSH1"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_OSH2": {
        "body": "ABILITY_RLF_MAXIMUM_DAMAGE_OSH2",
        "description": "ConvertAbilityRealLevelField('Osh2')",
        "prefix": "ABILITY_RLF_MAXIMUM_DAMAGE_OSH2"
    },
    "ABILITY_RLF_DISTANCE_OSH3": {
        "body": "ABILITY_RLF_DISTANCE_OSH3",
        "description": "ConvertAbilityRealLevelField('Osh3')",
        "prefix": "ABILITY_RLF_DISTANCE_OSH3"
    },
    "ABILITY_RLF_FINAL_AREA_OSH4": {
        "body": "ABILITY_RLF_FINAL_AREA_OSH4",
        "description": "ConvertAbilityRealLevelField('Osh4')",
        "prefix": "ABILITY_RLF_FINAL_AREA_OSH4"
    },
    "ABILITY_RLF_GRAPHIC_DELAY_NFD1": {
        "body": "ABILITY_RLF_GRAPHIC_DELAY_NFD1",
        "description": "ConvertAbilityRealLevelField('Nfd1')",
        "prefix": "ABILITY_RLF_GRAPHIC_DELAY_NFD1"
    },
    "ABILITY_RLF_GRAPHIC_DURATION_NFD2": {
        "body": "ABILITY_RLF_GRAPHIC_DURATION_NFD2",
        "description": "ConvertAbilityRealLevelField('Nfd2')",
        "prefix": "ABILITY_RLF_GRAPHIC_DURATION_NFD2"
    },
    "ABILITY_RLF_DAMAGE_NFD3": {
        "body": "ABILITY_RLF_DAMAGE_NFD3",
        "description": "ConvertAbilityRealLevelField('Nfd3')",
        "prefix": "ABILITY_RLF_DAMAGE_NFD3"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1",
        "description": "ConvertAbilityRealLevelField('Ams1')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2",
        "description": "ConvertAbilityRealLevelField('Ams2')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2"
    },
    "ABILITY_RLF_AURA_DURATION": {
        "body": "ABILITY_RLF_AURA_DURATION",
        "description": "ConvertAbilityRealLevelField('Apl1')",
        "prefix": "ABILITY_RLF_AURA_DURATION"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_APL2": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_APL2",
        "description": "ConvertAbilityRealLevelField('Apl2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_APL2"
    },
    "ABILITY_RLF_DURATION_OF_PLAGUE_WARD": {
        "body": "ABILITY_RLF_DURATION_OF_PLAGUE_WARD",
        "description": "ConvertAbilityRealLevelField('Apl3')",
        "prefix": "ABILITY_RLF_DURATION_OF_PLAGUE_WARD"
    },
    "ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED": {
        "body": "ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED",
        "description": "ConvertAbilityRealLevelField('Oar1')",
        "prefix": "ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1": {
        "body": "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1",
        "description": "ConvertAbilityRealLevelField('Akb1')",
        "prefix": "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1"
    },
    "ABILITY_RLF_MANA_LOSS_ADM1": {
        "body": "ABILITY_RLF_MANA_LOSS_ADM1",
        "description": "ConvertAbilityRealLevelField('Adm1')",
        "prefix": "ABILITY_RLF_MANA_LOSS_ADM1"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2",
        "description": "ConvertAbilityRealLevelField('Adm2')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2"
    },
    "ABILITY_RLF_EXPANSION_AMOUNT": {
        "body": "ABILITY_RLF_EXPANSION_AMOUNT",
        "description": "ConvertAbilityRealLevelField('Bli1')",
        "prefix": "ABILITY_RLF_EXPANSION_AMOUNT"
    },
    "ABILITY_RLF_INTERVAL_DURATION_BGM2": {
        "body": "ABILITY_RLF_INTERVAL_DURATION_BGM2",
        "description": "ConvertAbilityRealLevelField('Bgm2')",
        "prefix": "ABILITY_RLF_INTERVAL_DURATION_BGM2"
    },
    "ABILITY_RLF_RADIUS_OF_MINING_RING": {
        "body": "ABILITY_RLF_RADIUS_OF_MINING_RING",
        "description": "ConvertAbilityRealLevelField('Bgm4')",
        "prefix": "ABILITY_RLF_RADIUS_OF_MINING_RING"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1": {
        "body": "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1",
        "description": "ConvertAbilityRealLevelField('Blo1')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2",
        "description": "ConvertAbilityRealLevelField('Blo2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2"
    },
    "ABILITY_RLF_SCALING_FACTOR": {
        "body": "ABILITY_RLF_SCALING_FACTOR",
        "description": "ConvertAbilityRealLevelField('Blo3')",
        "prefix": "ABILITY_RLF_SCALING_FACTOR"
    },
    "ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1": {
        "body": "ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1",
        "description": "ConvertAbilityRealLevelField('Can1')",
        "prefix": "ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1"
    },
    "ABILITY_RLF_MAX_HIT_POINTS": {
        "body": "ABILITY_RLF_MAX_HIT_POINTS",
        "description": "ConvertAbilityRealLevelField('Can2')",
        "prefix": "ABILITY_RLF_MAX_HIT_POINTS"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_DEV2": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_DEV2",
        "description": "ConvertAbilityRealLevelField('Dev2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_DEV2"
    },
    "ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1": {
        "body": "ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1",
        "description": "ConvertAbilityRealLevelField('Chd1')",
        "prefix": "ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1"
    },
    "ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2": {
        "body": "ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2",
        "description": "ConvertAbilityRealLevelField('Chd2')",
        "prefix": "ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3",
        "description": "ConvertAbilityRealLevelField('Chd3')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1",
        "description": "ConvertAbilityRealLevelField('Cri1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2",
        "description": "ConvertAbilityRealLevelField('Cri2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_CRI3": {
        "body": "ABILITY_RLF_DAMAGE_REDUCTION_CRI3",
        "description": "ConvertAbilityRealLevelField('Cri3')",
        "prefix": "ABILITY_RLF_DAMAGE_REDUCTION_CRI3"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_CRS": {
        "body": "ABILITY_RLF_CHANCE_TO_MISS_CRS",
        "description": "ConvertAbilityRealLevelField('Crs1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_MISS_CRS"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1": {
        "body": "ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1",
        "description": "ConvertAbilityRealLevelField('Dda1')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2": {
        "body": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2",
        "description": "ConvertAbilityRealLevelField('Dda2')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2"
    },
    "ABILITY_RLF_PARTIAL_DAMAGE_RADIUS": {
        "body": "ABILITY_RLF_PARTIAL_DAMAGE_RADIUS",
        "description": "ConvertAbilityRealLevelField('Dda3')",
        "prefix": "ABILITY_RLF_PARTIAL_DAMAGE_RADIUS"
    },
    "ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT": {
        "body": "ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT",
        "description": "ConvertAbilityRealLevelField('Dda4')",
        "prefix": "ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1": {
        "body": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1",
        "description": "ConvertAbilityRealLevelField('Sds1')",
        "prefix": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1"
    },
    "ABILITY_RLF_MAX_DAMAGE_UCO5": {
        "body": "ABILITY_RLF_MAX_DAMAGE_UCO5",
        "description": "ConvertAbilityRealLevelField('Uco5')",
        "prefix": "ABILITY_RLF_MAX_DAMAGE_UCO5"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_UCO6": {
        "body": "ABILITY_RLF_MOVE_SPEED_BONUS_UCO6",
        "description": "ConvertAbilityRealLevelField('Uco6')",
        "prefix": "ABILITY_RLF_MOVE_SPEED_BONUS_UCO6"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1": {
        "body": "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1",
        "description": "ConvertAbilityRealLevelField('Def1')",
        "prefix": "ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2",
        "description": "ConvertAbilityRealLevelField('Def2')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3",
        "description": "ConvertAbilityRealLevelField('Def3')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4",
        "description": "ConvertAbilityRealLevelField('Def4')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5",
        "description": "ConvertAbilityRealLevelField('Def5')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5"
    },
    "ABILITY_RLF_CHANCE_TO_DEFLECT": {
        "body": "ABILITY_RLF_CHANCE_TO_DEFLECT",
        "description": "ConvertAbilityRealLevelField('Def6')",
        "prefix": "ABILITY_RLF_CHANCE_TO_DEFLECT"
    },
    "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING": {
        "body": "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING",
        "description": "ConvertAbilityRealLevelField('Def7')",
        "prefix": "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING"
    },
    "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS": {
        "body": "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS",
        "description": "ConvertAbilityRealLevelField('Def8')",
        "prefix": "ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS"
    },
    "ABILITY_RLF_RIP_DELAY": {
        "body": "ABILITY_RLF_RIP_DELAY",
        "description": "ConvertAbilityRealLevelField('Eat1')",
        "prefix": "ABILITY_RLF_RIP_DELAY"
    },
    "ABILITY_RLF_EAT_DELAY": {
        "body": "ABILITY_RLF_EAT_DELAY",
        "description": "ConvertAbilityRealLevelField('Eat2')",
        "prefix": "ABILITY_RLF_EAT_DELAY"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_EAT3": {
        "body": "ABILITY_RLF_HIT_POINTS_GAINED_EAT3",
        "description": "ConvertAbilityRealLevelField('Eat3')",
        "prefix": "ABILITY_RLF_HIT_POINTS_GAINED_EAT3"
    },
    "ABILITY_RLF_AIR_UNIT_LOWER_DURATION": {
        "body": "ABILITY_RLF_AIR_UNIT_LOWER_DURATION",
        "description": "ConvertAbilityRealLevelField('Ens1')",
        "prefix": "ABILITY_RLF_AIR_UNIT_LOWER_DURATION"
    },
    "ABILITY_RLF_AIR_UNIT_HEIGHT": {
        "body": "ABILITY_RLF_AIR_UNIT_HEIGHT",
        "description": "ConvertAbilityRealLevelField('Ens2')",
        "prefix": "ABILITY_RLF_AIR_UNIT_HEIGHT"
    },
    "ABILITY_RLF_MELEE_ATTACK_RANGE": {
        "body": "ABILITY_RLF_MELEE_ATTACK_RANGE",
        "description": "ConvertAbilityRealLevelField('Ens3')",
        "prefix": "ABILITY_RLF_MELEE_ATTACK_RANGE"
    },
    "ABILITY_RLF_INTERVAL_DURATION_EGM2": {
        "body": "ABILITY_RLF_INTERVAL_DURATION_EGM2",
        "description": "ConvertAbilityRealLevelField('Egm2')",
        "prefix": "ABILITY_RLF_INTERVAL_DURATION_EGM2"
    },
    "ABILITY_RLF_EFFECT_DELAY_FLA2": {
        "body": "ABILITY_RLF_EFFECT_DELAY_FLA2",
        "description": "ConvertAbilityRealLevelField('Fla2')",
        "prefix": "ABILITY_RLF_EFFECT_DELAY_FLA2"
    },
    "ABILITY_RLF_MINING_DURATION": {
        "body": "ABILITY_RLF_MINING_DURATION",
        "description": "ConvertAbilityRealLevelField('Gld2')",
        "prefix": "ABILITY_RLF_MINING_DURATION"
    },
    "ABILITY_RLF_RADIUS_OF_GRAVESTONES": {
        "body": "ABILITY_RLF_RADIUS_OF_GRAVESTONES",
        "description": "ConvertAbilityRealLevelField('Gyd2')",
        "prefix": "ABILITY_RLF_RADIUS_OF_GRAVESTONES"
    },
    "ABILITY_RLF_RADIUS_OF_CORPSES": {
        "body": "ABILITY_RLF_RADIUS_OF_CORPSES",
        "description": "ConvertAbilityRealLevelField('Gyd3')",
        "prefix": "ABILITY_RLF_RADIUS_OF_CORPSES"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_HEA1": {
        "body": "ABILITY_RLF_HIT_POINTS_GAINED_HEA1",
        "description": "ConvertAbilityRealLevelField('Hea1')",
        "prefix": "ABILITY_RLF_HIT_POINTS_GAINED_HEA1"
    },
    "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1": {
        "body": "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1",
        "description": "ConvertAbilityRealLevelField('Inf1')",
        "prefix": "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1"
    },
    "ABILITY_RLF_AUTOCAST_RANGE": {
        "body": "ABILITY_RLF_AUTOCAST_RANGE",
        "description": "ConvertAbilityRealLevelField('Inf3')",
        "prefix": "ABILITY_RLF_AUTOCAST_RANGE"
    },
    "ABILITY_RLF_LIFE_REGEN_RATE": {
        "body": "ABILITY_RLF_LIFE_REGEN_RATE",
        "description": "ConvertAbilityRealLevelField('Inf4')",
        "prefix": "ABILITY_RLF_LIFE_REGEN_RATE"
    },
    "ABILITY_RLF_GRAPHIC_DELAY_LIT1": {
        "body": "ABILITY_RLF_GRAPHIC_DELAY_LIT1",
        "description": "ConvertAbilityRealLevelField('Lit1')",
        "prefix": "ABILITY_RLF_GRAPHIC_DELAY_LIT1"
    },
    "ABILITY_RLF_GRAPHIC_DURATION_LIT2": {
        "body": "ABILITY_RLF_GRAPHIC_DURATION_LIT2",
        "description": "ConvertAbilityRealLevelField('Lit2')",
        "prefix": "ABILITY_RLF_GRAPHIC_DURATION_LIT2"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_LSH1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_LSH1",
        "description": "ConvertAbilityRealLevelField('Lsh1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_LSH1"
    },
    "ABILITY_RLF_MANA_GAINED": {
        "body": "ABILITY_RLF_MANA_GAINED",
        "description": "ConvertAbilityRealLevelField('Mbt1')",
        "prefix": "ABILITY_RLF_MANA_GAINED"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_MBT2": {
        "body": "ABILITY_RLF_HIT_POINTS_GAINED_MBT2",
        "description": "ConvertAbilityRealLevelField('Mbt2')",
        "prefix": "ABILITY_RLF_HIT_POINTS_GAINED_MBT2"
    },
    "ABILITY_RLF_AUTOCAST_REQUIREMENT": {
        "body": "ABILITY_RLF_AUTOCAST_REQUIREMENT",
        "description": "ConvertAbilityRealLevelField('Mbt3')",
        "prefix": "ABILITY_RLF_AUTOCAST_REQUIREMENT"
    },
    "ABILITY_RLF_WATER_HEIGHT": {
        "body": "ABILITY_RLF_WATER_HEIGHT",
        "description": "ConvertAbilityRealLevelField('Mbt4')",
        "prefix": "ABILITY_RLF_WATER_HEIGHT"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_MIN1": {
        "body": "ABILITY_RLF_ACTIVATION_DELAY_MIN1",
        "description": "ConvertAbilityRealLevelField('Min1')",
        "prefix": "ABILITY_RLF_ACTIVATION_DELAY_MIN1"
    },
    "ABILITY_RLF_INVISIBILITY_TRANSITION_TIME": {
        "body": "ABILITY_RLF_INVISIBILITY_TRANSITION_TIME",
        "description": "ConvertAbilityRealLevelField('Min2')",
        "prefix": "ABILITY_RLF_INVISIBILITY_TRANSITION_TIME"
    },
    "ABILITY_RLF_ACTIVATION_RADIUS": {
        "body": "ABILITY_RLF_ACTIVATION_RADIUS",
        "description": "ConvertAbilityRealLevelField('Neu1')",
        "prefix": "ABILITY_RLF_ACTIVATION_RADIUS"
    },
    "ABILITY_RLF_AMOUNT_REGENERATED": {
        "body": "ABILITY_RLF_AMOUNT_REGENERATED",
        "description": "ConvertAbilityRealLevelField('Arm1')",
        "prefix": "ABILITY_RLF_AMOUNT_REGENERATED"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_POI1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_POI1",
        "description": "ConvertAbilityRealLevelField('Poi1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_POI1"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2",
        "description": "ConvertAbilityRealLevelField('Poi2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3",
        "description": "ConvertAbilityRealLevelField('Poi3')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_POA1": {
        "body": "ABILITY_RLF_EXTRA_DAMAGE_POA1",
        "description": "ConvertAbilityRealLevelField('Poa1')",
        "prefix": "ABILITY_RLF_EXTRA_DAMAGE_POA1"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_POA2": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_POA2",
        "description": "ConvertAbilityRealLevelField('Poa2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_POA2"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3",
        "description": "ConvertAbilityRealLevelField('Poa3')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4",
        "description": "ConvertAbilityRealLevelField('Poa4')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4"
    },
    "ABILITY_RLF_DAMAGE_AMPLIFICATION": {
        "body": "ABILITY_RLF_DAMAGE_AMPLIFICATION",
        "description": "ConvertAbilityRealLevelField('Pos2')",
        "prefix": "ABILITY_RLF_DAMAGE_AMPLIFICATION"
    },
    "ABILITY_RLF_CHANCE_TO_STOMP_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_STOMP_PERCENT",
        "description": "ConvertAbilityRealLevelField('War1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_STOMP_PERCENT"
    },
    "ABILITY_RLF_DAMAGE_DEALT_WAR2": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_WAR2",
        "description": "ConvertAbilityRealLevelField('War2')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_WAR2"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3": {
        "body": "ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3",
        "description": "ConvertAbilityRealLevelField('War3')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3"
    },
    "ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4": {
        "body": "ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4",
        "description": "ConvertAbilityRealLevelField('War4')",
        "prefix": "ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3",
        "description": "ConvertAbilityRealLevelField('Prg3')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3"
    },
    "ABILITY_RLF_UNIT_PAUSE_DURATION": {
        "body": "ABILITY_RLF_UNIT_PAUSE_DURATION",
        "description": "ConvertAbilityRealLevelField('Prg4')",
        "prefix": "ABILITY_RLF_UNIT_PAUSE_DURATION"
    },
    "ABILITY_RLF_HERO_PAUSE_DURATION": {
        "body": "ABILITY_RLF_HERO_PAUSE_DURATION",
        "description": "ConvertAbilityRealLevelField('Prg5')",
        "prefix": "ABILITY_RLF_HERO_PAUSE_DURATION"
    },
    "ABILITY_RLF_HIT_POINTS_GAINED_REJ1": {
        "body": "ABILITY_RLF_HIT_POINTS_GAINED_REJ1",
        "description": "ConvertAbilityRealLevelField('Rej1')",
        "prefix": "ABILITY_RLF_HIT_POINTS_GAINED_REJ1"
    },
    "ABILITY_RLF_MANA_POINTS_GAINED_REJ2": {
        "body": "ABILITY_RLF_MANA_POINTS_GAINED_REJ2",
        "description": "ConvertAbilityRealLevelField('Rej2')",
        "prefix": "ABILITY_RLF_MANA_POINTS_GAINED_REJ2"
    },
    "ABILITY_RLF_MINIMUM_LIFE_REQUIRED": {
        "body": "ABILITY_RLF_MINIMUM_LIFE_REQUIRED",
        "description": "ConvertAbilityRealLevelField('Rpb3')",
        "prefix": "ABILITY_RLF_MINIMUM_LIFE_REQUIRED"
    },
    "ABILITY_RLF_MINIMUM_MANA_REQUIRED": {
        "body": "ABILITY_RLF_MINIMUM_MANA_REQUIRED",
        "description": "ConvertAbilityRealLevelField('Rpb4')",
        "prefix": "ABILITY_RLF_MINIMUM_MANA_REQUIRED"
    },
    "ABILITY_RLF_REPAIR_COST_RATIO": {
        "body": "ABILITY_RLF_REPAIR_COST_RATIO",
        "description": "ConvertAbilityRealLevelField('Rep1')",
        "prefix": "ABILITY_RLF_REPAIR_COST_RATIO"
    },
    "ABILITY_RLF_REPAIR_TIME_RATIO": {
        "body": "ABILITY_RLF_REPAIR_TIME_RATIO",
        "description": "ConvertAbilityRealLevelField('Rep2')",
        "prefix": "ABILITY_RLF_REPAIR_TIME_RATIO"
    },
    "ABILITY_RLF_POWERBUILD_COST": {
        "body": "ABILITY_RLF_POWERBUILD_COST",
        "description": "ConvertAbilityRealLevelField('Rep3')",
        "prefix": "ABILITY_RLF_POWERBUILD_COST"
    },
    "ABILITY_RLF_POWERBUILD_RATE": {
        "body": "ABILITY_RLF_POWERBUILD_RATE",
        "description": "ConvertAbilityRealLevelField('Rep4')",
        "prefix": "ABILITY_RLF_POWERBUILD_RATE"
    },
    "ABILITY_RLF_NAVAL_RANGE_BONUS": {
        "body": "ABILITY_RLF_NAVAL_RANGE_BONUS",
        "description": "ConvertAbilityRealLevelField('Rep5')",
        "prefix": "ABILITY_RLF_NAVAL_RANGE_BONUS"
    },
    "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1": {
        "body": "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1",
        "description": "ConvertAbilityRealLevelField('Roa1')",
        "prefix": "ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1"
    },
    "ABILITY_RLF_LIFE_REGENERATION_RATE": {
        "body": "ABILITY_RLF_LIFE_REGENERATION_RATE",
        "description": "ConvertAbilityRealLevelField('Roa3')",
        "prefix": "ABILITY_RLF_LIFE_REGENERATION_RATE"
    },
    "ABILITY_RLF_MANA_REGEN": {
        "body": "ABILITY_RLF_MANA_REGEN",
        "description": "ConvertAbilityRealLevelField('Roa4')",
        "prefix": "ABILITY_RLF_MANA_REGEN"
    },
    "ABILITY_RLF_DAMAGE_INCREASE": {
        "body": "ABILITY_RLF_DAMAGE_INCREASE",
        "description": "ConvertAbilityRealLevelField('Nbr1')",
        "prefix": "ABILITY_RLF_DAMAGE_INCREASE"
    },
    "ABILITY_RLF_SALVAGE_COST_RATIO": {
        "body": "ABILITY_RLF_SALVAGE_COST_RATIO",
        "description": "ConvertAbilityRealLevelField('Sal1')",
        "prefix": "ABILITY_RLF_SALVAGE_COST_RATIO"
    },
    "ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS": {
        "body": "ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS",
        "description": "ConvertAbilityRealLevelField('Esn1')",
        "prefix": "ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS"
    },
    "ABILITY_RLF_HOVERING_SIGHT_RADIUS": {
        "body": "ABILITY_RLF_HOVERING_SIGHT_RADIUS",
        "description": "ConvertAbilityRealLevelField('Esn2')",
        "prefix": "ABILITY_RLF_HOVERING_SIGHT_RADIUS"
    },
    "ABILITY_RLF_HOVERING_HEIGHT": {
        "body": "ABILITY_RLF_HOVERING_HEIGHT",
        "description": "ConvertAbilityRealLevelField('Esn3')",
        "prefix": "ABILITY_RLF_HOVERING_HEIGHT"
    },
    "ABILITY_RLF_DURATION_OF_OWLS": {
        "body": "ABILITY_RLF_DURATION_OF_OWLS",
        "description": "ConvertAbilityRealLevelField('Esn5')",
        "prefix": "ABILITY_RLF_DURATION_OF_OWLS"
    },
    "ABILITY_RLF_FADE_DURATION": {
        "body": "ABILITY_RLF_FADE_DURATION",
        "description": "ConvertAbilityRealLevelField('Shm1')",
        "prefix": "ABILITY_RLF_FADE_DURATION"
    },
    "ABILITY_RLF_DAY_NIGHT_DURATION": {
        "body": "ABILITY_RLF_DAY_NIGHT_DURATION",
        "description": "ConvertAbilityRealLevelField('Shm2')",
        "prefix": "ABILITY_RLF_DAY_NIGHT_DURATION"
    },
    "ABILITY_RLF_ACTION_DURATION": {
        "body": "ABILITY_RLF_ACTION_DURATION",
        "description": "ConvertAbilityRealLevelField('Shm3')",
        "prefix": "ABILITY_RLF_ACTION_DURATION"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1",
        "description": "ConvertAbilityRealLevelField('Slo1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2",
        "description": "ConvertAbilityRealLevelField('Slo2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_SPO1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_SPO1",
        "description": "ConvertAbilityRealLevelField('Spo1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_SPO1"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2",
        "description": "ConvertAbilityRealLevelField('Spo2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3",
        "description": "ConvertAbilityRealLevelField('Spo3')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_STA1": {
        "body": "ABILITY_RLF_ACTIVATION_DELAY_STA1",
        "description": "ConvertAbilityRealLevelField('Sta1')",
        "prefix": "ABILITY_RLF_ACTIVATION_DELAY_STA1"
    },
    "ABILITY_RLF_DETECTION_RADIUS_STA2": {
        "body": "ABILITY_RLF_DETECTION_RADIUS_STA2",
        "description": "ConvertAbilityRealLevelField('Sta2')",
        "prefix": "ABILITY_RLF_DETECTION_RADIUS_STA2"
    },
    "ABILITY_RLF_DETONATION_RADIUS": {
        "body": "ABILITY_RLF_DETONATION_RADIUS",
        "description": "ConvertAbilityRealLevelField('Sta3')",
        "prefix": "ABILITY_RLF_DETONATION_RADIUS"
    },
    "ABILITY_RLF_STUN_DURATION_STA4": {
        "body": "ABILITY_RLF_STUN_DURATION_STA4",
        "description": "ConvertAbilityRealLevelField('Sta4')",
        "prefix": "ABILITY_RLF_STUN_DURATION_STA4"
    },
    "ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT": {
        "body": "ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Uhf1')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_UHF2": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_UHF2",
        "description": "ConvertAbilityRealLevelField('Uhf2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_UHF2"
    },
    "ABILITY_RLF_LUMBER_PER_INTERVAL": {
        "body": "ABILITY_RLF_LUMBER_PER_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Wha1')",
        "prefix": "ABILITY_RLF_LUMBER_PER_INTERVAL"
    },
    "ABILITY_RLF_ART_ATTACHMENT_HEIGHT": {
        "body": "ABILITY_RLF_ART_ATTACHMENT_HEIGHT",
        "description": "ConvertAbilityRealLevelField('Wha3')",
        "prefix": "ABILITY_RLF_ART_ATTACHMENT_HEIGHT"
    },
    "ABILITY_RLF_TELEPORT_AREA_WIDTH": {
        "body": "ABILITY_RLF_TELEPORT_AREA_WIDTH",
        "description": "ConvertAbilityRealLevelField('Wrp1')",
        "prefix": "ABILITY_RLF_TELEPORT_AREA_WIDTH"
    },
    "ABILITY_RLF_TELEPORT_AREA_HEIGHT": {
        "body": "ABILITY_RLF_TELEPORT_AREA_HEIGHT",
        "description": "ConvertAbilityRealLevelField('Wrp2')",
        "prefix": "ABILITY_RLF_TELEPORT_AREA_HEIGHT"
    },
    "ABILITY_RLF_LIFE_STOLEN_PER_ATTACK": {
        "body": "ABILITY_RLF_LIFE_STOLEN_PER_ATTACK",
        "description": "ConvertAbilityRealLevelField('Ivam')",
        "prefix": "ABILITY_RLF_LIFE_STOLEN_PER_ATTACK"
    },
    "ABILITY_RLF_DAMAGE_BONUS_IDAM": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_IDAM",
        "description": "ConvertAbilityRealLevelField('Idam')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_IDAM"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Iob2')",
        "prefix": "ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Iob3')",
        "prefix": "ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT"
    },
    "ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Iob4')",
        "prefix": "ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT"
    },
    "ABILITY_RLF_DELAY_FOR_TARGET_EFFECT": {
        "body": "ABILITY_RLF_DELAY_FOR_TARGET_EFFECT",
        "description": "ConvertAbilityRealLevelField('Idel')",
        "prefix": "ABILITY_RLF_DELAY_FOR_TARGET_EFFECT"
    },
    "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL",
        "description": "ConvertAbilityRealLevelField('Iild')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL"
    },
    "ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER": {
        "body": "ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER",
        "description": "ConvertAbilityRealLevelField('Iilw')",
        "prefix": "ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER"
    },
    "ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL": {
        "body": "ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL",
        "description": "ConvertAbilityRealLevelField('Imrp')",
        "prefix": "ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI",
        "description": "ConvertAbilityRealLevelField('Ispi')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_IDPS": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_IDPS",
        "description": "ConvertAbilityRealLevelField('Idps')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_IDPS"
    },
    "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1": {
        "body": "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1",
        "description": "ConvertAbilityRealLevelField('Cac1')",
        "prefix": "ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_COR1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_COR1",
        "description": "ConvertAbilityRealLevelField('Cor1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_COR1"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1": {
        "body": "ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1",
        "description": "ConvertAbilityRealLevelField('Isx1')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1"
    },
    "ABILITY_RLF_DAMAGE_WRS1": {
        "body": "ABILITY_RLF_DAMAGE_WRS1",
        "description": "ConvertAbilityRealLevelField('Wrs1')",
        "prefix": "ABILITY_RLF_DAMAGE_WRS1"
    },
    "ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE": {
        "body": "ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE",
        "description": "ConvertAbilityRealLevelField('Wrs2')",
        "prefix": "ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE"
    },
    "ABILITY_RLF_DAMAGE_CTC1": {
        "body": "ABILITY_RLF_DAMAGE_CTC1",
        "description": "ConvertAbilityRealLevelField('Ctc1')",
        "prefix": "ABILITY_RLF_DAMAGE_CTC1"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET": {
        "body": "ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET",
        "description": "ConvertAbilityRealLevelField('Ctc2')",
        "prefix": "ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3",
        "description": "ConvertAbilityRealLevelField('Ctc3')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4",
        "description": "ConvertAbilityRealLevelField('Ctc4')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4"
    },
    "ABILITY_RLF_DAMAGE_CTB1": {
        "body": "ABILITY_RLF_DAMAGE_CTB1",
        "description": "ConvertAbilityRealLevelField('Ctb1')",
        "prefix": "ABILITY_RLF_DAMAGE_CTB1"
    },
    "ABILITY_RLF_CASTING_DELAY_SECONDS": {
        "body": "ABILITY_RLF_CASTING_DELAY_SECONDS",
        "description": "ConvertAbilityRealLevelField('Uds2')",
        "prefix": "ABILITY_RLF_CASTING_DELAY_SECONDS"
    },
    "ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1": {
        "body": "ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1",
        "description": "ConvertAbilityRealLevelField('Dtn1')",
        "prefix": "ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1"
    },
    "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2": {
        "body": "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2",
        "description": "ConvertAbilityRealLevelField('Dtn2')",
        "prefix": "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2"
    },
    "ABILITY_RLF_TRANSITION_TIME_SECONDS": {
        "body": "ABILITY_RLF_TRANSITION_TIME_SECONDS",
        "description": "ConvertAbilityRealLevelField('Ivs1')",
        "prefix": "ABILITY_RLF_TRANSITION_TIME_SECONDS"
    },
    "ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1": {
        "body": "ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1",
        "description": "ConvertAbilityRealLevelField('Nmr1')",
        "prefix": "ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1"
    },
    "ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT",
        "description": "ConvertAbilityRealLevelField('Ssk1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT"
    },
    "ABILITY_RLF_MINIMUM_DAMAGE": {
        "body": "ABILITY_RLF_MINIMUM_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Ssk2')",
        "prefix": "ABILITY_RLF_MINIMUM_DAMAGE"
    },
    "ABILITY_RLF_IGNORED_DAMAGE": {
        "body": "ABILITY_RLF_IGNORED_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Ssk3')",
        "prefix": "ABILITY_RLF_IGNORED_DAMAGE"
    },
    "ABILITY_RLF_FULL_DAMAGE_DEALT": {
        "body": "ABILITY_RLF_FULL_DAMAGE_DEALT",
        "description": "ConvertAbilityRealLevelField('Hfs1')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_DEALT"
    },
    "ABILITY_RLF_FULL_DAMAGE_INTERVAL": {
        "body": "ABILITY_RLF_FULL_DAMAGE_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Hfs2')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_INTERVAL"
    },
    "ABILITY_RLF_HALF_DAMAGE_DEALT": {
        "body": "ABILITY_RLF_HALF_DAMAGE_DEALT",
        "description": "ConvertAbilityRealLevelField('Hfs3')",
        "prefix": "ABILITY_RLF_HALF_DAMAGE_DEALT"
    },
    "ABILITY_RLF_HALF_DAMAGE_INTERVAL": {
        "body": "ABILITY_RLF_HALF_DAMAGE_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Hfs4')",
        "prefix": "ABILITY_RLF_HALF_DAMAGE_INTERVAL"
    },
    "ABILITY_RLF_BUILDING_REDUCTION_HFS5": {
        "body": "ABILITY_RLF_BUILDING_REDUCTION_HFS5",
        "description": "ConvertAbilityRealLevelField('Hfs5')",
        "prefix": "ABILITY_RLF_BUILDING_REDUCTION_HFS5"
    },
    "ABILITY_RLF_MAXIMUM_DAMAGE_HFS6": {
        "body": "ABILITY_RLF_MAXIMUM_DAMAGE_HFS6",
        "description": "ConvertAbilityRealLevelField('Hfs6')",
        "prefix": "ABILITY_RLF_MAXIMUM_DAMAGE_HFS6"
    },
    "ABILITY_RLF_MANA_PER_HIT_POINT": {
        "body": "ABILITY_RLF_MANA_PER_HIT_POINT",
        "description": "ConvertAbilityRealLevelField('Nms1')",
        "prefix": "ABILITY_RLF_MANA_PER_HIT_POINT"
    },
    "ABILITY_RLF_DAMAGE_ABSORBED_PERCENT": {
        "body": "ABILITY_RLF_DAMAGE_ABSORBED_PERCENT",
        "description": "ConvertAbilityRealLevelField('Nms2')",
        "prefix": "ABILITY_RLF_DAMAGE_ABSORBED_PERCENT"
    },
    "ABILITY_RLF_WAVE_DISTANCE": {
        "body": "ABILITY_RLF_WAVE_DISTANCE",
        "description": "ConvertAbilityRealLevelField('Uim1')",
        "prefix": "ABILITY_RLF_WAVE_DISTANCE"
    },
    "ABILITY_RLF_WAVE_TIME_SECONDS": {
        "body": "ABILITY_RLF_WAVE_TIME_SECONDS",
        "description": "ConvertAbilityRealLevelField('Uim2')",
        "prefix": "ABILITY_RLF_WAVE_TIME_SECONDS"
    },
    "ABILITY_RLF_DAMAGE_DEALT_UIM3": {
        "body": "ABILITY_RLF_DAMAGE_DEALT_UIM3",
        "description": "ConvertAbilityRealLevelField('Uim3')",
        "prefix": "ABILITY_RLF_DAMAGE_DEALT_UIM3"
    },
    "ABILITY_RLF_AIR_TIME_SECONDS_UIM4": {
        "body": "ABILITY_RLF_AIR_TIME_SECONDS_UIM4",
        "description": "ConvertAbilityRealLevelField('Uim4')",
        "prefix": "ABILITY_RLF_AIR_TIME_SECONDS_UIM4"
    },
    "ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS": {
        "body": "ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS",
        "description": "ConvertAbilityRealLevelField('Uls2')",
        "prefix": "ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS"
    },
    "ABILITY_RLF_DAMAGE_RETURN_FACTOR": {
        "body": "ABILITY_RLF_DAMAGE_RETURN_FACTOR",
        "description": "ConvertAbilityRealLevelField('Uls4')",
        "prefix": "ABILITY_RLF_DAMAGE_RETURN_FACTOR"
    },
    "ABILITY_RLF_DAMAGE_RETURN_THRESHOLD": {
        "body": "ABILITY_RLF_DAMAGE_RETURN_THRESHOLD",
        "description": "ConvertAbilityRealLevelField('Uls5')",
        "prefix": "ABILITY_RLF_DAMAGE_RETURN_THRESHOLD"
    },
    "ABILITY_RLF_RETURNED_DAMAGE_FACTOR": {
        "body": "ABILITY_RLF_RETURNED_DAMAGE_FACTOR",
        "description": "ConvertAbilityRealLevelField('Uts1')",
        "prefix": "ABILITY_RLF_RETURNED_DAMAGE_FACTOR"
    },
    "ABILITY_RLF_RECEIVED_DAMAGE_FACTOR": {
        "body": "ABILITY_RLF_RECEIVED_DAMAGE_FACTOR",
        "description": "ConvertAbilityRealLevelField('Uts2')",
        "prefix": "ABILITY_RLF_RECEIVED_DAMAGE_FACTOR"
    },
    "ABILITY_RLF_DEFENSE_BONUS_UTS3": {
        "body": "ABILITY_RLF_DEFENSE_BONUS_UTS3",
        "description": "ConvertAbilityRealLevelField('Uts3')",
        "prefix": "ABILITY_RLF_DEFENSE_BONUS_UTS3"
    },
    "ABILITY_RLF_DAMAGE_BONUS_NBA1": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_NBA1",
        "description": "ConvertAbilityRealLevelField('Nba1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_NBA1"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3",
        "description": "ConvertAbilityRealLevelField('Nba3')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3"
    },
    "ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT": {
        "body": "ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT",
        "description": "ConvertAbilityRealLevelField('Cmg2')",
        "prefix": "ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT"
    },
    "ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE": {
        "body": "ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE",
        "description": "ConvertAbilityRealLevelField('Cmg3')",
        "prefix": "ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE"
    },
    "ABILITY_RLF_HIT_POINTS_DRAINED": {
        "body": "ABILITY_RLF_HIT_POINTS_DRAINED",
        "description": "ConvertAbilityRealLevelField('Ndr1')",
        "prefix": "ABILITY_RLF_HIT_POINTS_DRAINED"
    },
    "ABILITY_RLF_MANA_POINTS_DRAINED": {
        "body": "ABILITY_RLF_MANA_POINTS_DRAINED",
        "description": "ConvertAbilityRealLevelField('Ndr2')",
        "prefix": "ABILITY_RLF_MANA_POINTS_DRAINED"
    },
    "ABILITY_RLF_DRAIN_INTERVAL_SECONDS": {
        "body": "ABILITY_RLF_DRAIN_INTERVAL_SECONDS",
        "description": "ConvertAbilityRealLevelField('Ndr3')",
        "prefix": "ABILITY_RLF_DRAIN_INTERVAL_SECONDS"
    },
    "ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND": {
        "body": "ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('Ndr4')",
        "prefix": "ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND"
    },
    "ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND": {
        "body": "ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('Ndr5')",
        "prefix": "ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND"
    },
    "ABILITY_RLF_BONUS_LIFE_FACTOR": {
        "body": "ABILITY_RLF_BONUS_LIFE_FACTOR",
        "description": "ConvertAbilityRealLevelField('Ndr6')",
        "prefix": "ABILITY_RLF_BONUS_LIFE_FACTOR"
    },
    "ABILITY_RLF_BONUS_LIFE_DECAY": {
        "body": "ABILITY_RLF_BONUS_LIFE_DECAY",
        "description": "ConvertAbilityRealLevelField('Ndr7')",
        "prefix": "ABILITY_RLF_BONUS_LIFE_DECAY"
    },
    "ABILITY_RLF_BONUS_MANA_FACTOR": {
        "body": "ABILITY_RLF_BONUS_MANA_FACTOR",
        "description": "ConvertAbilityRealLevelField('Ndr8')",
        "prefix": "ABILITY_RLF_BONUS_MANA_FACTOR"
    },
    "ABILITY_RLF_BONUS_MANA_DECAY": {
        "body": "ABILITY_RLF_BONUS_MANA_DECAY",
        "description": "ConvertAbilityRealLevelField('Ndr9')",
        "prefix": "ABILITY_RLF_BONUS_MANA_DECAY"
    },
    "ABILITY_RLF_CHANCE_TO_MISS_PERCENT": {
        "body": "ABILITY_RLF_CHANCE_TO_MISS_PERCENT",
        "description": "ConvertAbilityRealLevelField('Nsi2')",
        "prefix": "ABILITY_RLF_CHANCE_TO_MISS_PERCENT"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_MODIFIER": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_MODIFIER",
        "description": "ConvertAbilityRealLevelField('Nsi3')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_MODIFIER"
    },
    "ABILITY_RLF_ATTACK_SPEED_MODIFIER": {
        "body": "ABILITY_RLF_ATTACK_SPEED_MODIFIER",
        "description": "ConvertAbilityRealLevelField('Nsi4')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_MODIFIER"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_TDG1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_TDG1",
        "description": "ConvertAbilityRealLevelField('Tdg1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_TDG1"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2": {
        "body": "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2",
        "description": "ConvertAbilityRealLevelField('Tdg2')",
        "prefix": "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND": {
        "body": "ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('Tdg3')",
        "prefix": "ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND"
    },
    "ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4": {
        "body": "ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4",
        "description": "ConvertAbilityRealLevelField('Tdg4')",
        "prefix": "ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4"
    },
    "ABILITY_RLF_SMALL_DAMAGE_PER_SECOND": {
        "body": "ABILITY_RLF_SMALL_DAMAGE_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('Tdg5')",
        "prefix": "ABILITY_RLF_SMALL_DAMAGE_PER_SECOND"
    },
    "ABILITY_RLF_AIR_TIME_SECONDS_TSP1": {
        "body": "ABILITY_RLF_AIR_TIME_SECONDS_TSP1",
        "description": "ConvertAbilityRealLevelField('Tsp1')",
        "prefix": "ABILITY_RLF_AIR_TIME_SECONDS_TSP1"
    },
    "ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS": {
        "body": "ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS",
        "description": "ConvertAbilityRealLevelField('Tsp2')",
        "prefix": "ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_NBF5": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_NBF5",
        "description": "ConvertAbilityRealLevelField('Nbf5')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_NBF5"
    },
    "ABILITY_RLF_MAXIMUM_RANGE": {
        "body": "ABILITY_RLF_MAXIMUM_RANGE",
        "description": "ConvertAbilityRealLevelField('Ebl1')",
        "prefix": "ABILITY_RLF_MAXIMUM_RANGE"
    },
    "ABILITY_RLF_MINIMUM_RANGE": {
        "body": "ABILITY_RLF_MINIMUM_RANGE",
        "description": "ConvertAbilityRealLevelField('Ebl2')",
        "prefix": "ABILITY_RLF_MINIMUM_RANGE"
    },
    "ABILITY_RLF_DAMAGE_PER_TARGET_EFK1": {
        "body": "ABILITY_RLF_DAMAGE_PER_TARGET_EFK1",
        "description": "ConvertAbilityRealLevelField('Efk1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_TARGET_EFK1"
    },
    "ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE": {
        "body": "ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Efk2')",
        "prefix": "ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE"
    },
    "ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT": {
        "body": "ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT",
        "description": "ConvertAbilityRealLevelField('Efk4')",
        "prefix": "ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT"
    },
    "ABILITY_RLF_DECAYING_DAMAGE": {
        "body": "ABILITY_RLF_DECAYING_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Esh1')",
        "prefix": "ABILITY_RLF_DECAYING_DAMAGE"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2",
        "description": "ConvertAbilityRealLevelField('Esh2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2"
    },
    "ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3": {
        "body": "ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3",
        "description": "ConvertAbilityRealLevelField('Esh3')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3"
    },
    "ABILITY_RLF_DECAY_POWER": {
        "body": "ABILITY_RLF_DECAY_POWER",
        "description": "ConvertAbilityRealLevelField('Esh4')",
        "prefix": "ABILITY_RLF_DECAY_POWER"
    },
    "ABILITY_RLF_INITIAL_DAMAGE_ESH5": {
        "body": "ABILITY_RLF_INITIAL_DAMAGE_ESH5",
        "description": "ConvertAbilityRealLevelField('Esh5')",
        "prefix": "ABILITY_RLF_INITIAL_DAMAGE_ESH5"
    },
    "ABILITY_RLF_MAXIMUM_LIFE_ABSORBED": {
        "body": "ABILITY_RLF_MAXIMUM_LIFE_ABSORBED",
        "description": "ConvertAbilityRealLevelField('abs1')",
        "prefix": "ABILITY_RLF_MAXIMUM_LIFE_ABSORBED"
    },
    "ABILITY_RLF_MAXIMUM_MANA_ABSORBED": {
        "body": "ABILITY_RLF_MAXIMUM_MANA_ABSORBED",
        "description": "ConvertAbilityRealLevelField('abs2')",
        "prefix": "ABILITY_RLF_MAXIMUM_MANA_ABSORBED"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1",
        "description": "ConvertAbilityRealLevelField('bsk1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1"
    },
    "ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2",
        "description": "ConvertAbilityRealLevelField('bsk2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2"
    },
    "ABILITY_RLF_DAMAGE_TAKEN_INCREASE": {
        "body": "ABILITY_RLF_DAMAGE_TAKEN_INCREASE",
        "description": "ConvertAbilityRealLevelField('bsk3')",
        "prefix": "ABILITY_RLF_DAMAGE_TAKEN_INCREASE"
    },
    "ABILITY_RLF_LIFE_PER_UNIT": {
        "body": "ABILITY_RLF_LIFE_PER_UNIT",
        "description": "ConvertAbilityRealLevelField('dvm1')",
        "prefix": "ABILITY_RLF_LIFE_PER_UNIT"
    },
    "ABILITY_RLF_MANA_PER_UNIT": {
        "body": "ABILITY_RLF_MANA_PER_UNIT",
        "description": "ConvertAbilityRealLevelField('dvm2')",
        "prefix": "ABILITY_RLF_MANA_PER_UNIT"
    },
    "ABILITY_RLF_LIFE_PER_BUFF": {
        "body": "ABILITY_RLF_LIFE_PER_BUFF",
        "description": "ConvertAbilityRealLevelField('dvm3')",
        "prefix": "ABILITY_RLF_LIFE_PER_BUFF"
    },
    "ABILITY_RLF_MANA_PER_BUFF": {
        "body": "ABILITY_RLF_MANA_PER_BUFF",
        "description": "ConvertAbilityRealLevelField('dvm4')",
        "prefix": "ABILITY_RLF_MANA_PER_BUFF"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5",
        "description": "ConvertAbilityRealLevelField('dvm5')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5"
    },
    "ABILITY_RLF_DAMAGE_BONUS_FAK1": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_FAK1",
        "description": "ConvertAbilityRealLevelField('fak1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_FAK1"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2": {
        "body": "ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2",
        "description": "ConvertAbilityRealLevelField('fak2')",
        "prefix": "ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2"
    },
    "ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3": {
        "body": "ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3",
        "description": "ConvertAbilityRealLevelField('fak3')",
        "prefix": "ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3"
    },
    "ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4": {
        "body": "ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4",
        "description": "ConvertAbilityRealLevelField('fak4')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4"
    },
    "ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5": {
        "body": "ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5",
        "description": "ConvertAbilityRealLevelField('fak5')",
        "prefix": "ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5"
    },
    "ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND": {
        "body": "ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND",
        "description": "ConvertAbilityRealLevelField('liq1')",
        "prefix": "ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2",
        "description": "ConvertAbilityRealLevelField('liq2')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3",
        "description": "ConvertAbilityRealLevelField('liq3')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_FACTOR": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_FACTOR",
        "description": "ConvertAbilityRealLevelField('mim1')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_FACTOR"
    },
    "ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT": {
        "body": "ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT",
        "description": "ConvertAbilityRealLevelField('mfl1')",
        "prefix": "ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT"
    },
    "ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT": {
        "body": "ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT",
        "description": "ConvertAbilityRealLevelField('mfl2')",
        "prefix": "ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT"
    },
    "ABILITY_RLF_UNIT_MAXIMUM_DAMAGE": {
        "body": "ABILITY_RLF_UNIT_MAXIMUM_DAMAGE",
        "description": "ConvertAbilityRealLevelField('mfl3')",
        "prefix": "ABILITY_RLF_UNIT_MAXIMUM_DAMAGE"
    },
    "ABILITY_RLF_HERO_MAXIMUM_DAMAGE": {
        "body": "ABILITY_RLF_HERO_MAXIMUM_DAMAGE",
        "description": "ConvertAbilityRealLevelField('mfl4')",
        "prefix": "ABILITY_RLF_HERO_MAXIMUM_DAMAGE"
    },
    "ABILITY_RLF_DAMAGE_COOLDOWN": {
        "body": "ABILITY_RLF_DAMAGE_COOLDOWN",
        "description": "ConvertAbilityRealLevelField('mfl5')",
        "prefix": "ABILITY_RLF_DAMAGE_COOLDOWN"
    },
    "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1": {
        "body": "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1",
        "description": "ConvertAbilityRealLevelField('spl1')",
        "prefix": "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1"
    },
    "ABILITY_RLF_LIFE_REGENERATED": {
        "body": "ABILITY_RLF_LIFE_REGENERATED",
        "description": "ConvertAbilityRealLevelField('irl1')",
        "prefix": "ABILITY_RLF_LIFE_REGENERATED"
    },
    "ABILITY_RLF_MANA_REGENERATED": {
        "body": "ABILITY_RLF_MANA_REGENERATED",
        "description": "ConvertAbilityRealLevelField('irl2')",
        "prefix": "ABILITY_RLF_MANA_REGENERATED"
    },
    "ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1": {
        "body": "ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1",
        "description": "ConvertAbilityRealLevelField('idc1')",
        "prefix": "ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2",
        "description": "ConvertAbilityRealLevelField('idc2')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2"
    },
    "ABILITY_RLF_ACTIVATION_DELAY_IMO2": {
        "body": "ABILITY_RLF_ACTIVATION_DELAY_IMO2",
        "description": "ConvertAbilityRealLevelField('imo2')",
        "prefix": "ABILITY_RLF_ACTIVATION_DELAY_IMO2"
    },
    "ABILITY_RLF_LURE_INTERVAL_SECONDS": {
        "body": "ABILITY_RLF_LURE_INTERVAL_SECONDS",
        "description": "ConvertAbilityRealLevelField('imo3')",
        "prefix": "ABILITY_RLF_LURE_INTERVAL_SECONDS"
    },
    "ABILITY_RLF_DAMAGE_BONUS_ISR1": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_ISR1",
        "description": "ConvertAbilityRealLevelField('isr1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_ISR1"
    },
    "ABILITY_RLF_DAMAGE_REDUCTION_ISR2": {
        "body": "ABILITY_RLF_DAMAGE_REDUCTION_ISR2",
        "description": "ConvertAbilityRealLevelField('isr2')",
        "prefix": "ABILITY_RLF_DAMAGE_REDUCTION_ISR2"
    },
    "ABILITY_RLF_DAMAGE_BONUS_IPV1": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_IPV1",
        "description": "ConvertAbilityRealLevelField('ipv1')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_IPV1"
    },
    "ABILITY_RLF_LIFE_STEAL_AMOUNT": {
        "body": "ABILITY_RLF_LIFE_STEAL_AMOUNT",
        "description": "ConvertAbilityRealLevelField('ipv2')",
        "prefix": "ABILITY_RLF_LIFE_STEAL_AMOUNT"
    },
    "ABILITY_RLF_LIFE_RESTORED_FACTOR": {
        "body": "ABILITY_RLF_LIFE_RESTORED_FACTOR",
        "description": "ConvertAbilityRealLevelField('ast1')",
        "prefix": "ABILITY_RLF_LIFE_RESTORED_FACTOR"
    },
    "ABILITY_RLF_MANA_RESTORED_FACTOR": {
        "body": "ABILITY_RLF_MANA_RESTORED_FACTOR",
        "description": "ConvertAbilityRealLevelField('ast2')",
        "prefix": "ABILITY_RLF_MANA_RESTORED_FACTOR"
    },
    "ABILITY_RLF_ATTACH_DELAY": {
        "body": "ABILITY_RLF_ATTACH_DELAY",
        "description": "ConvertAbilityRealLevelField('gra1')",
        "prefix": "ABILITY_RLF_ATTACH_DELAY"
    },
    "ABILITY_RLF_REMOVE_DELAY": {
        "body": "ABILITY_RLF_REMOVE_DELAY",
        "description": "ConvertAbilityRealLevelField('gra2')",
        "prefix": "ABILITY_RLF_REMOVE_DELAY"
    },
    "ABILITY_RLF_HERO_REGENERATION_DELAY": {
        "body": "ABILITY_RLF_HERO_REGENERATION_DELAY",
        "description": "ConvertAbilityRealLevelField('Nsa2')",
        "prefix": "ABILITY_RLF_HERO_REGENERATION_DELAY"
    },
    "ABILITY_RLF_UNIT_REGENERATION_DELAY": {
        "body": "ABILITY_RLF_UNIT_REGENERATION_DELAY",
        "description": "ConvertAbilityRealLevelField('Nsa3')",
        "prefix": "ABILITY_RLF_UNIT_REGENERATION_DELAY"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4",
        "description": "ConvertAbilityRealLevelField('Nsa4')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4"
    },
    "ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5": {
        "body": "ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5",
        "description": "ConvertAbilityRealLevelField('Nsa5')",
        "prefix": "ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5"
    },
    "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1": {
        "body": "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1",
        "description": "ConvertAbilityRealLevelField('Ixs1')",
        "prefix": "ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1"
    },
    "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2": {
        "body": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2",
        "description": "ConvertAbilityRealLevelField('Ixs2')",
        "prefix": "ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DURATION",
        "description": "ConvertAbilityRealLevelField('Npa6')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DURATION"
    },
    "ABILITY_RLF_SHIELD_COOLDOWN_TIME": {
        "body": "ABILITY_RLF_SHIELD_COOLDOWN_TIME",
        "description": "ConvertAbilityRealLevelField('Nse1')",
        "prefix": "ABILITY_RLF_SHIELD_COOLDOWN_TIME"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_NDO1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_NDO1",
        "description": "ConvertAbilityRealLevelField('Ndo1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_NDO1"
    },
    "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3": {
        "body": "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3",
        "description": "ConvertAbilityRealLevelField('Ndo3')",
        "prefix": "ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1": {
        "body": "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1",
        "description": "ConvertAbilityRealLevelField('flk1')",
        "prefix": "ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1"
    },
    "ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2": {
        "body": "ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2",
        "description": "ConvertAbilityRealLevelField('flk2')",
        "prefix": "ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3": {
        "body": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3",
        "description": "ConvertAbilityRealLevelField('flk3')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3"
    },
    "ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT": {
        "body": "ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT",
        "description": "ConvertAbilityRealLevelField('flk4')",
        "prefix": "ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT"
    },
    "ABILITY_RLF_SMALL_DAMAGE_AMOUNT": {
        "body": "ABILITY_RLF_SMALL_DAMAGE_AMOUNT",
        "description": "ConvertAbilityRealLevelField('flk5')",
        "prefix": "ABILITY_RLF_SMALL_DAMAGE_AMOUNT"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1",
        "description": "ConvertAbilityRealLevelField('Hbn1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2",
        "description": "ConvertAbilityRealLevelField('Hbn2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED_UNITS": {
        "body": "ABILITY_RLF_MAX_MANA_DRAINED_UNITS",
        "description": "ConvertAbilityRealLevelField('fbk1')",
        "prefix": "ABILITY_RLF_MAX_MANA_DRAINED_UNITS"
    },
    "ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT": {
        "body": "ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT",
        "description": "ConvertAbilityRealLevelField('fbk2')",
        "prefix": "ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT"
    },
    "ABILITY_RLF_MAX_MANA_DRAINED_HEROS": {
        "body": "ABILITY_RLF_MAX_MANA_DRAINED_HEROS",
        "description": "ConvertAbilityRealLevelField('fbk3')",
        "prefix": "ABILITY_RLF_MAX_MANA_DRAINED_HEROS"
    },
    "ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT": {
        "body": "ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT",
        "description": "ConvertAbilityRealLevelField('fbk4')",
        "prefix": "ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT"
    },
    "ABILITY_RLF_SUMMONED_DAMAGE": {
        "body": "ABILITY_RLF_SUMMONED_DAMAGE",
        "description": "ConvertAbilityRealLevelField('fbk5')",
        "prefix": "ABILITY_RLF_SUMMONED_DAMAGE"
    },
    "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1": {
        "body": "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1",
        "description": "ConvertAbilityRealLevelField('nca1')",
        "prefix": "ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1"
    },
    "ABILITY_RLF_INITIAL_DAMAGE_PXF1": {
        "body": "ABILITY_RLF_INITIAL_DAMAGE_PXF1",
        "description": "ConvertAbilityRealLevelField('pxf1')",
        "prefix": "ABILITY_RLF_INITIAL_DAMAGE_PXF1"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_PXF2": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_PXF2",
        "description": "ConvertAbilityRealLevelField('pxf2')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_PXF2"
    },
    "ABILITY_RLF_DAMAGE_PER_SECOND_MLS1": {
        "body": "ABILITY_RLF_DAMAGE_PER_SECOND_MLS1",
        "description": "ConvertAbilityRealLevelField('mls1')",
        "prefix": "ABILITY_RLF_DAMAGE_PER_SECOND_MLS1"
    },
    "ABILITY_RLF_BEAST_COLLISION_RADIUS": {
        "body": "ABILITY_RLF_BEAST_COLLISION_RADIUS",
        "description": "ConvertAbilityRealLevelField('Nst2')",
        "prefix": "ABILITY_RLF_BEAST_COLLISION_RADIUS"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NST3": {
        "body": "ABILITY_RLF_DAMAGE_AMOUNT_NST3",
        "description": "ConvertAbilityRealLevelField('Nst3')",
        "prefix": "ABILITY_RLF_DAMAGE_AMOUNT_NST3"
    },
    "ABILITY_RLF_DAMAGE_RADIUS": {
        "body": "ABILITY_RLF_DAMAGE_RADIUS",
        "description": "ConvertAbilityRealLevelField('Nst4')",
        "prefix": "ABILITY_RLF_DAMAGE_RADIUS"
    },
    "ABILITY_RLF_DAMAGE_DELAY": {
        "body": "ABILITY_RLF_DAMAGE_DELAY",
        "description": "ConvertAbilityRealLevelField('Nst5')",
        "prefix": "ABILITY_RLF_DAMAGE_DELAY"
    },
    "ABILITY_RLF_FOLLOW_THROUGH_TIME": {
        "body": "ABILITY_RLF_FOLLOW_THROUGH_TIME",
        "description": "ConvertAbilityRealLevelField('Ncl1')",
        "prefix": "ABILITY_RLF_FOLLOW_THROUGH_TIME"
    },
    "ABILITY_RLF_ART_DURATION": {
        "body": "ABILITY_RLF_ART_DURATION",
        "description": "ConvertAbilityRealLevelField('Ncl4')",
        "prefix": "ABILITY_RLF_ART_DURATION"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1",
        "description": "ConvertAbilityRealLevelField('Nab1')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2",
        "description": "ConvertAbilityRealLevelField('Nab2')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2"
    },
    "ABILITY_RLF_PRIMARY_DAMAGE": {
        "body": "ABILITY_RLF_PRIMARY_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Nab4')",
        "prefix": "ABILITY_RLF_PRIMARY_DAMAGE"
    },
    "ABILITY_RLF_SECONDARY_DAMAGE": {
        "body": "ABILITY_RLF_SECONDARY_DAMAGE",
        "description": "ConvertAbilityRealLevelField('Nab5')",
        "prefix": "ABILITY_RLF_SECONDARY_DAMAGE"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_NAB6": {
        "body": "ABILITY_RLF_DAMAGE_INTERVAL_NAB6",
        "description": "ConvertAbilityRealLevelField('Nab6')",
        "prefix": "ABILITY_RLF_DAMAGE_INTERVAL_NAB6"
    },
    "ABILITY_RLF_GOLD_COST_FACTOR": {
        "body": "ABILITY_RLF_GOLD_COST_FACTOR",
        "description": "ConvertAbilityRealLevelField('Ntm1')",
        "prefix": "ABILITY_RLF_GOLD_COST_FACTOR"
    },
    "ABILITY_RLF_LUMBER_COST_FACTOR": {
        "body": "ABILITY_RLF_LUMBER_COST_FACTOR",
        "description": "ConvertAbilityRealLevelField('Ntm2')",
        "prefix": "ABILITY_RLF_LUMBER_COST_FACTOR"
    },
    "ABILITY_RLF_MOVE_SPEED_BONUS_NEG1": {
        "body": "ABILITY_RLF_MOVE_SPEED_BONUS_NEG1",
        "description": "ConvertAbilityRealLevelField('Neg1')",
        "prefix": "ABILITY_RLF_MOVE_SPEED_BONUS_NEG1"
    },
    "ABILITY_RLF_DAMAGE_BONUS_NEG2": {
        "body": "ABILITY_RLF_DAMAGE_BONUS_NEG2",
        "description": "ConvertAbilityRealLevelField('Neg2')",
        "prefix": "ABILITY_RLF_DAMAGE_BONUS_NEG2"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NCS1": {
        "body": "ABILITY_RLF_DAMAGE_AMOUNT_NCS1",
        "description": "ConvertAbilityRealLevelField('Ncs1')",
        "prefix": "ABILITY_RLF_DAMAGE_AMOUNT_NCS1"
    },
    "ABILITY_RLF_DAMAGE_INTERVAL_NCS2": {
        "body": "ABILITY_RLF_DAMAGE_INTERVAL_NCS2",
        "description": "ConvertAbilityRealLevelField('Ncs2')",
        "prefix": "ABILITY_RLF_DAMAGE_INTERVAL_NCS2"
    },
    "ABILITY_RLF_MAX_DAMAGE_NCS4": {
        "body": "ABILITY_RLF_MAX_DAMAGE_NCS4",
        "description": "ConvertAbilityRealLevelField('Ncs4')",
        "prefix": "ABILITY_RLF_MAX_DAMAGE_NCS4"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5": {
        "body": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5",
        "description": "ConvertAbilityRealLevelField('Ncs5')",
        "prefix": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5"
    },
    "ABILITY_RLF_EFFECT_DURATION": {
        "body": "ABILITY_RLF_EFFECT_DURATION",
        "description": "ConvertAbilityRealLevelField('Ncs6')",
        "prefix": "ABILITY_RLF_EFFECT_DURATION"
    },
    "ABILITY_RLF_SPAWN_INTERVAL_NSY1": {
        "body": "ABILITY_RLF_SPAWN_INTERVAL_NSY1",
        "description": "ConvertAbilityRealLevelField('Nsy1')",
        "prefix": "ABILITY_RLF_SPAWN_INTERVAL_NSY1"
    },
    "ABILITY_RLF_SPAWN_UNIT_DURATION": {
        "body": "ABILITY_RLF_SPAWN_UNIT_DURATION",
        "description": "ConvertAbilityRealLevelField('Nsy3')",
        "prefix": "ABILITY_RLF_SPAWN_UNIT_DURATION"
    },
    "ABILITY_RLF_SPAWN_UNIT_OFFSET": {
        "body": "ABILITY_RLF_SPAWN_UNIT_OFFSET",
        "description": "ConvertAbilityRealLevelField('Nsy4')",
        "prefix": "ABILITY_RLF_SPAWN_UNIT_OFFSET"
    },
    "ABILITY_RLF_LEASH_RANGE_NSY5": {
        "body": "ABILITY_RLF_LEASH_RANGE_NSY5",
        "description": "ConvertAbilityRealLevelField('Nsy5')",
        "prefix": "ABILITY_RLF_LEASH_RANGE_NSY5"
    },
    "ABILITY_RLF_SPAWN_INTERVAL_NFY1": {
        "body": "ABILITY_RLF_SPAWN_INTERVAL_NFY1",
        "description": "ConvertAbilityRealLevelField('Nfy1')",
        "prefix": "ABILITY_RLF_SPAWN_INTERVAL_NFY1"
    },
    "ABILITY_RLF_LEASH_RANGE_NFY2": {
        "body": "ABILITY_RLF_LEASH_RANGE_NFY2",
        "description": "ConvertAbilityRealLevelField('Nfy2')",
        "prefix": "ABILITY_RLF_LEASH_RANGE_NFY2"
    },
    "ABILITY_RLF_CHANCE_TO_DEMOLISH": {
        "body": "ABILITY_RLF_CHANCE_TO_DEMOLISH",
        "description": "ConvertAbilityRealLevelField('Nde1')",
        "prefix": "ABILITY_RLF_CHANCE_TO_DEMOLISH"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS": {
        "body": "ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS",
        "description": "ConvertAbilityRealLevelField('Nde2')",
        "prefix": "ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS": {
        "body": "ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS",
        "description": "ConvertAbilityRealLevelField('Nde3')",
        "prefix": "ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS"
    },
    "ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES": {
        "body": "ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES",
        "description": "ConvertAbilityRealLevelField('Nde4')",
        "prefix": "ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES"
    },
    "ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER": {
        "body": "ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER",
        "description": "ConvertAbilityRealLevelField('Nic1')",
        "prefix": "ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER"
    },
    "ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT": {
        "body": "ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT",
        "description": "ConvertAbilityRealLevelField('Nic2')",
        "prefix": "ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT"
    },
    "ABILITY_RLF_DEATH_DAMAGE_FULL_AREA": {
        "body": "ABILITY_RLF_DEATH_DAMAGE_FULL_AREA",
        "description": "ConvertAbilityRealLevelField('Nic3')",
        "prefix": "ABILITY_RLF_DEATH_DAMAGE_FULL_AREA"
    },
    "ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT": {
        "body": "ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT",
        "description": "ConvertAbilityRealLevelField('Nic4')",
        "prefix": "ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT"
    },
    "ABILITY_RLF_DEATH_DAMAGE_HALF_AREA": {
        "body": "ABILITY_RLF_DEATH_DAMAGE_HALF_AREA",
        "description": "ConvertAbilityRealLevelField('Nic5')",
        "prefix": "ABILITY_RLF_DEATH_DAMAGE_HALF_AREA"
    },
    "ABILITY_RLF_DEATH_DAMAGE_DELAY": {
        "body": "ABILITY_RLF_DEATH_DAMAGE_DELAY",
        "description": "ConvertAbilityRealLevelField('Nic6')",
        "prefix": "ABILITY_RLF_DEATH_DAMAGE_DELAY"
    },
    "ABILITY_RLF_DAMAGE_AMOUNT_NSO1": {
        "body": "ABILITY_RLF_DAMAGE_AMOUNT_NSO1",
        "description": "ConvertAbilityRealLevelField('Nso1')",
        "prefix": "ABILITY_RLF_DAMAGE_AMOUNT_NSO1"
    },
    "ABILITY_RLF_DAMAGE_PERIOD": {
        "body": "ABILITY_RLF_DAMAGE_PERIOD",
        "description": "ConvertAbilityRealLevelField('Nso2')",
        "prefix": "ABILITY_RLF_DAMAGE_PERIOD"
    },
    "ABILITY_RLF_DAMAGE_PENALTY": {
        "body": "ABILITY_RLF_DAMAGE_PENALTY",
        "description": "ConvertAbilityRealLevelField('Nso3')",
        "prefix": "ABILITY_RLF_DAMAGE_PENALTY"
    },
    "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4": {
        "body": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4",
        "description": "ConvertAbilityRealLevelField('Nso4')",
        "prefix": "ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4"
    },
    "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5": {
        "body": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5",
        "description": "ConvertAbilityRealLevelField('Nso5')",
        "prefix": "ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5"
    },
    "ABILITY_RLF_SPLIT_DELAY": {
        "body": "ABILITY_RLF_SPLIT_DELAY",
        "description": "ConvertAbilityRealLevelField('Nlm2')",
        "prefix": "ABILITY_RLF_SPLIT_DELAY"
    },
    "ABILITY_RLF_MAX_HITPOINT_FACTOR": {
        "body": "ABILITY_RLF_MAX_HITPOINT_FACTOR",
        "description": "ConvertAbilityRealLevelField('Nlm4')",
        "prefix": "ABILITY_RLF_MAX_HITPOINT_FACTOR"
    },
    "ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS": {
        "body": "ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS",
        "description": "ConvertAbilityRealLevelField('Nlm5')",
        "prefix": "ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS"
    },
    "ABILITY_RLF_WAVE_INTERVAL": {
        "body": "ABILITY_RLF_WAVE_INTERVAL",
        "description": "ConvertAbilityRealLevelField('Nvc3')",
        "prefix": "ABILITY_RLF_WAVE_INTERVAL"
    },
    "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4": {
        "body": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4",
        "description": "ConvertAbilityRealLevelField('Nvc4')",
        "prefix": "ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4"
    },
    "ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5": {
        "body": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5",
        "description": "ConvertAbilityRealLevelField('Nvc5')",
        "prefix": "ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5"
    },
    "ABILITY_RLF_HALF_DAMAGE_FACTOR": {
        "body": "ABILITY_RLF_HALF_DAMAGE_FACTOR",
        "description": "ConvertAbilityRealLevelField('Nvc6')",
        "prefix": "ABILITY_RLF_HALF_DAMAGE_FACTOR"
    },
    "ABILITY_RLF_INTERVAL_BETWEEN_PULSES": {
        "body": "ABILITY_RLF_INTERVAL_BETWEEN_PULSES",
        "description": "ConvertAbilityRealLevelField('Tau5')",
        "prefix": "ABILITY_RLF_INTERVAL_BETWEEN_PULSES"
    },
    "ABILITY_BLF_PERCENT_BONUS_HAB2": {
        "body": "ABILITY_BLF_PERCENT_BONUS_HAB2",
        "description": "ConvertAbilityBooleanLevelField('Hab2')",
        "prefix": "ABILITY_BLF_PERCENT_BONUS_HAB2"
    },
    "ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3": {
        "body": "ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3",
        "description": "ConvertAbilityBooleanLevelField('Hmt3')",
        "prefix": "ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3"
    },
    "ABILITY_BLF_NEVER_MISS_OCR5": {
        "body": "ABILITY_BLF_NEVER_MISS_OCR5",
        "description": "ConvertAbilityBooleanLevelField('Ocr5')",
        "prefix": "ABILITY_BLF_NEVER_MISS_OCR5"
    },
    "ABILITY_BLF_EXCLUDE_ITEM_DAMAGE": {
        "body": "ABILITY_BLF_EXCLUDE_ITEM_DAMAGE",
        "description": "ConvertAbilityBooleanLevelField('Ocr6')",
        "prefix": "ABILITY_BLF_EXCLUDE_ITEM_DAMAGE"
    },
    "ABILITY_BLF_BACKSTAB_DAMAGE": {
        "body": "ABILITY_BLF_BACKSTAB_DAMAGE",
        "description": "ConvertAbilityBooleanLevelField('Owk4')",
        "prefix": "ABILITY_BLF_BACKSTAB_DAMAGE"
    },
    "ABILITY_BLF_INHERIT_UPGRADES_UAN3": {
        "body": "ABILITY_BLF_INHERIT_UPGRADES_UAN3",
        "description": "ConvertAbilityBooleanLevelField('Uan3')",
        "prefix": "ABILITY_BLF_INHERIT_UPGRADES_UAN3"
    },
    "ABILITY_BLF_MANA_CONVERSION_AS_PERCENT": {
        "body": "ABILITY_BLF_MANA_CONVERSION_AS_PERCENT",
        "description": "ConvertAbilityBooleanLevelField('Udp3')",
        "prefix": "ABILITY_BLF_MANA_CONVERSION_AS_PERCENT"
    },
    "ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT": {
        "body": "ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT",
        "description": "ConvertAbilityBooleanLevelField('Udp4')",
        "prefix": "ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT"
    },
    "ABILITY_BLF_LEAVE_TARGET_ALIVE": {
        "body": "ABILITY_BLF_LEAVE_TARGET_ALIVE",
        "description": "ConvertAbilityBooleanLevelField('Udp5')",
        "prefix": "ABILITY_BLF_LEAVE_TARGET_ALIVE"
    },
    "ABILITY_BLF_PERCENT_BONUS_UAU3": {
        "body": "ABILITY_BLF_PERCENT_BONUS_UAU3",
        "description": "ConvertAbilityBooleanLevelField('Uau3')",
        "prefix": "ABILITY_BLF_PERCENT_BONUS_UAU3"
    },
    "ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED": {
        "body": "ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED",
        "description": "ConvertAbilityBooleanLevelField('Eah2')",
        "prefix": "ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED"
    },
    "ABILITY_BLF_MELEE_BONUS": {
        "body": "ABILITY_BLF_MELEE_BONUS",
        "description": "ConvertAbilityBooleanLevelField('Ear2')",
        "prefix": "ABILITY_BLF_MELEE_BONUS"
    },
    "ABILITY_BLF_RANGED_BONUS": {
        "body": "ABILITY_BLF_RANGED_BONUS",
        "description": "ConvertAbilityBooleanLevelField('Ear3')",
        "prefix": "ABILITY_BLF_RANGED_BONUS"
    },
    "ABILITY_BLF_FLAT_BONUS": {
        "body": "ABILITY_BLF_FLAT_BONUS",
        "description": "ConvertAbilityBooleanLevelField('Ear4')",
        "prefix": "ABILITY_BLF_FLAT_BONUS"
    },
    "ABILITY_BLF_NEVER_MISS_HBH5": {
        "body": "ABILITY_BLF_NEVER_MISS_HBH5",
        "description": "ConvertAbilityBooleanLevelField('Hbh5')",
        "prefix": "ABILITY_BLF_NEVER_MISS_HBH5"
    },
    "ABILITY_BLF_PERCENT_BONUS_HAD2": {
        "body": "ABILITY_BLF_PERCENT_BONUS_HAD2",
        "description": "ConvertAbilityBooleanLevelField('Had2')",
        "prefix": "ABILITY_BLF_PERCENT_BONUS_HAD2"
    },
    "ABILITY_BLF_CAN_DEACTIVATE": {
        "body": "ABILITY_BLF_CAN_DEACTIVATE",
        "description": "ConvertAbilityBooleanLevelField('Hds1')",
        "prefix": "ABILITY_BLF_CAN_DEACTIVATE"
    },
    "ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE": {
        "body": "ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE",
        "description": "ConvertAbilityBooleanLevelField('Hre2')",
        "prefix": "ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE"
    },
    "ABILITY_BLF_PERCENTAGE_OAR2": {
        "body": "ABILITY_BLF_PERCENTAGE_OAR2",
        "description": "ConvertAbilityBooleanLevelField('Oar2')",
        "prefix": "ABILITY_BLF_PERCENTAGE_OAR2"
    },
    "ABILITY_BLF_SUMMON_BUSY_UNITS": {
        "body": "ABILITY_BLF_SUMMON_BUSY_UNITS",
        "description": "ConvertAbilityBooleanLevelField('Btl2')",
        "prefix": "ABILITY_BLF_SUMMON_BUSY_UNITS"
    },
    "ABILITY_BLF_CREATES_BLIGHT": {
        "body": "ABILITY_BLF_CREATES_BLIGHT",
        "description": "ConvertAbilityBooleanLevelField('Bli2')",
        "prefix": "ABILITY_BLF_CREATES_BLIGHT"
    },
    "ABILITY_BLF_EXPLODES_ON_DEATH": {
        "body": "ABILITY_BLF_EXPLODES_ON_DEATH",
        "description": "ConvertAbilityBooleanLevelField('Sds6')",
        "prefix": "ABILITY_BLF_EXPLODES_ON_DEATH"
    },
    "ABILITY_BLF_ALWAYS_AUTOCAST_FAE2": {
        "body": "ABILITY_BLF_ALWAYS_AUTOCAST_FAE2",
        "description": "ConvertAbilityBooleanLevelField('Fae2')",
        "prefix": "ABILITY_BLF_ALWAYS_AUTOCAST_FAE2"
    },
    "ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT": {
        "body": "ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT",
        "description": "ConvertAbilityBooleanLevelField('Mbt5')",
        "prefix": "ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT"
    },
    "ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON": {
        "body": "ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON",
        "description": "ConvertAbilityBooleanLevelField('Neu3')",
        "prefix": "ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON"
    },
    "ABILITY_BLF_SHOW_UNIT_INDICATOR": {
        "body": "ABILITY_BLF_SHOW_UNIT_INDICATOR",
        "description": "ConvertAbilityBooleanLevelField('Neu4')",
        "prefix": "ABILITY_BLF_SHOW_UNIT_INDICATOR"
    },
    "ABILITY_BLF_CHARGE_OWNING_PLAYER": {
        "body": "ABILITY_BLF_CHARGE_OWNING_PLAYER",
        "description": "ConvertAbilityBooleanLevelField('Ans6')",
        "prefix": "ABILITY_BLF_CHARGE_OWNING_PLAYER"
    },
    "ABILITY_BLF_PERCENTAGE_ARM2": {
        "body": "ABILITY_BLF_PERCENTAGE_ARM2",
        "description": "ConvertAbilityBooleanLevelField('Arm2')",
        "prefix": "ABILITY_BLF_PERCENTAGE_ARM2"
    },
    "ABILITY_BLF_TARGET_IS_INVULNERABLE": {
        "body": "ABILITY_BLF_TARGET_IS_INVULNERABLE",
        "description": "ConvertAbilityBooleanLevelField('Pos3')",
        "prefix": "ABILITY_BLF_TARGET_IS_INVULNERABLE"
    },
    "ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE": {
        "body": "ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE",
        "description": "ConvertAbilityBooleanLevelField('Pos4')",
        "prefix": "ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE"
    },
    "ABILITY_BLF_KILL_ON_CASTER_DEATH": {
        "body": "ABILITY_BLF_KILL_ON_CASTER_DEATH",
        "description": "ConvertAbilityBooleanLevelField('Ucb6')",
        "prefix": "ABILITY_BLF_KILL_ON_CASTER_DEATH"
    },
    "ABILITY_BLF_NO_TARGET_REQUIRED_REJ4": {
        "body": "ABILITY_BLF_NO_TARGET_REQUIRED_REJ4",
        "description": "ConvertAbilityBooleanLevelField('Rej4')",
        "prefix": "ABILITY_BLF_NO_TARGET_REQUIRED_REJ4"
    },
    "ABILITY_BLF_ACCEPTS_GOLD": {
        "body": "ABILITY_BLF_ACCEPTS_GOLD",
        "description": "ConvertAbilityBooleanLevelField('Rtn1')",
        "prefix": "ABILITY_BLF_ACCEPTS_GOLD"
    },
    "ABILITY_BLF_ACCEPTS_LUMBER": {
        "body": "ABILITY_BLF_ACCEPTS_LUMBER",
        "description": "ConvertAbilityBooleanLevelField('Rtn2')",
        "prefix": "ABILITY_BLF_ACCEPTS_LUMBER"
    },
    "ABILITY_BLF_PREFER_HOSTILES_ROA5": {
        "body": "ABILITY_BLF_PREFER_HOSTILES_ROA5",
        "description": "ConvertAbilityBooleanLevelField('Roa5')",
        "prefix": "ABILITY_BLF_PREFER_HOSTILES_ROA5"
    },
    "ABILITY_BLF_PREFER_FRIENDLIES_ROA6": {
        "body": "ABILITY_BLF_PREFER_FRIENDLIES_ROA6",
        "description": "ConvertAbilityBooleanLevelField('Roa6')",
        "prefix": "ABILITY_BLF_PREFER_FRIENDLIES_ROA6"
    },
    "ABILITY_BLF_ROOTED_TURNING": {
        "body": "ABILITY_BLF_ROOTED_TURNING",
        "description": "ConvertAbilityBooleanLevelField('Roo3')",
        "prefix": "ABILITY_BLF_ROOTED_TURNING"
    },
    "ABILITY_BLF_ALWAYS_AUTOCAST_SLO3": {
        "body": "ABILITY_BLF_ALWAYS_AUTOCAST_SLO3",
        "description": "ConvertAbilityBooleanLevelField('Slo3')",
        "prefix": "ABILITY_BLF_ALWAYS_AUTOCAST_SLO3"
    },
    "ABILITY_BLF_HIDE_BUTTON": {
        "body": "ABILITY_BLF_HIDE_BUTTON",
        "description": "ConvertAbilityBooleanLevelField('Ihid')",
        "prefix": "ABILITY_BLF_HIDE_BUTTON"
    },
    "ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2": {
        "body": "ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2",
        "description": "ConvertAbilityBooleanLevelField('Itp2')",
        "prefix": "ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2"
    },
    "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS": {
        "body": "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS",
        "description": "ConvertAbilityBooleanLevelField('Eth1')",
        "prefix": "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS"
    },
    "ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS": {
        "body": "ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS",
        "description": "ConvertAbilityBooleanLevelField('Eth2')",
        "prefix": "ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS"
    },
    "ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS": {
        "body": "ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS",
        "description": "ConvertAbilityBooleanLevelField('Gho1')",
        "prefix": "ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS"
    },
    "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2": {
        "body": "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2",
        "description": "ConvertAbilityBooleanLevelField('Gho2')",
        "prefix": "ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2"
    },
    "ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS": {
        "body": "ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS",
        "description": "ConvertAbilityBooleanLevelField('Gho3')",
        "prefix": "ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS"
    },
    "ABILITY_BLF_INCLUDE_RANGED_DAMAGE": {
        "body": "ABILITY_BLF_INCLUDE_RANGED_DAMAGE",
        "description": "ConvertAbilityBooleanLevelField('Ssk4')",
        "prefix": "ABILITY_BLF_INCLUDE_RANGED_DAMAGE"
    },
    "ABILITY_BLF_INCLUDE_MELEE_DAMAGE": {
        "body": "ABILITY_BLF_INCLUDE_MELEE_DAMAGE",
        "description": "ConvertAbilityBooleanLevelField('Ssk5')",
        "prefix": "ABILITY_BLF_INCLUDE_MELEE_DAMAGE"
    },
    "ABILITY_BLF_MOVE_TO_PARTNER": {
        "body": "ABILITY_BLF_MOVE_TO_PARTNER",
        "description": "ConvertAbilityBooleanLevelField('coa2')",
        "prefix": "ABILITY_BLF_MOVE_TO_PARTNER"
    },
    "ABILITY_BLF_CAN_BE_DISPELLED": {
        "body": "ABILITY_BLF_CAN_BE_DISPELLED",
        "description": "ConvertAbilityBooleanLevelField('cyc1')",
        "prefix": "ABILITY_BLF_CAN_BE_DISPELLED"
    },
    "ABILITY_BLF_IGNORE_FRIENDLY_BUFFS": {
        "body": "ABILITY_BLF_IGNORE_FRIENDLY_BUFFS",
        "description": "ConvertAbilityBooleanLevelField('dvm6')",
        "prefix": "ABILITY_BLF_IGNORE_FRIENDLY_BUFFS"
    },
    "ABILITY_BLF_DROP_ITEMS_ON_DEATH": {
        "body": "ABILITY_BLF_DROP_ITEMS_ON_DEATH",
        "description": "ConvertAbilityBooleanLevelField('inv2')",
        "prefix": "ABILITY_BLF_DROP_ITEMS_ON_DEATH"
    },
    "ABILITY_BLF_CAN_USE_ITEMS": {
        "body": "ABILITY_BLF_CAN_USE_ITEMS",
        "description": "ConvertAbilityBooleanLevelField('inv3')",
        "prefix": "ABILITY_BLF_CAN_USE_ITEMS"
    },
    "ABILITY_BLF_CAN_GET_ITEMS": {
        "body": "ABILITY_BLF_CAN_GET_ITEMS",
        "description": "ConvertAbilityBooleanLevelField('inv4')",
        "prefix": "ABILITY_BLF_CAN_GET_ITEMS"
    },
    "ABILITY_BLF_CAN_DROP_ITEMS": {
        "body": "ABILITY_BLF_CAN_DROP_ITEMS",
        "description": "ConvertAbilityBooleanLevelField('inv5')",
        "prefix": "ABILITY_BLF_CAN_DROP_ITEMS"
    },
    "ABILITY_BLF_REPAIRS_ALLOWED": {
        "body": "ABILITY_BLF_REPAIRS_ALLOWED",
        "description": "ConvertAbilityBooleanLevelField('liq4')",
        "prefix": "ABILITY_BLF_REPAIRS_ALLOWED"
    },
    "ABILITY_BLF_CASTER_ONLY_SPLASH": {
        "body": "ABILITY_BLF_CASTER_ONLY_SPLASH",
        "description": "ConvertAbilityBooleanLevelField('mfl6')",
        "prefix": "ABILITY_BLF_CASTER_ONLY_SPLASH"
    },
    "ABILITY_BLF_NO_TARGET_REQUIRED_IRL4": {
        "body": "ABILITY_BLF_NO_TARGET_REQUIRED_IRL4",
        "description": "ConvertAbilityBooleanLevelField('irl4')",
        "prefix": "ABILITY_BLF_NO_TARGET_REQUIRED_IRL4"
    },
    "ABILITY_BLF_DISPEL_ON_ATTACK": {
        "body": "ABILITY_BLF_DISPEL_ON_ATTACK",
        "description": "ConvertAbilityBooleanLevelField('irl5')",
        "prefix": "ABILITY_BLF_DISPEL_ON_ATTACK"
    },
    "ABILITY_BLF_AMOUNT_IS_RAW_VALUE": {
        "body": "ABILITY_BLF_AMOUNT_IS_RAW_VALUE",
        "description": "ConvertAbilityBooleanLevelField('ipv3')",
        "prefix": "ABILITY_BLF_AMOUNT_IS_RAW_VALUE"
    },
    "ABILITY_BLF_SHARED_SPELL_COOLDOWN": {
        "body": "ABILITY_BLF_SHARED_SPELL_COOLDOWN",
        "description": "ConvertAbilityBooleanLevelField('spb2')",
        "prefix": "ABILITY_BLF_SHARED_SPELL_COOLDOWN"
    },
    "ABILITY_BLF_SLEEP_ONCE": {
        "body": "ABILITY_BLF_SLEEP_ONCE",
        "description": "ConvertAbilityBooleanLevelField('sla1')",
        "prefix": "ABILITY_BLF_SLEEP_ONCE"
    },
    "ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT": {
        "body": "ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT",
        "description": "ConvertAbilityBooleanLevelField('sla2')",
        "prefix": "ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT"
    },
    "ABILITY_BLF_DISABLE_OTHER_ABILITIES": {
        "body": "ABILITY_BLF_DISABLE_OTHER_ABILITIES",
        "description": "ConvertAbilityBooleanLevelField('Ncl5')",
        "prefix": "ABILITY_BLF_DISABLE_OTHER_ABILITIES"
    },
    "ABILITY_BLF_ALLOW_BOUNTY": {
        "body": "ABILITY_BLF_ALLOW_BOUNTY",
        "description": "ConvertAbilityBooleanLevelField('Ntm4')",
        "prefix": "ABILITY_BLF_ALLOW_BOUNTY"
    },
    "ABILITY_SLF_ICON_NORMAL": {
        "body": "ABILITY_SLF_ICON_NORMAL",
        "description": "ConvertAbilityStringLevelField('aart')",
        "prefix": "ABILITY_SLF_ICON_NORMAL"
    },
    "ABILITY_SLF_CASTER": {
        "body": "ABILITY_SLF_CASTER",
        "description": "ConvertAbilityStringLevelField('acat')",
        "prefix": "ABILITY_SLF_CASTER"
    },
    "ABILITY_SLF_TARGET": {
        "body": "ABILITY_SLF_TARGET",
        "description": "ConvertAbilityStringLevelField('atat')",
        "prefix": "ABILITY_SLF_TARGET"
    },
    "ABILITY_SLF_SPECIAL": {
        "body": "ABILITY_SLF_SPECIAL",
        "description": "ConvertAbilityStringLevelField('asat')",
        "prefix": "ABILITY_SLF_SPECIAL"
    },
    "ABILITY_SLF_EFFECT": {
        "body": "ABILITY_SLF_EFFECT",
        "description": "ConvertAbilityStringLevelField('aeat')",
        "prefix": "ABILITY_SLF_EFFECT"
    },
    "ABILITY_SLF_AREA_EFFECT": {
        "body": "ABILITY_SLF_AREA_EFFECT",
        "description": "ConvertAbilityStringLevelField('aaea')",
        "prefix": "ABILITY_SLF_AREA_EFFECT"
    },
    "ABILITY_SLF_LIGHTNING_EFFECTS": {
        "body": "ABILITY_SLF_LIGHTNING_EFFECTS",
        "description": "ConvertAbilityStringLevelField('alig')",
        "prefix": "ABILITY_SLF_LIGHTNING_EFFECTS"
    },
    "ABILITY_SLF_MISSILE_ART": {
        "body": "ABILITY_SLF_MISSILE_ART",
        "description": "ConvertAbilityStringLevelField('amat')",
        "prefix": "ABILITY_SLF_MISSILE_ART"
    },
    "ABILITY_SLF_TOOLTIP_LEARN": {
        "body": "ABILITY_SLF_TOOLTIP_LEARN",
        "description": "ConvertAbilityStringLevelField('aret')",
        "prefix": "ABILITY_SLF_TOOLTIP_LEARN"
    },
    "ABILITY_SLF_TOOLTIP_LEARN_EXTENDED": {
        "body": "ABILITY_SLF_TOOLTIP_LEARN_EXTENDED",
        "description": "ConvertAbilityStringLevelField('arut')",
        "prefix": "ABILITY_SLF_TOOLTIP_LEARN_EXTENDED"
    },
    "ABILITY_SLF_TOOLTIP_NORMAL": {
        "body": "ABILITY_SLF_TOOLTIP_NORMAL",
        "description": "ConvertAbilityStringLevelField('atp1')",
        "prefix": "ABILITY_SLF_TOOLTIP_NORMAL"
    },
    "ABILITY_SLF_TOOLTIP_TURN_OFF": {
        "body": "ABILITY_SLF_TOOLTIP_TURN_OFF",
        "description": "ConvertAbilityStringLevelField('aut1')",
        "prefix": "ABILITY_SLF_TOOLTIP_TURN_OFF"
    },
    "ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED": {
        "body": "ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED",
        "description": "ConvertAbilityStringLevelField('aub1')",
        "prefix": "ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED"
    },
    "ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED": {
        "body": "ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED",
        "description": "ConvertAbilityStringLevelField('auu1')",
        "prefix": "ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED"
    },
    "ABILITY_SLF_NORMAL_FORM_UNIT_EME1": {
        "body": "ABILITY_SLF_NORMAL_FORM_UNIT_EME1",
        "description": "ConvertAbilityStringLevelField('Eme1')",
        "prefix": "ABILITY_SLF_NORMAL_FORM_UNIT_EME1"
    },
    "ABILITY_SLF_SPAWNED_UNITS": {
        "body": "ABILITY_SLF_SPAWNED_UNITS",
        "description": "ConvertAbilityStringLevelField('Ndp1')",
        "prefix": "ABILITY_SLF_SPAWNED_UNITS"
    },
    "ABILITY_SLF_ABILITY_FOR_UNIT_CREATION": {
        "body": "ABILITY_SLF_ABILITY_FOR_UNIT_CREATION",
        "description": "ConvertAbilityStringLevelField('Nrc1')",
        "prefix": "ABILITY_SLF_ABILITY_FOR_UNIT_CREATION"
    },
    "ABILITY_SLF_NORMAL_FORM_UNIT_MIL1": {
        "body": "ABILITY_SLF_NORMAL_FORM_UNIT_MIL1",
        "description": "ConvertAbilityStringLevelField('Mil1')",
        "prefix": "ABILITY_SLF_NORMAL_FORM_UNIT_MIL1"
    },
    "ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2": {
        "body": "ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2",
        "description": "ConvertAbilityStringLevelField('Mil2')",
        "prefix": "ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2"
    },
    "ABILITY_SLF_BASE_ORDER_ID_ANS5": {
        "body": "ABILITY_SLF_BASE_ORDER_ID_ANS5",
        "description": "ConvertAbilityStringLevelField('Ans5')",
        "prefix": "ABILITY_SLF_BASE_ORDER_ID_ANS5"
    },
    "ABILITY_SLF_MORPH_UNITS_GROUND": {
        "body": "ABILITY_SLF_MORPH_UNITS_GROUND",
        "description": "ConvertAbilityStringLevelField('Ply2')",
        "prefix": "ABILITY_SLF_MORPH_UNITS_GROUND"
    },
    "ABILITY_SLF_MORPH_UNITS_AIR": {
        "body": "ABILITY_SLF_MORPH_UNITS_AIR",
        "description": "ConvertAbilityStringLevelField('Ply3')",
        "prefix": "ABILITY_SLF_MORPH_UNITS_AIR"
    },
    "ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS": {
        "body": "ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS",
        "description": "ConvertAbilityStringLevelField('Ply4')",
        "prefix": "ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS"
    },
    "ABILITY_SLF_MORPH_UNITS_WATER": {
        "body": "ABILITY_SLF_MORPH_UNITS_WATER",
        "description": "ConvertAbilityStringLevelField('Ply5')",
        "prefix": "ABILITY_SLF_MORPH_UNITS_WATER"
    },
    "ABILITY_SLF_UNIT_TYPE_ONE": {
        "body": "ABILITY_SLF_UNIT_TYPE_ONE",
        "description": "ConvertAbilityStringLevelField('Rai3')",
        "prefix": "ABILITY_SLF_UNIT_TYPE_ONE"
    },
    "ABILITY_SLF_UNIT_TYPE_TWO": {
        "body": "ABILITY_SLF_UNIT_TYPE_TWO",
        "description": "ConvertAbilityStringLevelField('Rai4')",
        "prefix": "ABILITY_SLF_UNIT_TYPE_TWO"
    },
    "ABILITY_SLF_UNIT_TYPE_SOD2": {
        "body": "ABILITY_SLF_UNIT_TYPE_SOD2",
        "description": "ConvertAbilityStringLevelField('Sod2')",
        "prefix": "ABILITY_SLF_UNIT_TYPE_SOD2"
    },
    "ABILITY_SLF_SUMMON_1_UNIT_TYPE": {
        "body": "ABILITY_SLF_SUMMON_1_UNIT_TYPE",
        "description": "ConvertAbilityStringLevelField('Ist1')",
        "prefix": "ABILITY_SLF_SUMMON_1_UNIT_TYPE"
    },
    "ABILITY_SLF_SUMMON_2_UNIT_TYPE": {
        "body": "ABILITY_SLF_SUMMON_2_UNIT_TYPE",
        "description": "ConvertAbilityStringLevelField('Ist2')",
        "prefix": "ABILITY_SLF_SUMMON_2_UNIT_TYPE"
    },
    "ABILITY_SLF_RACE_TO_CONVERT": {
        "body": "ABILITY_SLF_RACE_TO_CONVERT",
        "description": "ConvertAbilityStringLevelField('Ndc1')",
        "prefix": "ABILITY_SLF_RACE_TO_CONVERT"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE": {
        "body": "ABILITY_SLF_PARTNER_UNIT_TYPE",
        "description": "ConvertAbilityStringLevelField('coa1')",
        "prefix": "ABILITY_SLF_PARTNER_UNIT_TYPE"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE_ONE": {
        "body": "ABILITY_SLF_PARTNER_UNIT_TYPE_ONE",
        "description": "ConvertAbilityStringLevelField('dcp1')",
        "prefix": "ABILITY_SLF_PARTNER_UNIT_TYPE_ONE"
    },
    "ABILITY_SLF_PARTNER_UNIT_TYPE_TWO": {
        "body": "ABILITY_SLF_PARTNER_UNIT_TYPE_TWO",
        "description": "ConvertAbilityStringLevelField('dcp2')",
        "prefix": "ABILITY_SLF_PARTNER_UNIT_TYPE_TWO"
    },
    "ABILITY_SLF_REQUIRED_UNIT_TYPE": {
        "body": "ABILITY_SLF_REQUIRED_UNIT_TYPE",
        "description": "ConvertAbilityStringLevelField('tpi1')",
        "prefix": "ABILITY_SLF_REQUIRED_UNIT_TYPE"
    },
    "ABILITY_SLF_CONVERTED_UNIT_TYPE": {
        "body": "ABILITY_SLF_CONVERTED_UNIT_TYPE",
        "description": "ConvertAbilityStringLevelField('tpi2')",
        "prefix": "ABILITY_SLF_CONVERTED_UNIT_TYPE"
    },
    "ABILITY_SLF_SPELL_LIST": {
        "body": "ABILITY_SLF_SPELL_LIST",
        "description": "ConvertAbilityStringLevelField('spb1')",
        "prefix": "ABILITY_SLF_SPELL_LIST"
    },
    "ABILITY_SLF_BASE_ORDER_ID_SPB5": {
        "body": "ABILITY_SLF_BASE_ORDER_ID_SPB5",
        "description": "ConvertAbilityStringLevelField('spb5')",
        "prefix": "ABILITY_SLF_BASE_ORDER_ID_SPB5"
    },
    "ABILITY_SLF_BASE_ORDER_ID_NCL6": {
        "body": "ABILITY_SLF_BASE_ORDER_ID_NCL6",
        "description": "ConvertAbilityStringLevelField('Ncl6')",
        "prefix": "ABILITY_SLF_BASE_ORDER_ID_NCL6"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_1": {
        "body": "ABILITY_SLF_ABILITY_UPGRADE_1",
        "description": "ConvertAbilityStringLevelField('Neg3')",
        "prefix": "ABILITY_SLF_ABILITY_UPGRADE_1"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_2": {
        "body": "ABILITY_SLF_ABILITY_UPGRADE_2",
        "description": "ConvertAbilityStringLevelField('Neg4')",
        "prefix": "ABILITY_SLF_ABILITY_UPGRADE_2"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_3": {
        "body": "ABILITY_SLF_ABILITY_UPGRADE_3",
        "description": "ConvertAbilityStringLevelField('Neg5')",
        "prefix": "ABILITY_SLF_ABILITY_UPGRADE_3"
    },
    "ABILITY_SLF_ABILITY_UPGRADE_4": {
        "body": "ABILITY_SLF_ABILITY_UPGRADE_4",
        "description": "ConvertAbilityStringLevelField('Neg6')",
        "prefix": "ABILITY_SLF_ABILITY_UPGRADE_4"
    },
    "ABILITY_SLF_SPAWN_UNIT_ID_NSY2": {
        "body": "ABILITY_SLF_SPAWN_UNIT_ID_NSY2",
        "description": "ConvertAbilityStringLevelField('Nsy2')",
        "prefix": "ABILITY_SLF_SPAWN_UNIT_ID_NSY2"
    },
    "ITEM_IF_LEVEL": {
        "body": "ITEM_IF_LEVEL",
        "description": "ConvertItemIntegerField('ilev')",
        "prefix": "ITEM_IF_LEVEL"
    },
    "ITEM_IF_NUMBER_OF_CHARGES": {
        "body": "ITEM_IF_NUMBER_OF_CHARGES",
        "description": "ConvertItemIntegerField('iuse')",
        "prefix": "ITEM_IF_NUMBER_OF_CHARGES"
    },
    "ITEM_IF_COOLDOWN_GROUP": {
        "body": "ITEM_IF_COOLDOWN_GROUP",
        "description": "ConvertItemIntegerField('icid')",
        "prefix": "ITEM_IF_COOLDOWN_GROUP"
    },
    "ITEM_IF_MAX_HIT_POINTS": {
        "body": "ITEM_IF_MAX_HIT_POINTS",
        "description": "ConvertItemIntegerField('ihtp')",
        "prefix": "ITEM_IF_MAX_HIT_POINTS"
    },
    "ITEM_IF_HIT_POINTS": {
        "body": "ITEM_IF_HIT_POINTS",
        "description": "ConvertItemIntegerField('ihpc')",
        "prefix": "ITEM_IF_HIT_POINTS"
    },
    "ITEM_IF_PRIORITY": {
        "body": "ITEM_IF_PRIORITY",
        "description": "ConvertItemIntegerField('ipri')",
        "prefix": "ITEM_IF_PRIORITY"
    },
    "ITEM_IF_ARMOR_TYPE": {
        "body": "ITEM_IF_ARMOR_TYPE",
        "description": "ConvertItemIntegerField('iarm')",
        "prefix": "ITEM_IF_ARMOR_TYPE"
    },
    "ITEM_IF_TINTING_COLOR_RED": {
        "body": "ITEM_IF_TINTING_COLOR_RED",
        "description": "ConvertItemIntegerField('iclr')",
        "prefix": "ITEM_IF_TINTING_COLOR_RED"
    },
    "ITEM_IF_TINTING_COLOR_GREEN": {
        "body": "ITEM_IF_TINTING_COLOR_GREEN",
        "description": "ConvertItemIntegerField('iclg')",
        "prefix": "ITEM_IF_TINTING_COLOR_GREEN"
    },
    "ITEM_IF_TINTING_COLOR_BLUE": {
        "body": "ITEM_IF_TINTING_COLOR_BLUE",
        "description": "ConvertItemIntegerField('iclb')",
        "prefix": "ITEM_IF_TINTING_COLOR_BLUE"
    },
    "ITEM_IF_TINTING_COLOR_ALPHA": {
        "body": "ITEM_IF_TINTING_COLOR_ALPHA",
        "description": "ConvertItemIntegerField('ical')",
        "prefix": "ITEM_IF_TINTING_COLOR_ALPHA"
    },
    "ITEM_RF_SCALING_VALUE": {
        "body": "ITEM_RF_SCALING_VALUE",
        "description": "ConvertItemRealField('isca')",
        "prefix": "ITEM_RF_SCALING_VALUE"
    },
    "ITEM_BF_DROPPED_WHEN_CARRIER_DIES": {
        "body": "ITEM_BF_DROPPED_WHEN_CARRIER_DIES",
        "description": "ConvertItemBooleanField('idrp')",
        "prefix": "ITEM_BF_DROPPED_WHEN_CARRIER_DIES"
    },
    "ITEM_BF_CAN_BE_DROPPED": {
        "body": "ITEM_BF_CAN_BE_DROPPED",
        "description": "ConvertItemBooleanField('idro')",
        "prefix": "ITEM_BF_CAN_BE_DROPPED"
    },
    "ITEM_BF_PERISHABLE": {
        "body": "ITEM_BF_PERISHABLE",
        "description": "ConvertItemBooleanField('iper')",
        "prefix": "ITEM_BF_PERISHABLE"
    },
    "ITEM_BF_INCLUDE_AS_RANDOM_CHOICE": {
        "body": "ITEM_BF_INCLUDE_AS_RANDOM_CHOICE",
        "description": "ConvertItemBooleanField('iprn')",
        "prefix": "ITEM_BF_INCLUDE_AS_RANDOM_CHOICE"
    },
    "ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED": {
        "body": "ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED",
        "description": "ConvertItemBooleanField('ipow')",
        "prefix": "ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED"
    },
    "ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS": {
        "body": "ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS",
        "description": "ConvertItemBooleanField('ipaw')",
        "prefix": "ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS"
    },
    "ITEM_BF_ACTIVELY_USED": {
        "body": "ITEM_BF_ACTIVELY_USED",
        "description": "ConvertItemBooleanField('iusa')",
        "prefix": "ITEM_BF_ACTIVELY_USED"
    },
    "ITEM_SF_MODEL_USED": {
        "body": "ITEM_SF_MODEL_USED",
        "description": "ConvertItemStringField('ifil')",
        "prefix": "ITEM_SF_MODEL_USED"
    },
    "UNIT_IF_DEFENSE_TYPE": {
        "body": "UNIT_IF_DEFENSE_TYPE",
        "description": "ConvertUnitIntegerField('udty')",
        "prefix": "UNIT_IF_DEFENSE_TYPE"
    },
    "UNIT_IF_ARMOR_TYPE": {
        "body": "UNIT_IF_ARMOR_TYPE",
        "description": "ConvertUnitIntegerField('uarm')",
        "prefix": "UNIT_IF_ARMOR_TYPE"
    },
    "UNIT_IF_LOOPING_FADE_IN_RATE": {
        "body": "UNIT_IF_LOOPING_FADE_IN_RATE",
        "description": "ConvertUnitIntegerField('ulfi')",
        "prefix": "UNIT_IF_LOOPING_FADE_IN_RATE"
    },
    "UNIT_IF_LOOPING_FADE_OUT_RATE": {
        "body": "UNIT_IF_LOOPING_FADE_OUT_RATE",
        "description": "ConvertUnitIntegerField('ulfo')",
        "prefix": "UNIT_IF_LOOPING_FADE_OUT_RATE"
    },
    "UNIT_IF_AGILITY": {
        "body": "UNIT_IF_AGILITY",
        "description": "ConvertUnitIntegerField('uagc')",
        "prefix": "UNIT_IF_AGILITY"
    },
    "UNIT_IF_INTELLIGENCE": {
        "body": "UNIT_IF_INTELLIGENCE",
        "description": "ConvertUnitIntegerField('uinc')",
        "prefix": "UNIT_IF_INTELLIGENCE"
    },
    "UNIT_IF_STRENGTH": {
        "body": "UNIT_IF_STRENGTH",
        "description": "ConvertUnitIntegerField('ustc')",
        "prefix": "UNIT_IF_STRENGTH"
    },
    "UNIT_IF_AGILITY_PERMANENT": {
        "body": "UNIT_IF_AGILITY_PERMANENT",
        "description": "ConvertUnitIntegerField('uagm')",
        "prefix": "UNIT_IF_AGILITY_PERMANENT"
    },
    "UNIT_IF_INTELLIGENCE_PERMANENT": {
        "body": "UNIT_IF_INTELLIGENCE_PERMANENT",
        "description": "ConvertUnitIntegerField('uinm')",
        "prefix": "UNIT_IF_INTELLIGENCE_PERMANENT"
    },
    "UNIT_IF_STRENGTH_PERMANENT": {
        "body": "UNIT_IF_STRENGTH_PERMANENT",
        "description": "ConvertUnitIntegerField('ustm')",
        "prefix": "UNIT_IF_STRENGTH_PERMANENT"
    },
    "UNIT_IF_AGILITY_WITH_BONUS": {
        "body": "UNIT_IF_AGILITY_WITH_BONUS",
        "description": "ConvertUnitIntegerField('uagb')",
        "prefix": "UNIT_IF_AGILITY_WITH_BONUS"
    },
    "UNIT_IF_INTELLIGENCE_WITH_BONUS": {
        "body": "UNIT_IF_INTELLIGENCE_WITH_BONUS",
        "description": "ConvertUnitIntegerField('uinb')",
        "prefix": "UNIT_IF_INTELLIGENCE_WITH_BONUS"
    },
    "UNIT_IF_STRENGTH_WITH_BONUS": {
        "body": "UNIT_IF_STRENGTH_WITH_BONUS",
        "description": "ConvertUnitIntegerField('ustb')",
        "prefix": "UNIT_IF_STRENGTH_WITH_BONUS"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE": {
        "body": "UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE",
        "description": "ConvertUnitIntegerField('ubdi')",
        "prefix": "UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_BASE": {
        "body": "UNIT_IF_GOLD_BOUNTY_AWARDED_BASE",
        "description": "ConvertUnitIntegerField('ubba')",
        "prefix": "UNIT_IF_GOLD_BOUNTY_AWARDED_BASE"
    },
    "UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE": {
        "body": "UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE",
        "description": "ConvertUnitIntegerField('ubsi')",
        "prefix": "UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE": {
        "body": "UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE",
        "description": "ConvertUnitIntegerField('ulbd')",
        "prefix": "UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE": {
        "body": "UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE",
        "description": "ConvertUnitIntegerField('ulba')",
        "prefix": "UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE"
    },
    "UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE": {
        "body": "UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE",
        "description": "ConvertUnitIntegerField('ulbs')",
        "prefix": "UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE"
    },
    "UNIT_IF_LEVEL": {
        "body": "UNIT_IF_LEVEL",
        "description": "ConvertUnitIntegerField('ulev')",
        "prefix": "UNIT_IF_LEVEL"
    },
    "UNIT_IF_FORMATION_RANK": {
        "body": "UNIT_IF_FORMATION_RANK",
        "description": "ConvertUnitIntegerField('ufor')",
        "prefix": "UNIT_IF_FORMATION_RANK"
    },
    "UNIT_IF_ORIENTATION_INTERPOLATION": {
        "body": "UNIT_IF_ORIENTATION_INTERPOLATION",
        "description": "ConvertUnitIntegerField('uori')",
        "prefix": "UNIT_IF_ORIENTATION_INTERPOLATION"
    },
    "UNIT_IF_ELEVATION_SAMPLE_POINTS": {
        "body": "UNIT_IF_ELEVATION_SAMPLE_POINTS",
        "description": "ConvertUnitIntegerField('uept')",
        "prefix": "UNIT_IF_ELEVATION_SAMPLE_POINTS"
    },
    "UNIT_IF_TINTING_COLOR_RED": {
        "body": "UNIT_IF_TINTING_COLOR_RED",
        "description": "ConvertUnitIntegerField('uclr')",
        "prefix": "UNIT_IF_TINTING_COLOR_RED"
    },
    "UNIT_IF_TINTING_COLOR_GREEN": {
        "body": "UNIT_IF_TINTING_COLOR_GREEN",
        "description": "ConvertUnitIntegerField('uclg')",
        "prefix": "UNIT_IF_TINTING_COLOR_GREEN"
    },
    "UNIT_IF_TINTING_COLOR_BLUE": {
        "body": "UNIT_IF_TINTING_COLOR_BLUE",
        "description": "ConvertUnitIntegerField('uclb')",
        "prefix": "UNIT_IF_TINTING_COLOR_BLUE"
    },
    "UNIT_IF_TINTING_COLOR_ALPHA": {
        "body": "UNIT_IF_TINTING_COLOR_ALPHA",
        "description": "ConvertUnitIntegerField('ucal')",
        "prefix": "UNIT_IF_TINTING_COLOR_ALPHA"
    },
    "UNIT_IF_MOVE_TYPE": {
        "body": "UNIT_IF_MOVE_TYPE",
        "description": "ConvertUnitIntegerField('umvt')",
        "prefix": "UNIT_IF_MOVE_TYPE"
    },
    "UNIT_IF_TARGETED_AS": {
        "body": "UNIT_IF_TARGETED_AS",
        "description": "ConvertUnitIntegerField('utar')",
        "prefix": "UNIT_IF_TARGETED_AS"
    },
    "UNIT_IF_UNIT_CLASSIFICATION": {
        "body": "UNIT_IF_UNIT_CLASSIFICATION",
        "description": "ConvertUnitIntegerField('utyp')",
        "prefix": "UNIT_IF_UNIT_CLASSIFICATION"
    },
    "UNIT_IF_HIT_POINTS_REGENERATION_TYPE": {
        "body": "UNIT_IF_HIT_POINTS_REGENERATION_TYPE",
        "description": "ConvertUnitIntegerField('uhrt')",
        "prefix": "UNIT_IF_HIT_POINTS_REGENERATION_TYPE"
    },
    "UNIT_IF_PLACEMENT_PREVENTED_BY": {
        "body": "UNIT_IF_PLACEMENT_PREVENTED_BY",
        "description": "ConvertUnitIntegerField('upar')",
        "prefix": "UNIT_IF_PLACEMENT_PREVENTED_BY"
    },
    "UNIT_IF_PRIMARY_ATTRIBUTE": {
        "body": "UNIT_IF_PRIMARY_ATTRIBUTE",
        "description": "ConvertUnitIntegerField('upra')",
        "prefix": "UNIT_IF_PRIMARY_ATTRIBUTE"
    },
    "UNIT_RF_STRENGTH_PER_LEVEL": {
        "body": "UNIT_RF_STRENGTH_PER_LEVEL",
        "description": "ConvertUnitRealField('ustp')",
        "prefix": "UNIT_RF_STRENGTH_PER_LEVEL"
    },
    "UNIT_RF_AGILITY_PER_LEVEL": {
        "body": "UNIT_RF_AGILITY_PER_LEVEL",
        "description": "ConvertUnitRealField('uagp')",
        "prefix": "UNIT_RF_AGILITY_PER_LEVEL"
    },
    "UNIT_RF_INTELLIGENCE_PER_LEVEL": {
        "body": "UNIT_RF_INTELLIGENCE_PER_LEVEL",
        "description": "ConvertUnitRealField('uinp')",
        "prefix": "UNIT_RF_INTELLIGENCE_PER_LEVEL"
    },
    "UNIT_RF_HIT_POINTS_REGENERATION_RATE": {
        "body": "UNIT_RF_HIT_POINTS_REGENERATION_RATE",
        "description": "ConvertUnitRealField('uhpr')",
        "prefix": "UNIT_RF_HIT_POINTS_REGENERATION_RATE"
    },
    "UNIT_RF_MANA_REGENERATION": {
        "body": "UNIT_RF_MANA_REGENERATION",
        "description": "ConvertUnitRealField('umpr')",
        "prefix": "UNIT_RF_MANA_REGENERATION"
    },
    "UNIT_RF_DEATH_TIME": {
        "body": "UNIT_RF_DEATH_TIME",
        "description": "ConvertUnitRealField('udtm')",
        "prefix": "UNIT_RF_DEATH_TIME"
    },
    "UNIT_RF_FLY_HEIGHT": {
        "body": "UNIT_RF_FLY_HEIGHT",
        "description": "ConvertUnitRealField('ufyh')",
        "prefix": "UNIT_RF_FLY_HEIGHT"
    },
    "UNIT_RF_TURN_RATE": {
        "body": "UNIT_RF_TURN_RATE",
        "description": "ConvertUnitRealField('umvr')",
        "prefix": "UNIT_RF_TURN_RATE"
    },
    "UNIT_RF_ELEVATION_SAMPLE_RADIUS": {
        "body": "UNIT_RF_ELEVATION_SAMPLE_RADIUS",
        "description": "ConvertUnitRealField('uerd')",
        "prefix": "UNIT_RF_ELEVATION_SAMPLE_RADIUS"
    },
    "UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS": {
        "body": "UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS",
        "description": "ConvertUnitRealField('ufrd')",
        "prefix": "UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS"
    },
    "UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES": {
        "body": "UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES",
        "description": "ConvertUnitRealField('umxp')",
        "prefix": "UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES"
    },
    "UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES": {
        "body": "UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES",
        "description": "ConvertUnitRealField('umxr')",
        "prefix": "UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES"
    },
    "UNIT_RF_SCALING_VALUE": {
        "body": "UNIT_RF_SCALING_VALUE",
        "description": "ConvertUnitRealField('usca')",
        "prefix": "UNIT_RF_SCALING_VALUE"
    },
    "UNIT_RF_ANIMATION_RUN_SPEED": {
        "body": "UNIT_RF_ANIMATION_RUN_SPEED",
        "description": "ConvertUnitRealField('urun')",
        "prefix": "UNIT_RF_ANIMATION_RUN_SPEED"
    },
    "UNIT_RF_SELECTION_SCALE": {
        "body": "UNIT_RF_SELECTION_SCALE",
        "description": "ConvertUnitRealField('ussc')",
        "prefix": "UNIT_RF_SELECTION_SCALE"
    },
    "UNIT_RF_SELECTION_CIRCLE_HEIGHT": {
        "body": "UNIT_RF_SELECTION_CIRCLE_HEIGHT",
        "description": "ConvertUnitRealField('uslz')",
        "prefix": "UNIT_RF_SELECTION_CIRCLE_HEIGHT"
    },
    "UNIT_RF_SHADOW_IMAGE_HEIGHT": {
        "body": "UNIT_RF_SHADOW_IMAGE_HEIGHT",
        "description": "ConvertUnitRealField('ushh')",
        "prefix": "UNIT_RF_SHADOW_IMAGE_HEIGHT"
    },
    "UNIT_RF_SHADOW_IMAGE_WIDTH": {
        "body": "UNIT_RF_SHADOW_IMAGE_WIDTH",
        "description": "ConvertUnitRealField('ushw')",
        "prefix": "UNIT_RF_SHADOW_IMAGE_WIDTH"
    },
    "UNIT_RF_SHADOW_IMAGE_CENTER_X": {
        "body": "UNIT_RF_SHADOW_IMAGE_CENTER_X",
        "description": "ConvertUnitRealField('ushx')",
        "prefix": "UNIT_RF_SHADOW_IMAGE_CENTER_X"
    },
    "UNIT_RF_SHADOW_IMAGE_CENTER_Y": {
        "body": "UNIT_RF_SHADOW_IMAGE_CENTER_Y",
        "description": "ConvertUnitRealField('ushy')",
        "prefix": "UNIT_RF_SHADOW_IMAGE_CENTER_Y"
    },
    "UNIT_RF_ANIMATION_WALK_SPEED": {
        "body": "UNIT_RF_ANIMATION_WALK_SPEED",
        "description": "ConvertUnitRealField('uwal')",
        "prefix": "UNIT_RF_ANIMATION_WALK_SPEED"
    },
    "UNIT_RF_DEFENSE": {
        "body": "UNIT_RF_DEFENSE",
        "description": "ConvertUnitRealField('udfc')",
        "prefix": "UNIT_RF_DEFENSE"
    },
    "UNIT_RF_SIGHT_RADIUS": {
        "body": "UNIT_RF_SIGHT_RADIUS",
        "description": "ConvertUnitRealField('usir')",
        "prefix": "UNIT_RF_SIGHT_RADIUS"
    },
    "UNIT_RF_PRIORITY": {
        "body": "UNIT_RF_PRIORITY",
        "description": "ConvertUnitRealField('upri')",
        "prefix": "UNIT_RF_PRIORITY"
    },
    "UNIT_RF_SPEED": {
        "body": "UNIT_RF_SPEED",
        "description": "ConvertUnitRealField('umvc')",
        "prefix": "UNIT_RF_SPEED"
    },
    "UNIT_RF_OCCLUDER_HEIGHT": {
        "body": "UNIT_RF_OCCLUDER_HEIGHT",
        "description": "ConvertUnitRealField('uocc')",
        "prefix": "UNIT_RF_OCCLUDER_HEIGHT"
    },
    "UNIT_RF_HP": {
        "body": "UNIT_RF_HP",
        "description": "ConvertUnitRealField('uhpc')",
        "prefix": "UNIT_RF_HP"
    },
    "UNIT_RF_MANA": {
        "body": "UNIT_RF_MANA",
        "description": "ConvertUnitRealField('umpc')",
        "prefix": "UNIT_RF_MANA"
    },
    "UNIT_RF_ACQUISITION_RANGE": {
        "body": "UNIT_RF_ACQUISITION_RANGE",
        "description": "ConvertUnitRealField('uacq')",
        "prefix": "UNIT_RF_ACQUISITION_RANGE"
    },
    "UNIT_RF_CAST_BACK_SWING": {
        "body": "UNIT_RF_CAST_BACK_SWING",
        "description": "ConvertUnitRealField('ucbs')",
        "prefix": "UNIT_RF_CAST_BACK_SWING"
    },
    "UNIT_RF_CAST_POINT": {
        "body": "UNIT_RF_CAST_POINT",
        "description": "ConvertUnitRealField('ucpt')",
        "prefix": "UNIT_RF_CAST_POINT"
    },
    "UNIT_RF_MINIMUM_ATTACK_RANGE": {
        "body": "UNIT_RF_MINIMUM_ATTACK_RANGE",
        "description": "ConvertUnitRealField('uamn')",
        "prefix": "UNIT_RF_MINIMUM_ATTACK_RANGE"
    },
    "UNIT_BF_RAISABLE": {
        "body": "UNIT_BF_RAISABLE",
        "description": "ConvertUnitBooleanField('urai')",
        "prefix": "UNIT_BF_RAISABLE"
    },
    "UNIT_BF_DECAYABLE": {
        "body": "UNIT_BF_DECAYABLE",
        "description": "ConvertUnitBooleanField('udec')",
        "prefix": "UNIT_BF_DECAYABLE"
    },
    "UNIT_BF_IS_A_BUILDING": {
        "body": "UNIT_BF_IS_A_BUILDING",
        "description": "ConvertUnitBooleanField('ubdg')",
        "prefix": "UNIT_BF_IS_A_BUILDING"
    },
    "UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT": {
        "body": "UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT",
        "description": "ConvertUnitBooleanField('ulos')",
        "prefix": "UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT"
    },
    "UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON": {
        "body": "UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON",
        "description": "ConvertUnitBooleanField('unbm')",
        "prefix": "UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON"
    },
    "UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON": {
        "body": "UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON",
        "description": "ConvertUnitBooleanField('uhhb')",
        "prefix": "UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON"
    },
    "UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY": {
        "body": "UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY",
        "description": "ConvertUnitBooleanField('uhhm')",
        "prefix": "UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY"
    },
    "UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE": {
        "body": "UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE",
        "description": "ConvertUnitBooleanField('uhhd')",
        "prefix": "UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE"
    },
    "UNIT_BF_HIDE_MINIMAP_DISPLAY": {
        "body": "UNIT_BF_HIDE_MINIMAP_DISPLAY",
        "description": "ConvertUnitBooleanField('uhom')",
        "prefix": "UNIT_BF_HIDE_MINIMAP_DISPLAY"
    },
    "UNIT_BF_SCALE_PROJECTILES": {
        "body": "UNIT_BF_SCALE_PROJECTILES",
        "description": "ConvertUnitBooleanField('uscb')",
        "prefix": "UNIT_BF_SCALE_PROJECTILES"
    },
    "UNIT_BF_SELECTION_CIRCLE_ON_WATER": {
        "body": "UNIT_BF_SELECTION_CIRCLE_ON_WATER",
        "description": "ConvertUnitBooleanField('usew')",
        "prefix": "UNIT_BF_SELECTION_CIRCLE_ON_WATER"
    },
    "UNIT_BF_HAS_WATER_SHADOW": {
        "body": "UNIT_BF_HAS_WATER_SHADOW",
        "description": "ConvertUnitBooleanField('ushr')",
        "prefix": "UNIT_BF_HAS_WATER_SHADOW"
    },
    "UNIT_SF_NAME": {
        "body": "UNIT_SF_NAME",
        "description": "ConvertUnitStringField('unam')",
        "prefix": "UNIT_SF_NAME"
    },
    "UNIT_SF_PROPER_NAMES": {
        "body": "UNIT_SF_PROPER_NAMES",
        "description": "ConvertUnitStringField('upro')",
        "prefix": "UNIT_SF_PROPER_NAMES"
    },
    "UNIT_SF_GROUND_TEXTURE": {
        "body": "UNIT_SF_GROUND_TEXTURE",
        "description": "ConvertUnitStringField('uubs')",
        "prefix": "UNIT_SF_GROUND_TEXTURE"
    },
    "UNIT_SF_SHADOW_IMAGE_UNIT": {
        "body": "UNIT_SF_SHADOW_IMAGE_UNIT",
        "description": "ConvertUnitStringField('ushu')",
        "prefix": "UNIT_SF_SHADOW_IMAGE_UNIT"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE": {
        "body": "UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE",
        "description": "ConvertUnitWeaponIntegerField('ua1d')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE": {
        "body": "UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE",
        "description": "ConvertUnitWeaponIntegerField('ua1b')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE"
    },
    "UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE": {
        "body": "UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE",
        "description": "ConvertUnitWeaponIntegerField('ua1s')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE"
    },
    "UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS": {
        "body": "UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS",
        "description": "ConvertUnitWeaponIntegerField('utc1')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS"
    },
    "UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE": {
        "body": "UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE",
        "description": "ConvertUnitWeaponIntegerField('ua1t')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE"
    },
    "UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND": {
        "body": "UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND",
        "description": "ConvertUnitWeaponIntegerField('ucs1')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND"
    },
    "UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS": {
        "body": "UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS",
        "description": "ConvertUnitWeaponIntegerField('ua1p')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS"
    },
    "UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED": {
        "body": "UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED",
        "description": "ConvertUnitWeaponIntegerField('ua1g')",
        "prefix": "UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED"
    },
    "UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT": {
        "body": "UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT",
        "description": "ConvertUnitWeaponRealField('ubs1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT",
        "description": "ConvertUnitWeaponRealField('udp1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT"
    },
    "UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN": {
        "body": "UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN",
        "description": "ConvertUnitWeaponRealField('ua1c')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR",
        "description": "ConvertUnitWeaponRealField('udl1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM",
        "description": "ConvertUnitWeaponRealField('uhd1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL",
        "description": "ConvertUnitWeaponRealField('uqd1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE",
        "description": "ConvertUnitWeaponRealField('usd1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE"
    },
    "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS": {
        "body": "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS",
        "description": "ConvertUnitWeaponRealField('usr1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS"
    },
    "UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED": {
        "body": "UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED",
        "description": "ConvertUnitWeaponRealField('ua1z')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED"
    },
    "UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC": {
        "body": "UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC",
        "description": "ConvertUnitWeaponRealField('uma1')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE": {
        "body": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE",
        "description": "ConvertUnitWeaponRealField('ua1f')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE": {
        "body": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE",
        "description": "ConvertUnitWeaponRealField('ua1h')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE"
    },
    "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE": {
        "body": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE",
        "description": "ConvertUnitWeaponRealField('ua1q')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE"
    },
    "UNIT_WEAPON_RF_ATTACK_RANGE": {
        "body": "UNIT_WEAPON_RF_ATTACK_RANGE",
        "description": "ConvertUnitWeaponRealField('ua1r')",
        "prefix": "UNIT_WEAPON_RF_ATTACK_RANGE"
    },
    "UNIT_WEAPON_BF_ATTACK_SHOW_UI": {
        "body": "UNIT_WEAPON_BF_ATTACK_SHOW_UI",
        "description": "ConvertUnitWeaponBooleanField('uwu1')",
        "prefix": "UNIT_WEAPON_BF_ATTACK_SHOW_UI"
    },
    "UNIT_WEAPON_BF_ATTACKS_ENABLED": {
        "body": "UNIT_WEAPON_BF_ATTACKS_ENABLED",
        "description": "ConvertUnitWeaponBooleanField('uaen')",
        "prefix": "UNIT_WEAPON_BF_ATTACKS_ENABLED"
    },
    "UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED": {
        "body": "UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED",
        "description": "ConvertUnitWeaponBooleanField('umh1')",
        "prefix": "UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED"
    },
    "UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART": {
        "body": "UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART",
        "description": "ConvertUnitWeaponStringField('ua1m')",
        "prefix": "UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART"
    },
    "MOVE_TYPE_UNKNOWN": {
        "body": "MOVE_TYPE_UNKNOWN",
        "description": "ConvertMoveType(0)",
        "prefix": "MOVE_TYPE_UNKNOWN"
    },
    "MOVE_TYPE_FOOT": {
        "body": "MOVE_TYPE_FOOT",
        "description": "ConvertMoveType(1)",
        "prefix": "MOVE_TYPE_FOOT"
    },
    "MOVE_TYPE_FLY": {
        "body": "MOVE_TYPE_FLY",
        "description": "ConvertMoveType(2)",
        "prefix": "MOVE_TYPE_FLY"
    },
    "MOVE_TYPE_HORSE": {
        "body": "MOVE_TYPE_HORSE",
        "description": "ConvertMoveType(4)",
        "prefix": "MOVE_TYPE_HORSE"
    },
    "MOVE_TYPE_HOVER": {
        "body": "MOVE_TYPE_HOVER",
        "description": "ConvertMoveType(8)",
        "prefix": "MOVE_TYPE_HOVER"
    },
    "MOVE_TYPE_FLOAT": {
        "body": "MOVE_TYPE_FLOAT",
        "description": "ConvertMoveType(16)",
        "prefix": "MOVE_TYPE_FLOAT"
    },
    "MOVE_TYPE_AMPHIBIOUS": {
        "body": "MOVE_TYPE_AMPHIBIOUS",
        "description": "ConvertMoveType(32)",
        "prefix": "MOVE_TYPE_AMPHIBIOUS"
    },
    "MOVE_TYPE_UNBUILDABLE": {
        "body": "MOVE_TYPE_UNBUILDABLE",
        "description": "ConvertMoveType(64)",
        "prefix": "MOVE_TYPE_UNBUILDABLE"
    },
    "TARGET_FLAG_NONE": {
        "body": "TARGET_FLAG_NONE",
        "description": "ConvertTargetFlag(1)",
        "prefix": "TARGET_FLAG_NONE"
    },
    "TARGET_FLAG_GROUND": {
        "body": "TARGET_FLAG_GROUND",
        "description": "ConvertTargetFlag(2)",
        "prefix": "TARGET_FLAG_GROUND"
    },
    "TARGET_FLAG_AIR": {
        "body": "TARGET_FLAG_AIR",
        "description": "ConvertTargetFlag(4)",
        "prefix": "TARGET_FLAG_AIR"
    },
    "TARGET_FLAG_STRUCTURE": {
        "body": "TARGET_FLAG_STRUCTURE",
        "description": "ConvertTargetFlag(8)",
        "prefix": "TARGET_FLAG_STRUCTURE"
    },
    "TARGET_FLAG_WARD": {
        "body": "TARGET_FLAG_WARD",
        "description": "ConvertTargetFlag(16)",
        "prefix": "TARGET_FLAG_WARD"
    },
    "TARGET_FLAG_ITEM": {
        "body": "TARGET_FLAG_ITEM",
        "description": "ConvertTargetFlag(32)",
        "prefix": "TARGET_FLAG_ITEM"
    },
    "TARGET_FLAG_TREE": {
        "body": "TARGET_FLAG_TREE",
        "description": "ConvertTargetFlag(64)",
        "prefix": "TARGET_FLAG_TREE"
    },
    "TARGET_FLAG_WALL": {
        "body": "TARGET_FLAG_WALL",
        "description": "ConvertTargetFlag(128)",
        "prefix": "TARGET_FLAG_WALL"
    },
    "TARGET_FLAG_DEBRIS": {
        "body": "TARGET_FLAG_DEBRIS",
        "description": "ConvertTargetFlag(256)",
        "prefix": "TARGET_FLAG_DEBRIS"
    },
    "TARGET_FLAG_DECORATION": {
        "body": "TARGET_FLAG_DECORATION",
        "description": "ConvertTargetFlag(512)",
        "prefix": "TARGET_FLAG_DECORATION"
    },
    "TARGET_FLAG_BRIDGE": {
        "body": "TARGET_FLAG_BRIDGE",
        "description": "ConvertTargetFlag(1024)",
        "prefix": "TARGET_FLAG_BRIDGE"
    },
    "DEFENSE_TYPE_LIGHT": {
        "body": "DEFENSE_TYPE_LIGHT",
        "description": "ConvertDefenseType(0)",
        "prefix": "DEFENSE_TYPE_LIGHT"
    },
    "DEFENSE_TYPE_MEDIUM": {
        "body": "DEFENSE_TYPE_MEDIUM",
        "description": "ConvertDefenseType(1)",
        "prefix": "DEFENSE_TYPE_MEDIUM"
    },
    "DEFENSE_TYPE_LARGE": {
        "body": "DEFENSE_TYPE_LARGE",
        "description": "ConvertDefenseType(2)",
        "prefix": "DEFENSE_TYPE_LARGE"
    },
    "DEFENSE_TYPE_FORT": {
        "body": "DEFENSE_TYPE_FORT",
        "description": "ConvertDefenseType(3)",
        "prefix": "DEFENSE_TYPE_FORT"
    },
    "DEFENSE_TYPE_NORMAL": {
        "body": "DEFENSE_TYPE_NORMAL",
        "description": "ConvertDefenseType(4)",
        "prefix": "DEFENSE_TYPE_NORMAL"
    },
    "DEFENSE_TYPE_HERO": {
        "body": "DEFENSE_TYPE_HERO",
        "description": "ConvertDefenseType(5)",
        "prefix": "DEFENSE_TYPE_HERO"
    },
    "DEFENSE_TYPE_DIVINE": {
        "body": "DEFENSE_TYPE_DIVINE",
        "description": "ConvertDefenseType(6)",
        "prefix": "DEFENSE_TYPE_DIVINE"
    },
    "DEFENSE_TYPE_NONE": {
        "body": "DEFENSE_TYPE_NONE",
        "description": "ConvertDefenseType(7)",
        "prefix": "DEFENSE_TYPE_NONE"
    },
    "HERO_ATTRIBUTE_STR": {
        "body": "HERO_ATTRIBUTE_STR",
        "description": "ConvertHeroAttribute(1)",
        "prefix": "HERO_ATTRIBUTE_STR"
    },
    "HERO_ATTRIBUTE_INT": {
        "body": "HERO_ATTRIBUTE_INT",
        "description": "ConvertHeroAttribute(2)",
        "prefix": "HERO_ATTRIBUTE_INT"
    },
    "HERO_ATTRIBUTE_AGI": {
        "body": "HERO_ATTRIBUTE_AGI",
        "description": "ConvertHeroAttribute(3)",
        "prefix": "HERO_ATTRIBUTE_AGI"
    },
    "ARMOR_TYPE_WHOKNOWS": {
        "body": "ARMOR_TYPE_WHOKNOWS",
        "description": "ConvertArmorType(0)",
        "prefix": "ARMOR_TYPE_WHOKNOWS"
    },
    "ARMOR_TYPE_FLESH": {
        "body": "ARMOR_TYPE_FLESH",
        "description": "ConvertArmorType(1)",
        "prefix": "ARMOR_TYPE_FLESH"
    },
    "ARMOR_TYPE_METAL": {
        "body": "ARMOR_TYPE_METAL",
        "description": "ConvertArmorType(2)",
        "prefix": "ARMOR_TYPE_METAL"
    },
    "ARMOR_TYPE_WOOD": {
        "body": "ARMOR_TYPE_WOOD",
        "description": "ConvertArmorType(3)",
        "prefix": "ARMOR_TYPE_WOOD"
    },
    "ARMOR_TYPE_ETHREAL": {
        "body": "ARMOR_TYPE_ETHREAL",
        "description": "ConvertArmorType(4)",
        "prefix": "ARMOR_TYPE_ETHREAL"
    },
    "ARMOR_TYPE_STONE": {
        "body": "ARMOR_TYPE_STONE",
        "description": "ConvertArmorType(5)",
        "prefix": "ARMOR_TYPE_STONE"
    },
    "REGENERATION_TYPE_NONE": {
        "body": "REGENERATION_TYPE_NONE",
        "description": "ConvertRegenType(0)",
        "prefix": "REGENERATION_TYPE_NONE"
    },
    "REGENERATION_TYPE_ALWAYS": {
        "body": "REGENERATION_TYPE_ALWAYS",
        "description": "ConvertRegenType(1)",
        "prefix": "REGENERATION_TYPE_ALWAYS"
    },
    "REGENERATION_TYPE_BLIGHT": {
        "body": "REGENERATION_TYPE_BLIGHT",
        "description": "ConvertRegenType(2)",
        "prefix": "REGENERATION_TYPE_BLIGHT"
    },
    "REGENERATION_TYPE_DAY": {
        "body": "REGENERATION_TYPE_DAY",
        "description": "ConvertRegenType(3)",
        "prefix": "REGENERATION_TYPE_DAY"
    },
    "REGENERATION_TYPE_NIGHT": {
        "body": "REGENERATION_TYPE_NIGHT",
        "description": "ConvertRegenType(4)",
        "prefix": "REGENERATION_TYPE_NIGHT"
    },
    "UNIT_CATEGORY_GIANT": {
        "body": "UNIT_CATEGORY_GIANT",
        "description": "ConvertUnitCategory(1)",
        "prefix": "UNIT_CATEGORY_GIANT"
    },
    "UNIT_CATEGORY_UNDEAD": {
        "body": "UNIT_CATEGORY_UNDEAD",
        "description": "ConvertUnitCategory(2)",
        "prefix": "UNIT_CATEGORY_UNDEAD"
    },
    "UNIT_CATEGORY_SUMMONED": {
        "body": "UNIT_CATEGORY_SUMMONED",
        "description": "ConvertUnitCategory(4)",
        "prefix": "UNIT_CATEGORY_SUMMONED"
    },
    "UNIT_CATEGORY_MECHANICAL": {
        "body": "UNIT_CATEGORY_MECHANICAL",
        "description": "ConvertUnitCategory(8)",
        "prefix": "UNIT_CATEGORY_MECHANICAL"
    },
    "UNIT_CATEGORY_PEON": {
        "body": "UNIT_CATEGORY_PEON",
        "description": "ConvertUnitCategory(16)",
        "prefix": "UNIT_CATEGORY_PEON"
    },
    "UNIT_CATEGORY_SAPPER": {
        "body": "UNIT_CATEGORY_SAPPER",
        "description": "ConvertUnitCategory(32)",
        "prefix": "UNIT_CATEGORY_SAPPER"
    },
    "UNIT_CATEGORY_TOWNHALL": {
        "body": "UNIT_CATEGORY_TOWNHALL",
        "description": "ConvertUnitCategory(64)",
        "prefix": "UNIT_CATEGORY_TOWNHALL"
    },
    "UNIT_CATEGORY_ANCIENT": {
        "body": "UNIT_CATEGORY_ANCIENT",
        "description": "ConvertUnitCategory(128)",
        "prefix": "UNIT_CATEGORY_ANCIENT"
    },
    "UNIT_CATEGORY_NEUTRAL": {
        "body": "UNIT_CATEGORY_NEUTRAL",
        "description": "ConvertUnitCategory(256)",
        "prefix": "UNIT_CATEGORY_NEUTRAL"
    },
    "UNIT_CATEGORY_WARD": {
        "body": "UNIT_CATEGORY_WARD",
        "description": "ConvertUnitCategory(512)",
        "prefix": "UNIT_CATEGORY_WARD"
    },
    "UNIT_CATEGORY_STANDON": {
        "body": "UNIT_CATEGORY_STANDON",
        "description": "ConvertUnitCategory(1024)",
        "prefix": "UNIT_CATEGORY_STANDON"
    },
    "UNIT_CATEGORY_TAUREN": {
        "body": "UNIT_CATEGORY_TAUREN",
        "description": "ConvertUnitCategory(2048)",
        "prefix": "UNIT_CATEGORY_TAUREN"
    },
    "PATHING_FLAG_UNWALKABLE": {
        "body": "PATHING_FLAG_UNWALKABLE",
        "description": "ConvertPathingFlag(2)",
        "prefix": "PATHING_FLAG_UNWALKABLE"
    },
    "PATHING_FLAG_UNFLYABLE": {
        "body": "PATHING_FLAG_UNFLYABLE",
        "description": "ConvertPathingFlag(4)",
        "prefix": "PATHING_FLAG_UNFLYABLE"
    },
    "PATHING_FLAG_UNBUILDABLE": {
        "body": "PATHING_FLAG_UNBUILDABLE",
        "description": "ConvertPathingFlag(8)",
        "prefix": "PATHING_FLAG_UNBUILDABLE"
    },
    "PATHING_FLAG_UNPEONHARVEST": {
        "body": "PATHING_FLAG_UNPEONHARVEST",
        "description": "ConvertPathingFlag(16)",
        "prefix": "PATHING_FLAG_UNPEONHARVEST"
    },
    "PATHING_FLAG_BLIGHTED": {
        "body": "PATHING_FLAG_BLIGHTED",
        "description": "ConvertPathingFlag(32)",
        "prefix": "PATHING_FLAG_BLIGHTED"
    },
    "PATHING_FLAG_UNFLOATABLE": {
        "body": "PATHING_FLAG_UNFLOATABLE",
        "description": "ConvertPathingFlag(64)",
        "prefix": "PATHING_FLAG_UNFLOATABLE"
    },
    "PATHING_FLAG_UNAMPHIBIOUS": {
        "body": "PATHING_FLAG_UNAMPHIBIOUS",
        "description": "ConvertPathingFlag(128)",
        "prefix": "PATHING_FLAG_UNAMPHIBIOUS"
    },
    "PATHING_FLAG_UNITEMPLACABLE": {
        "body": "PATHING_FLAG_UNITEMPLACABLE",
        "description": "ConvertPathingFlag(256)",
        "prefix": "PATHING_FLAG_UNITEMPLACABLE"
    },
    "Deg2Rad": {
        "body": "Deg2Rad(${1:degrees})",
        "description": "Deg2Rad (real degrees)",
        "prefix": "Deg2Rad"
    },
    "Rad2Deg": {
        "body": "Rad2Deg(${1:radians})",
        "description": "Rad2Deg (real radians)",
        "prefix": "Rad2Deg"
    },
    "Sin": {
        "body": "Sin(${1:radians})",
        "description": "Sin (real radians)",
        "prefix": "Sin"
    },
    "Cos": {
        "body": "Cos(${1:radians})",
        "description": "Cos (real radians)",
        "prefix": "Cos"
    },
    "Tan": {
        "body": "Tan(${1:radians})",
        "description": "Tan (real radians)",
        "prefix": "Tan"
    },
    "Asin": {
        "body": "Asin(${1:y})",
        "description": "Asin (real y)",
        "prefix": "Asin"
    },
    "Acos": {
        "body": "Acos(${1:x})",
        "description": "Acos (real x)",
        "prefix": "Acos"
    },
    "Atan": {
        "body": "Atan(${1:x})",
        "description": "Atan (real x)",
        "prefix": "Atan"
    },
    "Atan2": {
        "body": "Atan2(${1:y}, ${2:x})",
        "description": "Atan2 (real y, real x)",
        "prefix": "Atan2"
    },
    "SquareRoot": {
        "body": "SquareRoot(${1:x})",
        "description": "SquareRoot (real x)",
        "prefix": "SquareRoot"
    },
    "Pow": {
        "body": "Pow(${1:x}, ${2:power})",
        "description": "Pow (real x, real power)",
        "prefix": "Pow"
    },
    "I2R": {
        "body": "I2R(${1:i})",
        "description": "I2R (integer i)",
        "prefix": "I2R"
    },
    "R2I": {
        "body": "R2I(${1:r})",
        "description": "R2I (real r)",
        "prefix": "R2I"
    },
    "I2S": {
        "body": "I2S(${1:i})",
        "description": "I2S (integer i)",
        "prefix": "I2S"
    },
    "R2S": {
        "body": "R2S(${1:r})",
        "description": "R2S (real r)",
        "prefix": "R2S"
    },
    "R2SW": {
        "body": "R2SW(${1:r}, ${2:width}, ${3:precision})",
        "description": "R2SW (real r, integer width, integer precision)",
        "prefix": "R2SW"
    },
    "S2I": {
        "body": "S2I(${1:s})",
        "description": "S2I (string s)",
        "prefix": "S2I"
    },
    "S2R": {
        "body": "S2R(${1:s})",
        "description": "S2R (string s)",
        "prefix": "S2R"
    },
    "GetHandleId": {
        "body": "GetHandleId(${1:h})",
        "description": "GetHandleId (handle h)",
        "prefix": "GetHandleId"
    },
    "SubString": {
        "body": "SubString(${1:source}, ${2:start}, ${3:end})",
        "description": "SubString (string source, integer start, integer end)",
        "prefix": "SubString"
    },
    "StringLength": {
        "body": "StringLength(${1:s})",
        "description": "StringLength (string s)",
        "prefix": "StringLength"
    },
    "StringCase": {
        "body": "StringCase(${1:source}, ${2:upper})",
        "description": "StringCase (string source, boolean upper)",
        "prefix": "StringCase"
    },
    "StringHash": {
        "body": "StringHash(${1:s})",
        "description": "StringHash (string s)",
        "prefix": "StringHash"
    },
    "GetLocalizedString": {
        "body": "GetLocalizedString(${1:source})",
        "description": "GetLocalizedString (string source)",
        "prefix": "GetLocalizedString"
    },
    "GetLocalizedHotkey": {
        "body": "GetLocalizedHotkey(${1:source})",
        "description": "GetLocalizedHotkey (string source)",
        "prefix": "GetLocalizedHotkey"
    },
    "SetMapName": {
        "body": "SetMapName(${1:name})",
        "description": "SetMapName (string name)",
        "prefix": "SetMapName"
    },
    "SetMapDescription": {
        "body": "SetMapDescription(${1:description})",
        "description": "SetMapDescription (string description)",
        "prefix": "SetMapDescription"
    },
    "SetTeams": {
        "body": "SetTeams(${1:teamcount})",
        "description": "SetTeams (integer teamcount)",
        "prefix": "SetTeams"
    },
    "SetPlayers": {
        "body": "SetPlayers(${1:playercount})",
        "description": "SetPlayers (integer playercount)",
        "prefix": "SetPlayers"
    },
    "DefineStartLocation": {
        "body": "DefineStartLocation(${1:whichStartLoc}, ${2:x}, ${3:y})",
        "description": "DefineStartLocation (integer whichStartLoc, real x, real y)",
        "prefix": "DefineStartLocation"
    },
    "DefineStartLocationLoc": {
        "body": "DefineStartLocationLoc(${1:whichStartLoc}, ${2:whichLocation})",
        "description": "DefineStartLocationLoc (integer whichStartLoc, location whichLocation)",
        "prefix": "DefineStartLocationLoc"
    },
    "SetStartLocPrioCount": {
        "body": "SetStartLocPrioCount(${1:whichStartLoc}, ${2:prioSlotCount})",
        "description": "SetStartLocPrioCount (integer whichStartLoc, integer prioSlotCount)",
        "prefix": "SetStartLocPrioCount"
    },
    "SetStartLocPrio": {
        "body": "SetStartLocPrio(${1:whichStartLoc}, ${2:prioSlotIndex}, ${3:otherStartLocIndex}, ${4:priority})",
        "description": "SetStartLocPrio (integer whichStartLoc, integer prioSlotIndex, integer otherStartLocIndex, startlocprio priority)",
        "prefix": "SetStartLocPrio"
    },
    "GetStartLocPrioSlot": {
        "body": "GetStartLocPrioSlot(${1:whichStartLoc}, ${2:prioSlotIndex})",
        "description": "GetStartLocPrioSlot (integer whichStartLoc, integer prioSlotIndex)",
        "prefix": "GetStartLocPrioSlot"
    },
    "GetStartLocPrio": {
        "body": "GetStartLocPrio(${1:whichStartLoc}, ${2:prioSlotIndex})",
        "description": "GetStartLocPrio (integer whichStartLoc, integer prioSlotIndex)",
        "prefix": "GetStartLocPrio"
    },
    "SetGameTypeSupported": {
        "body": "SetGameTypeSupported(${1:whichGameType}, ${2:value})",
        "description": "SetGameTypeSupported (gametype whichGameType, boolean value)",
        "prefix": "SetGameTypeSupported"
    },
    "SetMapFlag": {
        "body": "SetMapFlag(${1:whichMapFlag}, ${2:value})",
        "description": "SetMapFlag (mapflag whichMapFlag, boolean value)",
        "prefix": "SetMapFlag"
    },
    "SetGamePlacement": {
        "body": "SetGamePlacement(${1:whichPlacementType})",
        "description": "SetGamePlacement (placement whichPlacementType)",
        "prefix": "SetGamePlacement"
    },
    "SetGameSpeed": {
        "body": "SetGameSpeed(${1:whichspeed})",
        "description": "SetGameSpeed (gamespeed whichspeed)",
        "prefix": "SetGameSpeed"
    },
    "SetGameDifficulty": {
        "body": "SetGameDifficulty(${1:whichdifficulty})",
        "description": "SetGameDifficulty (gamedifficulty whichdifficulty)",
        "prefix": "SetGameDifficulty"
    },
    "SetResourceDensity": {
        "body": "SetResourceDensity(${1:whichdensity})",
        "description": "SetResourceDensity (mapdensity whichdensity)",
        "prefix": "SetResourceDensity"
    },
    "SetCreatureDensity": {
        "body": "SetCreatureDensity(${1:whichdensity})",
        "description": "SetCreatureDensity (mapdensity whichdensity)",
        "prefix": "SetCreatureDensity"
    },
    "GetTeams": {
        "body": "GetTeams()",
        "description": "GetTeams ()",
        "prefix": "GetTeams"
    },
    "GetPlayers": {
        "body": "GetPlayers()",
        "description": "GetPlayers ()",
        "prefix": "GetPlayers"
    },
    "IsGameTypeSupported": {
        "body": "IsGameTypeSupported(${1:whichGameType})",
        "description": "IsGameTypeSupported (gametype whichGameType)",
        "prefix": "IsGameTypeSupported"
    },
    "GetGameTypeSelected": {
        "body": "GetGameTypeSelected()",
        "description": "GetGameTypeSelected ()",
        "prefix": "GetGameTypeSelected"
    },
    "IsMapFlagSet": {
        "body": "IsMapFlagSet(${1:whichMapFlag})",
        "description": "IsMapFlagSet (mapflag whichMapFlag)",
        "prefix": "IsMapFlagSet"
    },
    "GetGamePlacement": {
        "body": "GetGamePlacement()",
        "description": "GetGamePlacement ()",
        "prefix": "GetGamePlacement"
    },
    "GetGameSpeed": {
        "body": "GetGameSpeed()",
        "description": "GetGameSpeed ()",
        "prefix": "GetGameSpeed"
    },
    "GetGameDifficulty": {
        "body": "GetGameDifficulty()",
        "description": "GetGameDifficulty ()",
        "prefix": "GetGameDifficulty"
    },
    "GetResourceDensity": {
        "body": "GetResourceDensity()",
        "description": "GetResourceDensity ()",
        "prefix": "GetResourceDensity"
    },
    "GetCreatureDensity": {
        "body": "GetCreatureDensity()",
        "description": "GetCreatureDensity ()",
        "prefix": "GetCreatureDensity"
    },
    "GetStartLocationX": {
        "body": "GetStartLocationX(${1:whichStartLocation})",
        "description": "GetStartLocationX (integer whichStartLocation)",
        "prefix": "GetStartLocationX"
    },
    "GetStartLocationY": {
        "body": "GetStartLocationY(${1:whichStartLocation})",
        "description": "GetStartLocationY (integer whichStartLocation)",
        "prefix": "GetStartLocationY"
    },
    "GetStartLocationLoc": {
        "body": "GetStartLocationLoc(${1:whichStartLocation})",
        "description": "GetStartLocationLoc (integer whichStartLocation)",
        "prefix": "GetStartLocationLoc"
    },
    "SetPlayerTeam": {
        "body": "SetPlayerTeam(${1:whichPlayer}, ${2:whichTeam})",
        "description": "SetPlayerTeam (player whichPlayer, integer whichTeam)",
        "prefix": "SetPlayerTeam"
    },
    "SetPlayerStartLocation": {
        "body": "SetPlayerStartLocation(${1:whichPlayer}, ${2:startLocIndex})",
        "description": "SetPlayerStartLocation (player whichPlayer, integer startLocIndex)",
        "prefix": "SetPlayerStartLocation"
    },
    "ForcePlayerStartLocation": {
        "body": "ForcePlayerStartLocation(${1:whichPlayer}, ${2:startLocIndex})",
        "description": "ForcePlayerStartLocation (player whichPlayer, integer startLocIndex)",
        "prefix": "ForcePlayerStartLocation"
    },
    "SetPlayerColor": {
        "body": "SetPlayerColor(${1:whichPlayer}, ${2:color})",
        "description": "SetPlayerColor (player whichPlayer, playercolor color)",
        "prefix": "SetPlayerColor"
    },
    "SetPlayerAlliance": {
        "body": "SetPlayerAlliance(${1:sourcePlayer}, ${2:otherPlayer}, ${3:whichAllianceSetting}, ${4:value})",
        "description": "SetPlayerAlliance (player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting, boolean value)",
        "prefix": "SetPlayerAlliance"
    },
    "SetPlayerTaxRate": {
        "body": "SetPlayerTaxRate(${1:sourcePlayer}, ${2:otherPlayer}, ${3:whichResource}, ${4:rate})",
        "description": "SetPlayerTaxRate (player sourcePlayer, player otherPlayer, playerstate whichResource, integer rate)",
        "prefix": "SetPlayerTaxRate"
    },
    "SetPlayerRacePreference": {
        "body": "SetPlayerRacePreference(${1:whichPlayer}, ${2:whichRacePreference})",
        "description": "SetPlayerRacePreference (player whichPlayer, racepreference whichRacePreference)",
        "prefix": "SetPlayerRacePreference"
    },
    "SetPlayerRaceSelectable": {
        "body": "SetPlayerRaceSelectable(${1:whichPlayer}, ${2:value})",
        "description": "SetPlayerRaceSelectable (player whichPlayer, boolean value)",
        "prefix": "SetPlayerRaceSelectable"
    },
    "SetPlayerController": {
        "body": "SetPlayerController(${1:whichPlayer}, ${2:controlType})",
        "description": "SetPlayerController (player whichPlayer, mapcontrol controlType)",
        "prefix": "SetPlayerController"
    },
    "SetPlayerName": {
        "body": "SetPlayerName(${1:whichPlayer}, ${2:name})",
        "description": "SetPlayerName (player whichPlayer, string name)",
        "prefix": "SetPlayerName"
    },
    "SetPlayerOnScoreScreen": {
        "body": "SetPlayerOnScoreScreen(${1:whichPlayer}, ${2:flag})",
        "description": "SetPlayerOnScoreScreen (player whichPlayer, boolean flag)",
        "prefix": "SetPlayerOnScoreScreen"
    },
    "GetPlayerTeam": {
        "body": "GetPlayerTeam(${1:whichPlayer})",
        "description": "GetPlayerTeam (player whichPlayer)",
        "prefix": "GetPlayerTeam"
    },
    "GetPlayerStartLocation": {
        "body": "GetPlayerStartLocation(${1:whichPlayer})",
        "description": "GetPlayerStartLocation (player whichPlayer)",
        "prefix": "GetPlayerStartLocation"
    },
    "GetPlayerColor": {
        "body": "GetPlayerColor(${1:whichPlayer})",
        "description": "GetPlayerColor (player whichPlayer)",
        "prefix": "GetPlayerColor"
    },
    "GetPlayerSelectable": {
        "body": "GetPlayerSelectable(${1:whichPlayer})",
        "description": "GetPlayerSelectable (player whichPlayer)",
        "prefix": "GetPlayerSelectable"
    },
    "GetPlayerController": {
        "body": "GetPlayerController(${1:whichPlayer})",
        "description": "GetPlayerController (player whichPlayer)",
        "prefix": "GetPlayerController"
    },
    "GetPlayerSlotState": {
        "body": "GetPlayerSlotState(${1:whichPlayer})",
        "description": "GetPlayerSlotState (player whichPlayer)",
        "prefix": "GetPlayerSlotState"
    },
    "GetPlayerTaxRate": {
        "body": "GetPlayerTaxRate(${1:sourcePlayer}, ${2:otherPlayer}, ${3:whichResource})",
        "description": "GetPlayerTaxRate (player sourcePlayer, player otherPlayer, playerstate whichResource)",
        "prefix": "GetPlayerTaxRate"
    },
    "IsPlayerRacePrefSet": {
        "body": "IsPlayerRacePrefSet(${1:whichPlayer}, ${2:pref})",
        "description": "IsPlayerRacePrefSet (player whichPlayer, racepreference pref)",
        "prefix": "IsPlayerRacePrefSet"
    },
    "GetPlayerName": {
        "body": "GetPlayerName(${1:whichPlayer})",
        "description": "GetPlayerName (player whichPlayer)",
        "prefix": "GetPlayerName"
    },
    "CreateTimer": {
        "body": "CreateTimer()",
        "description": "CreateTimer ()",
        "prefix": "CreateTimer"
    },
    "DestroyTimer": {
        "body": "DestroyTimer(${1:whichTimer})",
        "description": "DestroyTimer (timer whichTimer)",
        "prefix": "DestroyTimer"
    },
    "TimerStart": {
        "body": "TimerStart(${1:whichTimer}, ${2:timeout}, ${3:periodic}, ${4:handlerFunc})",
        "description": "TimerStart (timer whichTimer, real timeout, boolean periodic, code handlerFunc)",
        "prefix": "TimerStart"
    },
    "TimerGetElapsed": {
        "body": "TimerGetElapsed(${1:whichTimer})",
        "description": "TimerGetElapsed (timer whichTimer)",
        "prefix": "TimerGetElapsed"
    },
    "TimerGetRemaining": {
        "body": "TimerGetRemaining(${1:whichTimer})",
        "description": "TimerGetRemaining (timer whichTimer)",
        "prefix": "TimerGetRemaining"
    },
    "TimerGetTimeout": {
        "body": "TimerGetTimeout(${1:whichTimer})",
        "description": "TimerGetTimeout (timer whichTimer)",
        "prefix": "TimerGetTimeout"
    },
    "PauseTimer": {
        "body": "PauseTimer(${1:whichTimer})",
        "description": "PauseTimer (timer whichTimer)",
        "prefix": "PauseTimer"
    },
    "ResumeTimer": {
        "body": "ResumeTimer(${1:whichTimer})",
        "description": "ResumeTimer (timer whichTimer)",
        "prefix": "ResumeTimer"
    },
    "GetExpiredTimer": {
        "body": "GetExpiredTimer()",
        "description": "GetExpiredTimer ()",
        "prefix": "GetExpiredTimer"
    },
    "CreateGroup": {
        "body": "CreateGroup()",
        "description": "CreateGroup ()",
        "prefix": "CreateGroup"
    },
    "DestroyGroup": {
        "body": "DestroyGroup(${1:whichGroup})",
        "description": "DestroyGroup (group whichGroup)",
        "prefix": "DestroyGroup"
    },
    "GroupAddUnit": {
        "body": "GroupAddUnit(${1:whichGroup}, ${2:whichUnit})",
        "description": "GroupAddUnit (group whichGroup, unit whichUnit)",
        "prefix": "GroupAddUnit"
    },
    "GroupRemoveUnit": {
        "body": "GroupRemoveUnit(${1:whichGroup}, ${2:whichUnit})",
        "description": "GroupRemoveUnit (group whichGroup, unit whichUnit)",
        "prefix": "GroupRemoveUnit"
    },
    "BlzGroupAddGroupFast": {
        "body": "BlzGroupAddGroupFast(${1:whichGroup}, ${2:addGroup})",
        "description": "BlzGroupAddGroupFast (group whichGroup, group addGroup)",
        "prefix": "BlzGroupAddGroupFast"
    },
    "BlzGroupRemoveGroupFast": {
        "body": "BlzGroupRemoveGroupFast(${1:whichGroup}, ${2:removeGroup})",
        "description": "BlzGroupRemoveGroupFast (group whichGroup, group removeGroup)",
        "prefix": "BlzGroupRemoveGroupFast"
    },
    "GroupClear": {
        "body": "GroupClear(${1:whichGroup})",
        "description": "GroupClear (group whichGroup)",
        "prefix": "GroupClear"
    },
    "BlzGroupGetSize": {
        "body": "BlzGroupGetSize(${1:whichGroup})",
        "description": "BlzGroupGetSize (group whichGroup)",
        "prefix": "BlzGroupGetSize"
    },
    "BlzGroupUnitAt": {
        "body": "BlzGroupUnitAt(${1:whichGroup}, ${2:index})",
        "description": "BlzGroupUnitAt (group whichGroup, integer index)",
        "prefix": "BlzGroupUnitAt"
    },
    "GroupEnumUnitsOfType": {
        "body": "GroupEnumUnitsOfType(${1:whichGroup}, ${2:unitname}, ${3:filter})",
        "description": "GroupEnumUnitsOfType (group whichGroup, string unitname, boolexpr filter)",
        "prefix": "GroupEnumUnitsOfType"
    },
    "GroupEnumUnitsOfPlayer": {
        "body": "GroupEnumUnitsOfPlayer(${1:whichGroup}, ${2:whichPlayer}, ${3:filter})",
        "description": "GroupEnumUnitsOfPlayer (group whichGroup, player whichPlayer, boolexpr filter)",
        "prefix": "GroupEnumUnitsOfPlayer"
    },
    "GroupEnumUnitsOfTypeCounted": {
        "body": "GroupEnumUnitsOfTypeCounted(${1:whichGroup}, ${2:unitname}, ${3:filter}, ${4:countLimit})",
        "description": "GroupEnumUnitsOfTypeCounted (group whichGroup, string unitname, boolexpr filter, integer countLimit)",
        "prefix": "GroupEnumUnitsOfTypeCounted"
    },
    "GroupEnumUnitsInRect": {
        "body": "GroupEnumUnitsInRect(${1:whichGroup}, ${2:r}, ${3:filter})",
        "description": "GroupEnumUnitsInRect (group whichGroup, rect r, boolexpr filter)",
        "prefix": "GroupEnumUnitsInRect"
    },
    "GroupEnumUnitsInRectCounted": {
        "body": "GroupEnumUnitsInRectCounted(${1:whichGroup}, ${2:r}, ${3:filter}, ${4:countLimit})",
        "description": "GroupEnumUnitsInRectCounted (group whichGroup, rect r, boolexpr filter, integer countLimit)",
        "prefix": "GroupEnumUnitsInRectCounted"
    },
    "GroupEnumUnitsInRange": {
        "body": "GroupEnumUnitsInRange(${1:whichGroup}, ${2:x}, ${3:y}, ${4:radius}, ${5:filter})",
        "description": "GroupEnumUnitsInRange (group whichGroup, real x, real y, real radius, boolexpr filter)",
        "prefix": "GroupEnumUnitsInRange"
    },
    "GroupEnumUnitsInRangeOfLoc": {
        "body": "GroupEnumUnitsInRangeOfLoc(${1:whichGroup}, ${2:whichLocation}, ${3:radius}, ${4:filter})",
        "description": "GroupEnumUnitsInRangeOfLoc (group whichGroup, location whichLocation, real radius, boolexpr filter)",
        "prefix": "GroupEnumUnitsInRangeOfLoc"
    },
    "GroupEnumUnitsInRangeCounted": {
        "body": "GroupEnumUnitsInRangeCounted(${1:whichGroup}, ${2:x}, ${3:y}, ${4:radius}, ${5:filter}, ${6:countLimit})",
        "description": "GroupEnumUnitsInRangeCounted (group whichGroup, real x, real y, real radius, boolexpr filter, integer countLimit)",
        "prefix": "GroupEnumUnitsInRangeCounted"
    },
    "GroupEnumUnitsInRangeOfLocCounted": {
        "body": "GroupEnumUnitsInRangeOfLocCounted(${1:whichGroup}, ${2:whichLocation}, ${3:radius}, ${4:filter}, ${5:countLimit})",
        "description": "GroupEnumUnitsInRangeOfLocCounted (group whichGroup, location whichLocation, real radius, boolexpr filter, integer countLimit)",
        "prefix": "GroupEnumUnitsInRangeOfLocCounted"
    },
    "GroupEnumUnitsSelected": {
        "body": "GroupEnumUnitsSelected(${1:whichGroup}, ${2:whichPlayer}, ${3:filter})",
        "description": "GroupEnumUnitsSelected (group whichGroup, player whichPlayer, boolexpr filter)",
        "prefix": "GroupEnumUnitsSelected"
    },
    "GroupImmediateOrder": {
        "body": "GroupImmediateOrder(${1:whichGroup}, ${2:order})",
        "description": "GroupImmediateOrder (group whichGroup, string order)",
        "prefix": "GroupImmediateOrder"
    },
    "GroupImmediateOrderById": {
        "body": "GroupImmediateOrderById(${1:whichGroup}, ${2:order})",
        "description": "GroupImmediateOrderById (group whichGroup, integer order)",
        "prefix": "GroupImmediateOrderById"
    },
    "GroupPointOrder": {
        "body": "GroupPointOrder(${1:whichGroup}, ${2:order}, ${3:x}, ${4:y})",
        "description": "GroupPointOrder (group whichGroup, string order, real x, real y)",
        "prefix": "GroupPointOrder"
    },
    "GroupPointOrderLoc": {
        "body": "GroupPointOrderLoc(${1:whichGroup}, ${2:order}, ${3:whichLocation})",
        "description": "GroupPointOrderLoc (group whichGroup, string order, location whichLocation)",
        "prefix": "GroupPointOrderLoc"
    },
    "GroupPointOrderById": {
        "body": "GroupPointOrderById(${1:whichGroup}, ${2:order}, ${3:x}, ${4:y})",
        "description": "GroupPointOrderById (group whichGroup, integer order, real x, real y)",
        "prefix": "GroupPointOrderById"
    },
    "GroupPointOrderByIdLoc": {
        "body": "GroupPointOrderByIdLoc(${1:whichGroup}, ${2:order}, ${3:whichLocation})",
        "description": "GroupPointOrderByIdLoc (group whichGroup, integer order, location whichLocation)",
        "prefix": "GroupPointOrderByIdLoc"
    },
    "GroupTargetOrder": {
        "body": "GroupTargetOrder(${1:whichGroup}, ${2:order}, ${3:targetWidget})",
        "description": "GroupTargetOrder (group whichGroup, string order, widget targetWidget)",
        "prefix": "GroupTargetOrder"
    },
    "GroupTargetOrderById": {
        "body": "GroupTargetOrderById(${1:whichGroup}, ${2:order}, ${3:targetWidget})",
        "description": "GroupTargetOrderById (group whichGroup, integer order, widget targetWidget)",
        "prefix": "GroupTargetOrderById"
    },
    "ForGroup": {
        "body": "ForGroup(${1:whichGroup}, ${2:callback})",
        "description": "ForGroup (group whichGroup, code callback)",
        "prefix": "ForGroup"
    },
    "FirstOfGroup": {
        "body": "FirstOfGroup(${1:whichGroup})",
        "description": "FirstOfGroup (group whichGroup)",
        "prefix": "FirstOfGroup"
    },
    "CreateForce": {
        "body": "CreateForce()",
        "description": "CreateForce ()",
        "prefix": "CreateForce"
    },
    "DestroyForce": {
        "body": "DestroyForce(${1:whichForce})",
        "description": "DestroyForce (force whichForce)",
        "prefix": "DestroyForce"
    },
    "ForceAddPlayer": {
        "body": "ForceAddPlayer(${1:whichForce}, ${2:whichPlayer})",
        "description": "ForceAddPlayer (force whichForce, player whichPlayer)",
        "prefix": "ForceAddPlayer"
    },
    "ForceRemovePlayer": {
        "body": "ForceRemovePlayer(${1:whichForce}, ${2:whichPlayer})",
        "description": "ForceRemovePlayer (force whichForce, player whichPlayer)",
        "prefix": "ForceRemovePlayer"
    },
    "BlzForceHasPlayer": {
        "body": "BlzForceHasPlayer(${1:whichForce}, ${2:whichPlayer})",
        "description": "BlzForceHasPlayer (force whichForce, player whichPlayer)",
        "prefix": "BlzForceHasPlayer"
    },
    "ForceClear": {
        "body": "ForceClear(${1:whichForce})",
        "description": "ForceClear (force whichForce)",
        "prefix": "ForceClear"
    },
    "ForceEnumPlayers": {
        "body": "ForceEnumPlayers(${1:whichForce}, ${2:filter})",
        "description": "ForceEnumPlayers (force whichForce, boolexpr filter)",
        "prefix": "ForceEnumPlayers"
    },
    "ForceEnumPlayersCounted": {
        "body": "ForceEnumPlayersCounted(${1:whichForce}, ${2:filter}, ${3:countLimit})",
        "description": "ForceEnumPlayersCounted (force whichForce, boolexpr filter, integer countLimit)",
        "prefix": "ForceEnumPlayersCounted"
    },
    "ForceEnumAllies": {
        "body": "ForceEnumAllies(${1:whichForce}, ${2:whichPlayer}, ${3:filter})",
        "description": "ForceEnumAllies (force whichForce, player whichPlayer, boolexpr filter)",
        "prefix": "ForceEnumAllies"
    },
    "ForceEnumEnemies": {
        "body": "ForceEnumEnemies(${1:whichForce}, ${2:whichPlayer}, ${3:filter})",
        "description": "ForceEnumEnemies (force whichForce, player whichPlayer, boolexpr filter)",
        "prefix": "ForceEnumEnemies"
    },
    "ForForce": {
        "body": "ForForce(${1:whichForce}, ${2:callback})",
        "description": "ForForce (force whichForce, code callback)",
        "prefix": "ForForce"
    },
    "Rect": {
        "body": "Rect(${1:minx}, ${2:miny}, ${3:maxx}, ${4:maxy})",
        "description": "Rect (real minx, real miny, real maxx, real maxy)",
        "prefix": "Rect"
    },
    "RectFromLoc": {
        "body": "RectFromLoc(${1:min}, ${2:max})",
        "description": "RectFromLoc (location min, location max)",
        "prefix": "RectFromLoc"
    },
    "RemoveRect": {
        "body": "RemoveRect(${1:whichRect})",
        "description": "RemoveRect (rect whichRect)",
        "prefix": "RemoveRect"
    },
    "SetRect": {
        "body": "SetRect(${1:whichRect}, ${2:minx}, ${3:miny}, ${4:maxx}, ${5:maxy})",
        "description": "SetRect (rect whichRect, real minx, real miny, real maxx, real maxy)",
        "prefix": "SetRect"
    },
    "SetRectFromLoc": {
        "body": "SetRectFromLoc(${1:whichRect}, ${2:min}, ${3:max})",
        "description": "SetRectFromLoc (rect whichRect, location min, location max)",
        "prefix": "SetRectFromLoc"
    },
    "MoveRectTo": {
        "body": "MoveRectTo(${1:whichRect}, ${2:newCenterX}, ${3:newCenterY})",
        "description": "MoveRectTo (rect whichRect, real newCenterX, real newCenterY)",
        "prefix": "MoveRectTo"
    },
    "MoveRectToLoc": {
        "body": "MoveRectToLoc(${1:whichRect}, ${2:newCenterLoc})",
        "description": "MoveRectToLoc (rect whichRect, location newCenterLoc)",
        "prefix": "MoveRectToLoc"
    },
    "GetRectCenterX": {
        "body": "GetRectCenterX(${1:whichRect})",
        "description": "GetRectCenterX (rect whichRect)",
        "prefix": "GetRectCenterX"
    },
    "GetRectCenterY": {
        "body": "GetRectCenterY(${1:whichRect})",
        "description": "GetRectCenterY (rect whichRect)",
        "prefix": "GetRectCenterY"
    },
    "GetRectMinX": {
        "body": "GetRectMinX(${1:whichRect})",
        "description": "GetRectMinX (rect whichRect)",
        "prefix": "GetRectMinX"
    },
    "GetRectMinY": {
        "body": "GetRectMinY(${1:whichRect})",
        "description": "GetRectMinY (rect whichRect)",
        "prefix": "GetRectMinY"
    },
    "GetRectMaxX": {
        "body": "GetRectMaxX(${1:whichRect})",
        "description": "GetRectMaxX (rect whichRect)",
        "prefix": "GetRectMaxX"
    },
    "GetRectMaxY": {
        "body": "GetRectMaxY(${1:whichRect})",
        "description": "GetRectMaxY (rect whichRect)",
        "prefix": "GetRectMaxY"
    },
    "CreateRegion": {
        "body": "CreateRegion()",
        "description": "CreateRegion ()",
        "prefix": "CreateRegion"
    },
    "RemoveRegion": {
        "body": "RemoveRegion(${1:whichRegion})",
        "description": "RemoveRegion (region whichRegion)",
        "prefix": "RemoveRegion"
    },
    "RegionAddRect": {
        "body": "RegionAddRect(${1:whichRegion}, ${2:r})",
        "description": "RegionAddRect (region whichRegion, rect r)",
        "prefix": "RegionAddRect"
    },
    "RegionClearRect": {
        "body": "RegionClearRect(${1:whichRegion}, ${2:r})",
        "description": "RegionClearRect (region whichRegion, rect r)",
        "prefix": "RegionClearRect"
    },
    "RegionAddCell": {
        "body": "RegionAddCell(${1:whichRegion}, ${2:x}, ${3:y})",
        "description": "RegionAddCell (region whichRegion, real x, real y)",
        "prefix": "RegionAddCell"
    },
    "RegionAddCellAtLoc": {
        "body": "RegionAddCellAtLoc(${1:whichRegion}, ${2:whichLocation})",
        "description": "RegionAddCellAtLoc (region whichRegion, location whichLocation)",
        "prefix": "RegionAddCellAtLoc"
    },
    "RegionClearCell": {
        "body": "RegionClearCell(${1:whichRegion}, ${2:x}, ${3:y})",
        "description": "RegionClearCell (region whichRegion, real x, real y)",
        "prefix": "RegionClearCell"
    },
    "RegionClearCellAtLoc": {
        "body": "RegionClearCellAtLoc(${1:whichRegion}, ${2:whichLocation})",
        "description": "RegionClearCellAtLoc (region whichRegion, location whichLocation)",
        "prefix": "RegionClearCellAtLoc"
    },
    "Location": {
        "body": "Location(${1:x}, ${2:y})",
        "description": "Location (real x, real y)",
        "prefix": "Location"
    },
    "RemoveLocation": {
        "body": "RemoveLocation(${1:whichLocation})",
        "description": "RemoveLocation (location whichLocation)",
        "prefix": "RemoveLocation"
    },
    "MoveLocation": {
        "body": "MoveLocation(${1:whichLocation}, ${2:newX}, ${3:newY})",
        "description": "MoveLocation (location whichLocation, real newX, real newY)",
        "prefix": "MoveLocation"
    },
    "GetLocationX": {
        "body": "GetLocationX(${1:whichLocation})",
        "description": "GetLocationX (location whichLocation)",
        "prefix": "GetLocationX"
    },
    "GetLocationY": {
        "body": "GetLocationY(${1:whichLocation})",
        "description": "GetLocationY (location whichLocation)",
        "prefix": "GetLocationY"
    },
    "GetLocationZ": {
        "body": "GetLocationZ(${1:whichLocation})",
        "description": "GetLocationZ (location whichLocation)",
        "prefix": "GetLocationZ"
    },
    "IsUnitInRegion": {
        "body": "IsUnitInRegion(${1:whichRegion}, ${2:whichUnit})",
        "description": "IsUnitInRegion (region whichRegion, unit whichUnit)",
        "prefix": "IsUnitInRegion"
    },
    "IsPointInRegion": {
        "body": "IsPointInRegion(${1:whichRegion}, ${2:x}, ${3:y})",
        "description": "IsPointInRegion (region whichRegion, real x, real y)",
        "prefix": "IsPointInRegion"
    },
    "IsLocationInRegion": {
        "body": "IsLocationInRegion(${1:whichRegion}, ${2:whichLocation})",
        "description": "IsLocationInRegion (region whichRegion, location whichLocation)",
        "prefix": "IsLocationInRegion"
    },
    "GetWorldBounds": {
        "body": "GetWorldBounds()",
        "description": "GetWorldBounds ()",
        "prefix": "GetWorldBounds"
    },
    "CreateTrigger": {
        "body": "CreateTrigger()",
        "description": "CreateTrigger ()",
        "prefix": "CreateTrigger"
    },
    "DestroyTrigger": {
        "body": "DestroyTrigger(${1:whichTrigger})",
        "description": "DestroyTrigger (trigger whichTrigger)",
        "prefix": "DestroyTrigger"
    },
    "ResetTrigger": {
        "body": "ResetTrigger(${1:whichTrigger})",
        "description": "ResetTrigger (trigger whichTrigger)",
        "prefix": "ResetTrigger"
    },
    "EnableTrigger": {
        "body": "EnableTrigger(${1:whichTrigger})",
        "description": "EnableTrigger (trigger whichTrigger)",
        "prefix": "EnableTrigger"
    },
    "DisableTrigger": {
        "body": "DisableTrigger(${1:whichTrigger})",
        "description": "DisableTrigger (trigger whichTrigger)",
        "prefix": "DisableTrigger"
    },
    "IsTriggerEnabled": {
        "body": "IsTriggerEnabled(${1:whichTrigger})",
        "description": "IsTriggerEnabled (trigger whichTrigger)",
        "prefix": "IsTriggerEnabled"
    },
    "TriggerWaitOnSleeps": {
        "body": "TriggerWaitOnSleeps(${1:whichTrigger}, ${2:flag})",
        "description": "TriggerWaitOnSleeps (trigger whichTrigger, boolean flag)",
        "prefix": "TriggerWaitOnSleeps"
    },
    "IsTriggerWaitOnSleeps": {
        "body": "IsTriggerWaitOnSleeps(${1:whichTrigger})",
        "description": "IsTriggerWaitOnSleeps (trigger whichTrigger)",
        "prefix": "IsTriggerWaitOnSleeps"
    },
    "GetFilterUnit": {
        "body": "GetFilterUnit()",
        "description": "GetFilterUnit ()",
        "prefix": "GetFilterUnit"
    },
    "GetEnumUnit": {
        "body": "GetEnumUnit()",
        "description": "GetEnumUnit ()",
        "prefix": "GetEnumUnit"
    },
    "GetFilterDestructable": {
        "body": "GetFilterDestructable()",
        "description": "GetFilterDestructable ()",
        "prefix": "GetFilterDestructable"
    },
    "GetEnumDestructable": {
        "body": "GetEnumDestructable()",
        "description": "GetEnumDestructable ()",
        "prefix": "GetEnumDestructable"
    },
    "GetFilterItem": {
        "body": "GetFilterItem()",
        "description": "GetFilterItem ()",
        "prefix": "GetFilterItem"
    },
    "GetEnumItem": {
        "body": "GetEnumItem()",
        "description": "GetEnumItem ()",
        "prefix": "GetEnumItem"
    },
    "GetFilterPlayer": {
        "body": "GetFilterPlayer()",
        "description": "GetFilterPlayer ()",
        "prefix": "GetFilterPlayer"
    },
    "GetEnumPlayer": {
        "body": "GetEnumPlayer()",
        "description": "GetEnumPlayer ()",
        "prefix": "GetEnumPlayer"
    },
    "GetTriggeringTrigger": {
        "body": "GetTriggeringTrigger()",
        "description": "GetTriggeringTrigger ()",
        "prefix": "GetTriggeringTrigger"
    },
    "GetTriggerEventId": {
        "body": "GetTriggerEventId()",
        "description": "GetTriggerEventId ()",
        "prefix": "GetTriggerEventId"
    },
    "GetTriggerEvalCount": {
        "body": "GetTriggerEvalCount(${1:whichTrigger})",
        "description": "GetTriggerEvalCount (trigger whichTrigger)",
        "prefix": "GetTriggerEvalCount"
    },
    "GetTriggerExecCount": {
        "body": "GetTriggerExecCount(${1:whichTrigger})",
        "description": "GetTriggerExecCount (trigger whichTrigger)",
        "prefix": "GetTriggerExecCount"
    },
    "ExecuteFunc": {
        "body": "ExecuteFunc(${1:funcName})",
        "description": "ExecuteFunc (string funcName)",
        "prefix": "ExecuteFunc"
    },
    "And": {
        "body": "And(${1:operandA}, ${2:operandB})",
        "description": "And (boolexpr operandA, boolexpr operandB)",
        "prefix": "And"
    },
    "Or": {
        "body": "Or(${1:operandA}, ${2:operandB})",
        "description": "Or (boolexpr operandA, boolexpr operandB)",
        "prefix": "Or"
    },
    "Not": {
        "body": "Not(${1:operand})",
        "description": "Not (boolexpr operand)",
        "prefix": "Not"
    },
    "Condition": {
        "body": "Condition(${1:func})",
        "description": "Condition (code func)",
        "prefix": "Condition"
    },
    "DestroyCondition": {
        "body": "DestroyCondition(${1:c})",
        "description": "DestroyCondition (conditionfunc c)",
        "prefix": "DestroyCondition"
    },
    "Filter": {
        "body": "Filter(${1:func})",
        "description": "Filter (code func)",
        "prefix": "Filter"
    },
    "DestroyFilter": {
        "body": "DestroyFilter(${1:f})",
        "description": "DestroyFilter (filterfunc f)",
        "prefix": "DestroyFilter"
    },
    "DestroyBoolExpr": {
        "body": "DestroyBoolExpr(${1:e})",
        "description": "DestroyBoolExpr (boolexpr e)",
        "prefix": "DestroyBoolExpr"
    },
    "TriggerRegisterVariableEvent": {
        "body": "TriggerRegisterVariableEvent(${1:whichTrigger}, ${2:varName}, ${3:opcode}, ${4:limitval})",
        "description": "TriggerRegisterVariableEvent (trigger whichTrigger, string varName, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterVariableEvent"
    },
    "TriggerRegisterTimerEvent": {
        "body": "TriggerRegisterTimerEvent(${1:whichTrigger}, ${2:timeout}, ${3:periodic})",
        "description": "TriggerRegisterTimerEvent (trigger whichTrigger, real timeout, boolean periodic)",
        "prefix": "TriggerRegisterTimerEvent"
    },
    "TriggerRegisterTimerExpireEvent": {
        "body": "TriggerRegisterTimerExpireEvent(${1:whichTrigger}, ${2:t})",
        "description": "TriggerRegisterTimerExpireEvent (trigger whichTrigger, timer t)",
        "prefix": "TriggerRegisterTimerExpireEvent"
    },
    "TriggerRegisterGameStateEvent": {
        "body": "TriggerRegisterGameStateEvent(${1:whichTrigger}, ${2:whichState}, ${3:opcode}, ${4:limitval})",
        "description": "TriggerRegisterGameStateEvent (trigger whichTrigger, gamestate whichState, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterGameStateEvent"
    },
    "TriggerRegisterDialogEvent": {
        "body": "TriggerRegisterDialogEvent(${1:whichTrigger}, ${2:whichDialog})",
        "description": "TriggerRegisterDialogEvent (trigger whichTrigger, dialog whichDialog)",
        "prefix": "TriggerRegisterDialogEvent"
    },
    "TriggerRegisterDialogButtonEvent": {
        "body": "TriggerRegisterDialogButtonEvent(${1:whichTrigger}, ${2:whichButton})",
        "description": "TriggerRegisterDialogButtonEvent (trigger whichTrigger, button whichButton)",
        "prefix": "TriggerRegisterDialogButtonEvent"
    },
    "GetEventGameState": {
        "body": "GetEventGameState()",
        "description": "GetEventGameState ()",
        "prefix": "GetEventGameState"
    },
    "TriggerRegisterGameEvent": {
        "body": "TriggerRegisterGameEvent(${1:whichTrigger}, ${2:whichGameEvent})",
        "description": "TriggerRegisterGameEvent (trigger whichTrigger, gameevent whichGameEvent)",
        "prefix": "TriggerRegisterGameEvent"
    },
    "GetWinningPlayer": {
        "body": "GetWinningPlayer()",
        "description": "GetWinningPlayer ()",
        "prefix": "GetWinningPlayer"
    },
    "TriggerRegisterEnterRegion": {
        "body": "TriggerRegisterEnterRegion(${1:whichTrigger}, ${2:whichRegion}, ${3:filter})",
        "description": "TriggerRegisterEnterRegion (trigger whichTrigger, region whichRegion, boolexpr filter)",
        "prefix": "TriggerRegisterEnterRegion"
    },
    "GetTriggeringRegion": {
        "body": "GetTriggeringRegion()",
        "description": "GetTriggeringRegion ()",
        "prefix": "GetTriggeringRegion"
    },
    "GetEnteringUnit": {
        "body": "GetEnteringUnit()",
        "description": "GetEnteringUnit ()",
        "prefix": "GetEnteringUnit"
    },
    "TriggerRegisterLeaveRegion": {
        "body": "TriggerRegisterLeaveRegion(${1:whichTrigger}, ${2:whichRegion}, ${3:filter})",
        "description": "TriggerRegisterLeaveRegion (trigger whichTrigger, region whichRegion, boolexpr filter)",
        "prefix": "TriggerRegisterLeaveRegion"
    },
    "GetLeavingUnit": {
        "body": "GetLeavingUnit()",
        "description": "GetLeavingUnit ()",
        "prefix": "GetLeavingUnit"
    },
    "TriggerRegisterTrackableHitEvent": {
        "body": "TriggerRegisterTrackableHitEvent(${1:whichTrigger}, ${2:t})",
        "description": "TriggerRegisterTrackableHitEvent (trigger whichTrigger, trackable t)",
        "prefix": "TriggerRegisterTrackableHitEvent"
    },
    "TriggerRegisterTrackableTrackEvent": {
        "body": "TriggerRegisterTrackableTrackEvent(${1:whichTrigger}, ${2:t})",
        "description": "TriggerRegisterTrackableTrackEvent (trigger whichTrigger, trackable t)",
        "prefix": "TriggerRegisterTrackableTrackEvent"
    },
    "GetTriggeringTrackable": {
        "body": "GetTriggeringTrackable()",
        "description": "GetTriggeringTrackable ()",
        "prefix": "GetTriggeringTrackable"
    },
    "GetClickedButton": {
        "body": "GetClickedButton()",
        "description": "GetClickedButton ()",
        "prefix": "GetClickedButton"
    },
    "GetClickedDialog": {
        "body": "GetClickedDialog()",
        "description": "GetClickedDialog ()",
        "prefix": "GetClickedDialog"
    },
    "GetTournamentFinishSoonTimeRemaining": {
        "body": "GetTournamentFinishSoonTimeRemaining()",
        "description": "GetTournamentFinishSoonTimeRemaining ()",
        "prefix": "GetTournamentFinishSoonTimeRemaining"
    },
    "GetTournamentFinishNowRule": {
        "body": "GetTournamentFinishNowRule()",
        "description": "GetTournamentFinishNowRule ()",
        "prefix": "GetTournamentFinishNowRule"
    },
    "GetTournamentFinishNowPlayer": {
        "body": "GetTournamentFinishNowPlayer()",
        "description": "GetTournamentFinishNowPlayer ()",
        "prefix": "GetTournamentFinishNowPlayer"
    },
    "GetTournamentScore": {
        "body": "GetTournamentScore(${1:whichPlayer})",
        "description": "GetTournamentScore (player whichPlayer)",
        "prefix": "GetTournamentScore"
    },
    "GetSaveBasicFilename": {
        "body": "GetSaveBasicFilename()",
        "description": "GetSaveBasicFilename ()",
        "prefix": "GetSaveBasicFilename"
    },
    "TriggerRegisterPlayerEvent": {
        "body": "TriggerRegisterPlayerEvent(${1:whichTrigger})",
        "description": "TriggerRegisterPlayerEvent (trigger whichTrigger, player  whichPlayer, playerevent whichPlayerEvent)",
        "prefix": "TriggerRegisterPlayerEvent"
    },
    "GetTriggerPlayer": {
        "body": "GetTriggerPlayer()",
        "description": "GetTriggerPlayer ()",
        "prefix": "GetTriggerPlayer"
    },
    "TriggerRegisterPlayerUnitEvent": {
        "body": "TriggerRegisterPlayerUnitEvent(${1:whichTrigger}, ${2:whichPlayer}, ${3:whichPlayerUnitEvent}, ${4:filter})",
        "description": "TriggerRegisterPlayerUnitEvent (trigger whichTrigger, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter)",
        "prefix": "TriggerRegisterPlayerUnitEvent"
    },
    "GetLevelingUnit": {
        "body": "GetLevelingUnit()",
        "description": "GetLevelingUnit ()",
        "prefix": "GetLevelingUnit"
    },
    "GetLearningUnit": {
        "body": "GetLearningUnit()",
        "description": "GetLearningUnit ()",
        "prefix": "GetLearningUnit"
    },
    "GetLearnedSkill": {
        "body": "GetLearnedSkill()",
        "description": "GetLearnedSkill ()",
        "prefix": "GetLearnedSkill"
    },
    "GetLearnedSkillLevel": {
        "body": "GetLearnedSkillLevel()",
        "description": "GetLearnedSkillLevel ()",
        "prefix": "GetLearnedSkillLevel"
    },
    "GetRevivableUnit": {
        "body": "GetRevivableUnit()",
        "description": "GetRevivableUnit ()",
        "prefix": "GetRevivableUnit"
    },
    "GetRevivingUnit": {
        "body": "GetRevivingUnit()",
        "description": "GetRevivingUnit ()",
        "prefix": "GetRevivingUnit"
    },
    "GetAttacker": {
        "body": "GetAttacker()",
        "description": "GetAttacker ()",
        "prefix": "GetAttacker"
    },
    "GetRescuer": {
        "body": "GetRescuer()",
        "description": "GetRescuer ()",
        "prefix": "GetRescuer"
    },
    "GetDyingUnit": {
        "body": "GetDyingUnit()",
        "description": "GetDyingUnit ()",
        "prefix": "GetDyingUnit"
    },
    "GetKillingUnit": {
        "body": "GetKillingUnit()",
        "description": "GetKillingUnit ()",
        "prefix": "GetKillingUnit"
    },
    "GetDecayingUnit": {
        "body": "GetDecayingUnit()",
        "description": "GetDecayingUnit ()",
        "prefix": "GetDecayingUnit"
    },
    "GetConstructingStructure": {
        "body": "GetConstructingStructure()",
        "description": "GetConstructingStructure ()",
        "prefix": "GetConstructingStructure"
    },
    "GetCancelledStructure": {
        "body": "GetCancelledStructure()",
        "description": "GetCancelledStructure ()",
        "prefix": "GetCancelledStructure"
    },
    "GetConstructedStructure": {
        "body": "GetConstructedStructure()",
        "description": "GetConstructedStructure ()",
        "prefix": "GetConstructedStructure"
    },
    "GetResearchingUnit": {
        "body": "GetResearchingUnit()",
        "description": "GetResearchingUnit ()",
        "prefix": "GetResearchingUnit"
    },
    "GetResearched": {
        "body": "GetResearched()",
        "description": "GetResearched ()",
        "prefix": "GetResearched"
    },
    "GetTrainedUnitType": {
        "body": "GetTrainedUnitType()",
        "description": "GetTrainedUnitType ()",
        "prefix": "GetTrainedUnitType"
    },
    "GetTrainedUnit": {
        "body": "GetTrainedUnit()",
        "description": "GetTrainedUnit ()",
        "prefix": "GetTrainedUnit"
    },
    "GetDetectedUnit": {
        "body": "GetDetectedUnit()",
        "description": "GetDetectedUnit ()",
        "prefix": "GetDetectedUnit"
    },
    "GetSummoningUnit": {
        "body": "GetSummoningUnit()",
        "description": "GetSummoningUnit ()",
        "prefix": "GetSummoningUnit"
    },
    "GetSummonedUnit": {
        "body": "GetSummonedUnit()",
        "description": "GetSummonedUnit ()",
        "prefix": "GetSummonedUnit"
    },
    "GetTransportUnit": {
        "body": "GetTransportUnit()",
        "description": "GetTransportUnit ()",
        "prefix": "GetTransportUnit"
    },
    "GetLoadedUnit": {
        "body": "GetLoadedUnit()",
        "description": "GetLoadedUnit ()",
        "prefix": "GetLoadedUnit"
    },
    "GetSellingUnit": {
        "body": "GetSellingUnit()",
        "description": "GetSellingUnit ()",
        "prefix": "GetSellingUnit"
    },
    "GetSoldUnit": {
        "body": "GetSoldUnit()",
        "description": "GetSoldUnit ()",
        "prefix": "GetSoldUnit"
    },
    "GetBuyingUnit": {
        "body": "GetBuyingUnit()",
        "description": "GetBuyingUnit ()",
        "prefix": "GetBuyingUnit"
    },
    "GetSoldItem": {
        "body": "GetSoldItem()",
        "description": "GetSoldItem ()",
        "prefix": "GetSoldItem"
    },
    "GetChangingUnit": {
        "body": "GetChangingUnit()",
        "description": "GetChangingUnit ()",
        "prefix": "GetChangingUnit"
    },
    "GetChangingUnitPrevOwner": {
        "body": "GetChangingUnitPrevOwner()",
        "description": "GetChangingUnitPrevOwner ()",
        "prefix": "GetChangingUnitPrevOwner"
    },
    "GetManipulatingUnit": {
        "body": "GetManipulatingUnit()",
        "description": "GetManipulatingUnit ()",
        "prefix": "GetManipulatingUnit"
    },
    "GetManipulatedItem": {
        "body": "GetManipulatedItem()",
        "description": "GetManipulatedItem ()",
        "prefix": "GetManipulatedItem"
    },
    "GetOrderedUnit": {
        "body": "GetOrderedUnit()",
        "description": "GetOrderedUnit ()",
        "prefix": "GetOrderedUnit"
    },
    "GetIssuedOrderId": {
        "body": "GetIssuedOrderId()",
        "description": "GetIssuedOrderId ()",
        "prefix": "GetIssuedOrderId"
    },
    "GetOrderPointX": {
        "body": "GetOrderPointX()",
        "description": "GetOrderPointX ()",
        "prefix": "GetOrderPointX"
    },
    "GetOrderPointY": {
        "body": "GetOrderPointY()",
        "description": "GetOrderPointY ()",
        "prefix": "GetOrderPointY"
    },
    "GetOrderPointLoc": {
        "body": "GetOrderPointLoc()",
        "description": "GetOrderPointLoc ()",
        "prefix": "GetOrderPointLoc"
    },
    "GetOrderTarget": {
        "body": "GetOrderTarget()",
        "description": "GetOrderTarget ()",
        "prefix": "GetOrderTarget"
    },
    "GetOrderTargetDestructable": {
        "body": "GetOrderTargetDestructable()",
        "description": "GetOrderTargetDestructable ()",
        "prefix": "GetOrderTargetDestructable"
    },
    "GetOrderTargetItem": {
        "body": "GetOrderTargetItem()",
        "description": "GetOrderTargetItem ()",
        "prefix": "GetOrderTargetItem"
    },
    "GetOrderTargetUnit": {
        "body": "GetOrderTargetUnit()",
        "description": "GetOrderTargetUnit ()",
        "prefix": "GetOrderTargetUnit"
    },
    "GetSpellAbilityUnit": {
        "body": "GetSpellAbilityUnit()",
        "description": "GetSpellAbilityUnit ()",
        "prefix": "GetSpellAbilityUnit"
    },
    "GetSpellAbilityId": {
        "body": "GetSpellAbilityId()",
        "description": "GetSpellAbilityId ()",
        "prefix": "GetSpellAbilityId"
    },
    "GetSpellAbility": {
        "body": "GetSpellAbility()",
        "description": "GetSpellAbility ()",
        "prefix": "GetSpellAbility"
    },
    "GetSpellTargetLoc": {
        "body": "GetSpellTargetLoc()",
        "description": "GetSpellTargetLoc ()",
        "prefix": "GetSpellTargetLoc"
    },
    "GetSpellTargetX": {
        "body": "GetSpellTargetX()",
        "description": "GetSpellTargetX ()",
        "prefix": "GetSpellTargetX"
    },
    "GetSpellTargetY": {
        "body": "GetSpellTargetY()",
        "description": "GetSpellTargetY ()",
        "prefix": "GetSpellTargetY"
    },
    "GetSpellTargetDestructable": {
        "body": "GetSpellTargetDestructable()",
        "description": "GetSpellTargetDestructable ()",
        "prefix": "GetSpellTargetDestructable"
    },
    "GetSpellTargetItem": {
        "body": "GetSpellTargetItem()",
        "description": "GetSpellTargetItem ()",
        "prefix": "GetSpellTargetItem"
    },
    "GetSpellTargetUnit": {
        "body": "GetSpellTargetUnit()",
        "description": "GetSpellTargetUnit ()",
        "prefix": "GetSpellTargetUnit"
    },
    "TriggerRegisterPlayerAllianceChange": {
        "body": "TriggerRegisterPlayerAllianceChange(${1:whichTrigger}, ${2:whichPlayer}, ${3:whichAlliance})",
        "description": "TriggerRegisterPlayerAllianceChange (trigger whichTrigger, player whichPlayer, alliancetype whichAlliance)",
        "prefix": "TriggerRegisterPlayerAllianceChange"
    },
    "TriggerRegisterPlayerStateEvent": {
        "body": "TriggerRegisterPlayerStateEvent(${1:whichTrigger}, ${2:whichPlayer}, ${3:whichState}, ${4:opcode}, ${5:limitval})",
        "description": "TriggerRegisterPlayerStateEvent (trigger whichTrigger, player whichPlayer, playerstate whichState, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterPlayerStateEvent"
    },
    "GetEventPlayerState": {
        "body": "GetEventPlayerState()",
        "description": "GetEventPlayerState ()",
        "prefix": "GetEventPlayerState"
    },
    "TriggerRegisterPlayerChatEvent": {
        "body": "TriggerRegisterPlayerChatEvent(${1:whichTrigger}, ${2:whichPlayer}, ${3:chatMessageToDetect}, ${4:exactMatchOnly})",
        "description": "TriggerRegisterPlayerChatEvent (trigger whichTrigger, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly)",
        "prefix": "TriggerRegisterPlayerChatEvent"
    },
    "GetEventPlayerChatString": {
        "body": "GetEventPlayerChatString()",
        "description": "GetEventPlayerChatString ()",
        "prefix": "GetEventPlayerChatString"
    },
    "GetEventPlayerChatStringMatched": {
        "body": "GetEventPlayerChatStringMatched()",
        "description": "GetEventPlayerChatStringMatched ()",
        "prefix": "GetEventPlayerChatStringMatched"
    },
    "TriggerRegisterDeathEvent": {
        "body": "TriggerRegisterDeathEvent(${1:whichTrigger}, ${2:whichWidget})",
        "description": "TriggerRegisterDeathEvent (trigger whichTrigger, widget whichWidget)",
        "prefix": "TriggerRegisterDeathEvent"
    },
    "GetTriggerUnit": {
        "body": "GetTriggerUnit()",
        "description": "GetTriggerUnit ()",
        "prefix": "GetTriggerUnit"
    },
    "TriggerRegisterUnitStateEvent": {
        "body": "TriggerRegisterUnitStateEvent(${1:whichTrigger}, ${2:whichUnit}, ${3:whichState}, ${4:opcode}, ${5:limitval})",
        "description": "TriggerRegisterUnitStateEvent (trigger whichTrigger, unit whichUnit, unitstate whichState, limitop opcode, real limitval)",
        "prefix": "TriggerRegisterUnitStateEvent"
    },
    "GetEventUnitState": {
        "body": "GetEventUnitState()",
        "description": "GetEventUnitState ()",
        "prefix": "GetEventUnitState"
    },
    "TriggerRegisterUnitEvent": {
        "body": "TriggerRegisterUnitEvent(${1:whichTrigger}, ${2:whichUnit}, ${3:whichEvent})",
        "description": "TriggerRegisterUnitEvent (trigger whichTrigger, unit whichUnit, unitevent whichEvent)",
        "prefix": "TriggerRegisterUnitEvent"
    },
    "GetEventDamage": {
        "body": "GetEventDamage()",
        "description": "GetEventDamage ()",
        "prefix": "GetEventDamage"
    },
    "GetEventDamageSource": {
        "body": "GetEventDamageSource()",
        "description": "GetEventDamageSource ()",
        "prefix": "GetEventDamageSource"
    },
    "GetEventDetectingPlayer": {
        "body": "GetEventDetectingPlayer()",
        "description": "GetEventDetectingPlayer ()",
        "prefix": "GetEventDetectingPlayer"
    },
    "TriggerRegisterFilterUnitEvent": {
        "body": "TriggerRegisterFilterUnitEvent(${1:whichTrigger}, ${2:whichUnit}, ${3:whichEvent}, ${4:filter})",
        "description": "TriggerRegisterFilterUnitEvent (trigger whichTrigger, unit whichUnit, unitevent whichEvent, boolexpr filter)",
        "prefix": "TriggerRegisterFilterUnitEvent"
    },
    "GetEventTargetUnit": {
        "body": "GetEventTargetUnit()",
        "description": "GetEventTargetUnit ()",
        "prefix": "GetEventTargetUnit"
    },
    "TriggerRegisterUnitInRange": {
        "body": "TriggerRegisterUnitInRange(${1:whichTrigger}, ${2:whichUnit}, ${3:range}, ${4:filter})",
        "description": "TriggerRegisterUnitInRange (trigger whichTrigger, unit whichUnit, real range, boolexpr filter)",
        "prefix": "TriggerRegisterUnitInRange"
    },
    "TriggerAddCondition": {
        "body": "TriggerAddCondition(${1:whichTrigger}, ${2:condition})",
        "description": "TriggerAddCondition (trigger whichTrigger, boolexpr condition)",
        "prefix": "TriggerAddCondition"
    },
    "TriggerRemoveCondition": {
        "body": "TriggerRemoveCondition(${1:whichTrigger}, ${2:whichCondition})",
        "description": "TriggerRemoveCondition (trigger whichTrigger, triggercondition whichCondition)",
        "prefix": "TriggerRemoveCondition"
    },
    "TriggerClearConditions": {
        "body": "TriggerClearConditions(${1:whichTrigger})",
        "description": "TriggerClearConditions (trigger whichTrigger)",
        "prefix": "TriggerClearConditions"
    },
    "TriggerAddAction": {
        "body": "TriggerAddAction(${1:whichTrigger}, ${2:actionFunc})",
        "description": "TriggerAddAction (trigger whichTrigger, code actionFunc)",
        "prefix": "TriggerAddAction"
    },
    "TriggerRemoveAction": {
        "body": "TriggerRemoveAction(${1:whichTrigger}, ${2:whichAction})",
        "description": "TriggerRemoveAction (trigger whichTrigger, triggeraction whichAction)",
        "prefix": "TriggerRemoveAction"
    },
    "TriggerClearActions": {
        "body": "TriggerClearActions(${1:whichTrigger})",
        "description": "TriggerClearActions (trigger whichTrigger)",
        "prefix": "TriggerClearActions"
    },
    "TriggerSleepAction": {
        "body": "TriggerSleepAction(${1:timeout})",
        "description": "TriggerSleepAction (real timeout)",
        "prefix": "TriggerSleepAction"
    },
    "TriggerWaitForSound": {
        "body": "TriggerWaitForSound(${1:s}, ${2:offset})",
        "description": "TriggerWaitForSound (sound s, real offset)",
        "prefix": "TriggerWaitForSound"
    },
    "TriggerEvaluate": {
        "body": "TriggerEvaluate(${1:whichTrigger})",
        "description": "TriggerEvaluate (trigger whichTrigger)",
        "prefix": "TriggerEvaluate"
    },
    "TriggerExecute": {
        "body": "TriggerExecute(${1:whichTrigger})",
        "description": "TriggerExecute (trigger whichTrigger)",
        "prefix": "TriggerExecute"
    },
    "TriggerExecuteWait": {
        "body": "TriggerExecuteWait(${1:whichTrigger})",
        "description": "TriggerExecuteWait (trigger whichTrigger)",
        "prefix": "TriggerExecuteWait"
    },
    "TriggerSyncStart": {
        "body": "TriggerSyncStart()",
        "description": "TriggerSyncStart ()",
        "prefix": "TriggerSyncStart"
    },
    "TriggerSyncReady": {
        "body": "TriggerSyncReady()",
        "description": "TriggerSyncReady ()",
        "prefix": "TriggerSyncReady"
    },
    "GetWidgetLife": {
        "body": "GetWidgetLife(${1:whichWidget})",
        "description": "GetWidgetLife (widget whichWidget)",
        "prefix": "GetWidgetLife"
    },
    "SetWidgetLife": {
        "body": "SetWidgetLife(${1:whichWidget}, ${2:newLife})",
        "description": "SetWidgetLife (widget whichWidget, real newLife)",
        "prefix": "SetWidgetLife"
    },
    "GetWidgetX": {
        "body": "GetWidgetX(${1:whichWidget})",
        "description": "GetWidgetX (widget whichWidget)",
        "prefix": "GetWidgetX"
    },
    "GetWidgetY": {
        "body": "GetWidgetY(${1:whichWidget})",
        "description": "GetWidgetY (widget whichWidget)",
        "prefix": "GetWidgetY"
    },
    "GetTriggerWidget": {
        "body": "GetTriggerWidget()",
        "description": "GetTriggerWidget ()",
        "prefix": "GetTriggerWidget"
    },
    "CreateDestructable": {
        "body": "CreateDestructable(${1:objectid}, ${2:x}, ${3:y}, ${4:face}, ${5:scale}, ${6:variation})",
        "description": "CreateDestructable (integer objectid, real x, real y, real face, real scale, integer variation)",
        "prefix": "CreateDestructable"
    },
    "CreateDestructableZ": {
        "body": "CreateDestructableZ(${1:objectid}, ${2:x}, ${3:y}, ${4:z}, ${5:face}, ${6:scale}, ${7:variation})",
        "description": "CreateDestructableZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)",
        "prefix": "CreateDestructableZ"
    },
    "CreateDeadDestructable": {
        "body": "CreateDeadDestructable(${1:objectid}, ${2:x}, ${3:y}, ${4:face}, ${5:scale}, ${6:variation})",
        "description": "CreateDeadDestructable (integer objectid, real x, real y, real face, real scale, integer variation)",
        "prefix": "CreateDeadDestructable"
    },
    "CreateDeadDestructableZ": {
        "body": "CreateDeadDestructableZ(${1:objectid}, ${2:x}, ${3:y}, ${4:z}, ${5:face}, ${6:scale}, ${7:variation})",
        "description": "CreateDeadDestructableZ (integer objectid, real x, real y, real z, real face, real scale, integer variation)",
        "prefix": "CreateDeadDestructableZ"
    },
    "RemoveDestructable": {
        "body": "RemoveDestructable(${1:d})",
        "description": "RemoveDestructable (destructable d)",
        "prefix": "RemoveDestructable"
    },
    "KillDestructable": {
        "body": "KillDestructable(${1:d})",
        "description": "KillDestructable (destructable d)",
        "prefix": "KillDestructable"
    },
    "SetDestructableInvulnerable": {
        "body": "SetDestructableInvulnerable(${1:d}, ${2:flag})",
        "description": "SetDestructableInvulnerable (destructable d, boolean flag)",
        "prefix": "SetDestructableInvulnerable"
    },
    "IsDestructableInvulnerable": {
        "body": "IsDestructableInvulnerable(${1:d})",
        "description": "IsDestructableInvulnerable (destructable d)",
        "prefix": "IsDestructableInvulnerable"
    },
    "EnumDestructablesInRect": {
        "body": "EnumDestructablesInRect(${1:r}, ${2:filter}, ${3:actionFunc})",
        "description": "EnumDestructablesInRect (rect r, boolexpr filter, code actionFunc)",
        "prefix": "EnumDestructablesInRect"
    },
    "GetDestructableTypeId": {
        "body": "GetDestructableTypeId(${1:d})",
        "description": "GetDestructableTypeId (destructable d)",
        "prefix": "GetDestructableTypeId"
    },
    "GetDestructableX": {
        "body": "GetDestructableX(${1:d})",
        "description": "GetDestructableX (destructable d)",
        "prefix": "GetDestructableX"
    },
    "GetDestructableY": {
        "body": "GetDestructableY(${1:d})",
        "description": "GetDestructableY (destructable d)",
        "prefix": "GetDestructableY"
    },
    "SetDestructableLife": {
        "body": "SetDestructableLife(${1:d}, ${2:life})",
        "description": "SetDestructableLife (destructable d, real life)",
        "prefix": "SetDestructableLife"
    },
    "GetDestructableLife": {
        "body": "GetDestructableLife(${1:d})",
        "description": "GetDestructableLife (destructable d)",
        "prefix": "GetDestructableLife"
    },
    "SetDestructableMaxLife": {
        "body": "SetDestructableMaxLife(${1:d}, ${2:max})",
        "description": "SetDestructableMaxLife (destructable d, real max)",
        "prefix": "SetDestructableMaxLife"
    },
    "GetDestructableMaxLife": {
        "body": "GetDestructableMaxLife(${1:d})",
        "description": "GetDestructableMaxLife (destructable d)",
        "prefix": "GetDestructableMaxLife"
    },
    "DestructableRestoreLife": {
        "body": "DestructableRestoreLife(${1:d}, ${2:life}, ${3:birth})",
        "description": "DestructableRestoreLife (destructable d, real life, boolean birth)",
        "prefix": "DestructableRestoreLife"
    },
    "QueueDestructableAnimation": {
        "body": "QueueDestructableAnimation(${1:d}, ${2:whichAnimation})",
        "description": "QueueDestructableAnimation (destructable d, string whichAnimation)",
        "prefix": "QueueDestructableAnimation"
    },
    "SetDestructableAnimation": {
        "body": "SetDestructableAnimation(${1:d}, ${2:whichAnimation})",
        "description": "SetDestructableAnimation (destructable d, string whichAnimation)",
        "prefix": "SetDestructableAnimation"
    },
    "SetDestructableAnimationSpeed": {
        "body": "SetDestructableAnimationSpeed(${1:d}, ${2:speedFactor})",
        "description": "SetDestructableAnimationSpeed (destructable d, real speedFactor)",
        "prefix": "SetDestructableAnimationSpeed"
    },
    "ShowDestructable": {
        "body": "ShowDestructable(${1:d}, ${2:flag})",
        "description": "ShowDestructable (destructable d, boolean flag)",
        "prefix": "ShowDestructable"
    },
    "GetDestructableOccluderHeight": {
        "body": "GetDestructableOccluderHeight(${1:d})",
        "description": "GetDestructableOccluderHeight (destructable d)",
        "prefix": "GetDestructableOccluderHeight"
    },
    "SetDestructableOccluderHeight": {
        "body": "SetDestructableOccluderHeight(${1:d}, ${2:height})",
        "description": "SetDestructableOccluderHeight (destructable d, real height)",
        "prefix": "SetDestructableOccluderHeight"
    },
    "GetDestructableName": {
        "body": "GetDestructableName(${1:d})",
        "description": "GetDestructableName (destructable d)",
        "prefix": "GetDestructableName"
    },
    "GetTriggerDestructable": {
        "body": "GetTriggerDestructable()",
        "description": "GetTriggerDestructable ()",
        "prefix": "GetTriggerDestructable"
    },
    "CreateItem": {
        "body": "CreateItem(${1:itemid}, ${2:x}, ${3:y})",
        "description": "CreateItem (integer itemid, real x, real y)",
        "prefix": "CreateItem"
    },
    "RemoveItem": {
        "body": "RemoveItem(${1:whichItem})",
        "description": "RemoveItem (item whichItem)",
        "prefix": "RemoveItem"
    },
    "GetItemPlayer": {
        "body": "GetItemPlayer(${1:whichItem})",
        "description": "GetItemPlayer (item whichItem)",
        "prefix": "GetItemPlayer"
    },
    "GetItemTypeId": {
        "body": "GetItemTypeId(${1:i})",
        "description": "GetItemTypeId (item i)",
        "prefix": "GetItemTypeId"
    },
    "GetItemX": {
        "body": "GetItemX(${1:i})",
        "description": "GetItemX (item i)",
        "prefix": "GetItemX"
    },
    "GetItemY": {
        "body": "GetItemY(${1:i})",
        "description": "GetItemY (item i)",
        "prefix": "GetItemY"
    },
    "SetItemPosition": {
        "body": "SetItemPosition(${1:i}, ${2:x}, ${3:y})",
        "description": "SetItemPosition (item i, real x, real y)",
        "prefix": "SetItemPosition"
    },
    "SetItemDropOnDeath": {
        "body": "SetItemDropOnDeath(${1:whichItem}, ${2:flag})",
        "description": "SetItemDropOnDeath (item whichItem, boolean flag)",
        "prefix": "SetItemDropOnDeath"
    },
    "SetItemDroppable": {
        "body": "SetItemDroppable(${1:i}, ${2:flag})",
        "description": "SetItemDroppable (item i, boolean flag)",
        "prefix": "SetItemDroppable"
    },
    "SetItemPawnable": {
        "body": "SetItemPawnable(${1:i}, ${2:flag})",
        "description": "SetItemPawnable (item i, boolean flag)",
        "prefix": "SetItemPawnable"
    },
    "SetItemPlayer": {
        "body": "SetItemPlayer(${1:whichItem}, ${2:whichPlayer}, ${3:changeColor})",
        "description": "SetItemPlayer (item whichItem, player whichPlayer, boolean changeColor)",
        "prefix": "SetItemPlayer"
    },
    "SetItemInvulnerable": {
        "body": "SetItemInvulnerable(${1:whichItem}, ${2:flag})",
        "description": "SetItemInvulnerable (item whichItem, boolean flag)",
        "prefix": "SetItemInvulnerable"
    },
    "IsItemInvulnerable": {
        "body": "IsItemInvulnerable(${1:whichItem})",
        "description": "IsItemInvulnerable (item whichItem)",
        "prefix": "IsItemInvulnerable"
    },
    "SetItemVisible": {
        "body": "SetItemVisible(${1:whichItem}, ${2:show})",
        "description": "SetItemVisible (item whichItem, boolean show)",
        "prefix": "SetItemVisible"
    },
    "IsItemVisible": {
        "body": "IsItemVisible(${1:whichItem})",
        "description": "IsItemVisible (item whichItem)",
        "prefix": "IsItemVisible"
    },
    "IsItemOwned": {
        "body": "IsItemOwned(${1:whichItem})",
        "description": "IsItemOwned (item whichItem)",
        "prefix": "IsItemOwned"
    },
    "IsItemPowerup": {
        "body": "IsItemPowerup(${1:whichItem})",
        "description": "IsItemPowerup (item whichItem)",
        "prefix": "IsItemPowerup"
    },
    "IsItemSellable": {
        "body": "IsItemSellable(${1:whichItem})",
        "description": "IsItemSellable (item whichItem)",
        "prefix": "IsItemSellable"
    },
    "IsItemPawnable": {
        "body": "IsItemPawnable(${1:whichItem})",
        "description": "IsItemPawnable (item whichItem)",
        "prefix": "IsItemPawnable"
    },
    "IsItemIdPowerup": {
        "body": "IsItemIdPowerup(${1:itemId})",
        "description": "IsItemIdPowerup (integer itemId)",
        "prefix": "IsItemIdPowerup"
    },
    "IsItemIdSellable": {
        "body": "IsItemIdSellable(${1:itemId})",
        "description": "IsItemIdSellable (integer itemId)",
        "prefix": "IsItemIdSellable"
    },
    "IsItemIdPawnable": {
        "body": "IsItemIdPawnable(${1:itemId})",
        "description": "IsItemIdPawnable (integer itemId)",
        "prefix": "IsItemIdPawnable"
    },
    "EnumItemsInRect": {
        "body": "EnumItemsInRect(${1:r}, ${2:filter}, ${3:actionFunc})",
        "description": "EnumItemsInRect (rect r, boolexpr filter, code actionFunc)",
        "prefix": "EnumItemsInRect"
    },
    "GetItemLevel": {
        "body": "GetItemLevel(${1:whichItem})",
        "description": "GetItemLevel (item whichItem)",
        "prefix": "GetItemLevel"
    },
    "GetItemType": {
        "body": "GetItemType(${1:whichItem})",
        "description": "GetItemType (item whichItem)",
        "prefix": "GetItemType"
    },
    "SetItemDropID": {
        "body": "SetItemDropID(${1:whichItem}, ${2:unitId})",
        "description": "SetItemDropID (item whichItem, integer unitId)",
        "prefix": "SetItemDropID"
    },
    "GetItemName": {
        "body": "GetItemName(${1:whichItem})",
        "description": "GetItemName (item whichItem)",
        "prefix": "GetItemName"
    },
    "GetItemCharges": {
        "body": "GetItemCharges(${1:whichItem})",
        "description": "GetItemCharges (item whichItem)",
        "prefix": "GetItemCharges"
    },
    "SetItemCharges": {
        "body": "SetItemCharges(${1:whichItem}, ${2:charges})",
        "description": "SetItemCharges (item whichItem, integer charges)",
        "prefix": "SetItemCharges"
    },
    "GetItemUserData": {
        "body": "GetItemUserData(${1:whichItem})",
        "description": "GetItemUserData (item whichItem)",
        "prefix": "GetItemUserData"
    },
    "SetItemUserData": {
        "body": "SetItemUserData(${1:whichItem}, ${2:data})",
        "description": "SetItemUserData (item whichItem, integer data)",
        "prefix": "SetItemUserData"
    },
    "CreateUnit": {
        "body": "CreateUnit(${1:id}, ${2:unitid}, ${3:x}, ${4:y}, ${5:face})",
        "description": "CreateUnit (player id, integer unitid, real x, real y, real face)",
        "prefix": "CreateUnit"
    },
    "CreateUnitByName": {
        "body": "CreateUnitByName(${1:whichPlayer}, ${2:unitname}, ${3:x}, ${4:y}, ${5:face})",
        "description": "CreateUnitByName (player whichPlayer, string unitname, real x, real y, real face)",
        "prefix": "CreateUnitByName"
    },
    "CreateUnitAtLoc": {
        "body": "CreateUnitAtLoc(${1:id}, ${2:unitid}, ${3:whichLocation}, ${4:face})",
        "description": "CreateUnitAtLoc (player id, integer unitid, location whichLocation, real face)",
        "prefix": "CreateUnitAtLoc"
    },
    "CreateUnitAtLocByName": {
        "body": "CreateUnitAtLocByName(${1:id}, ${2:unitname}, ${3:whichLocation}, ${4:face})",
        "description": "CreateUnitAtLocByName (player id, string unitname, location whichLocation, real face)",
        "prefix": "CreateUnitAtLocByName"
    },
    "CreateCorpse": {
        "body": "CreateCorpse(${1:whichPlayer}, ${2:unitid}, ${3:x}, ${4:y}, ${5:face})",
        "description": "CreateCorpse (player whichPlayer, integer unitid, real x, real y, real face)",
        "prefix": "CreateCorpse"
    },
    "KillUnit": {
        "body": "KillUnit(${1:whichUnit})",
        "description": "KillUnit (unit whichUnit)",
        "prefix": "KillUnit"
    },
    "RemoveUnit": {
        "body": "RemoveUnit(${1:whichUnit})",
        "description": "RemoveUnit (unit whichUnit)",
        "prefix": "RemoveUnit"
    },
    "ShowUnit": {
        "body": "ShowUnit(${1:whichUnit}, ${2:show})",
        "description": "ShowUnit (unit whichUnit, boolean show)",
        "prefix": "ShowUnit"
    },
    "SetUnitState": {
        "body": "SetUnitState(${1:whichUnit}, ${2:whichUnitState}, ${3:newVal})",
        "description": "SetUnitState (unit whichUnit, unitstate whichUnitState, real newVal)",
        "prefix": "SetUnitState"
    },
    "SetUnitX": {
        "body": "SetUnitX(${1:whichUnit}, ${2:newX})",
        "description": "SetUnitX (unit whichUnit, real newX)",
        "prefix": "SetUnitX"
    },
    "SetUnitY": {
        "body": "SetUnitY(${1:whichUnit}, ${2:newY})",
        "description": "SetUnitY (unit whichUnit, real newY)",
        "prefix": "SetUnitY"
    },
    "SetUnitPosition": {
        "body": "SetUnitPosition(${1:whichUnit}, ${2:newX}, ${3:newY})",
        "description": "SetUnitPosition (unit whichUnit, real newX, real newY)",
        "prefix": "SetUnitPosition"
    },
    "SetUnitPositionLoc": {
        "body": "SetUnitPositionLoc(${1:whichUnit}, ${2:whichLocation})",
        "description": "SetUnitPositionLoc (unit whichUnit, location whichLocation)",
        "prefix": "SetUnitPositionLoc"
    },
    "SetUnitFacing": {
        "body": "SetUnitFacing(${1:whichUnit}, ${2:facingAngle})",
        "description": "SetUnitFacing (unit whichUnit, real facingAngle)",
        "prefix": "SetUnitFacing"
    },
    "SetUnitFacingTimed": {
        "body": "SetUnitFacingTimed(${1:whichUnit}, ${2:facingAngle}, ${3:duration})",
        "description": "SetUnitFacingTimed (unit whichUnit, real facingAngle, real duration)",
        "prefix": "SetUnitFacingTimed"
    },
    "SetUnitMoveSpeed": {
        "body": "SetUnitMoveSpeed(${1:whichUnit}, ${2:newSpeed})",
        "description": "SetUnitMoveSpeed (unit whichUnit, real newSpeed)",
        "prefix": "SetUnitMoveSpeed"
    },
    "SetUnitFlyHeight": {
        "body": "SetUnitFlyHeight(${1:whichUnit}, ${2:newHeight}, ${3:rate})",
        "description": "SetUnitFlyHeight (unit whichUnit, real newHeight, real rate)",
        "prefix": "SetUnitFlyHeight"
    },
    "SetUnitTurnSpeed": {
        "body": "SetUnitTurnSpeed(${1:whichUnit}, ${2:newTurnSpeed})",
        "description": "SetUnitTurnSpeed (unit whichUnit, real newTurnSpeed)",
        "prefix": "SetUnitTurnSpeed"
    },
    "SetUnitPropWindow": {
        "body": "SetUnitPropWindow(${1:whichUnit}, ${2:newPropWindowAngle})",
        "description": "SetUnitPropWindow (unit whichUnit, real newPropWindowAngle)",
        "prefix": "SetUnitPropWindow"
    },
    "SetUnitAcquireRange": {
        "body": "SetUnitAcquireRange(${1:whichUnit}, ${2:newAcquireRange})",
        "description": "SetUnitAcquireRange (unit whichUnit, real newAcquireRange)",
        "prefix": "SetUnitAcquireRange"
    },
    "SetUnitCreepGuard": {
        "body": "SetUnitCreepGuard(${1:whichUnit}, ${2:creepGuard})",
        "description": "SetUnitCreepGuard (unit whichUnit, boolean creepGuard)",
        "prefix": "SetUnitCreepGuard"
    },
    "GetUnitAcquireRange": {
        "body": "GetUnitAcquireRange(${1:whichUnit})",
        "description": "GetUnitAcquireRange (unit whichUnit)",
        "prefix": "GetUnitAcquireRange"
    },
    "GetUnitTurnSpeed": {
        "body": "GetUnitTurnSpeed(${1:whichUnit})",
        "description": "GetUnitTurnSpeed (unit whichUnit)",
        "prefix": "GetUnitTurnSpeed"
    },
    "GetUnitPropWindow": {
        "body": "GetUnitPropWindow(${1:whichUnit})",
        "description": "GetUnitPropWindow (unit whichUnit)",
        "prefix": "GetUnitPropWindow"
    },
    "GetUnitFlyHeight": {
        "body": "GetUnitFlyHeight(${1:whichUnit})",
        "description": "GetUnitFlyHeight (unit whichUnit)",
        "prefix": "GetUnitFlyHeight"
    },
    "GetUnitDefaultAcquireRange": {
        "body": "GetUnitDefaultAcquireRange(${1:whichUnit})",
        "description": "GetUnitDefaultAcquireRange (unit whichUnit)",
        "prefix": "GetUnitDefaultAcquireRange"
    },
    "GetUnitDefaultTurnSpeed": {
        "body": "GetUnitDefaultTurnSpeed(${1:whichUnit})",
        "description": "GetUnitDefaultTurnSpeed (unit whichUnit)",
        "prefix": "GetUnitDefaultTurnSpeed"
    },
    "GetUnitDefaultPropWindow": {
        "body": "GetUnitDefaultPropWindow(${1:whichUnit})",
        "description": "GetUnitDefaultPropWindow (unit whichUnit)",
        "prefix": "GetUnitDefaultPropWindow"
    },
    "GetUnitDefaultFlyHeight": {
        "body": "GetUnitDefaultFlyHeight(${1:whichUnit})",
        "description": "GetUnitDefaultFlyHeight (unit whichUnit)",
        "prefix": "GetUnitDefaultFlyHeight"
    },
    "SetUnitOwner": {
        "body": "SetUnitOwner(${1:whichUnit}, ${2:whichPlayer}, ${3:changeColor})",
        "description": "SetUnitOwner (unit whichUnit, player whichPlayer, boolean changeColor)",
        "prefix": "SetUnitOwner"
    },
    "SetUnitColor": {
        "body": "SetUnitColor(${1:whichUnit}, ${2:whichColor})",
        "description": "SetUnitColor (unit whichUnit, playercolor whichColor)",
        "prefix": "SetUnitColor"
    },
    "SetUnitScale": {
        "body": "SetUnitScale(${1:whichUnit}, ${2:scaleX}, ${3:scaleY}, ${4:scaleZ})",
        "description": "SetUnitScale (unit whichUnit, real scaleX, real scaleY, real scaleZ)",
        "prefix": "SetUnitScale"
    },
    "SetUnitTimeScale": {
        "body": "SetUnitTimeScale(${1:whichUnit}, ${2:timeScale})",
        "description": "SetUnitTimeScale (unit whichUnit, real timeScale)",
        "prefix": "SetUnitTimeScale"
    },
    "SetUnitBlendTime": {
        "body": "SetUnitBlendTime(${1:whichUnit}, ${2:blendTime})",
        "description": "SetUnitBlendTime (unit whichUnit, real blendTime)",
        "prefix": "SetUnitBlendTime"
    },
    "SetUnitVertexColor": {
        "body": "SetUnitVertexColor(${1:whichUnit}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "SetUnitVertexColor (unit whichUnit, integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetUnitVertexColor"
    },
    "QueueUnitAnimation": {
        "body": "QueueUnitAnimation(${1:whichUnit}, ${2:whichAnimation})",
        "description": "QueueUnitAnimation (unit whichUnit, string whichAnimation)",
        "prefix": "QueueUnitAnimation"
    },
    "SetUnitAnimation": {
        "body": "SetUnitAnimation(${1:whichUnit}, ${2:whichAnimation})",
        "description": "SetUnitAnimation (unit whichUnit, string whichAnimation)",
        "prefix": "SetUnitAnimation"
    },
    "SetUnitAnimationByIndex": {
        "body": "SetUnitAnimationByIndex(${1:whichUnit}, ${2:whichAnimation})",
        "description": "SetUnitAnimationByIndex (unit whichUnit, integer whichAnimation)",
        "prefix": "SetUnitAnimationByIndex"
    },
    "SetUnitAnimationWithRarity": {
        "body": "SetUnitAnimationWithRarity(${1:whichUnit}, ${2:whichAnimation}, ${3:rarity})",
        "description": "SetUnitAnimationWithRarity (unit whichUnit, string whichAnimation, raritycontrol rarity)",
        "prefix": "SetUnitAnimationWithRarity"
    },
    "AddUnitAnimationProperties": {
        "body": "AddUnitAnimationProperties(${1:whichUnit}, ${2:animProperties}, ${3:add})",
        "description": "AddUnitAnimationProperties (unit whichUnit, string animProperties, boolean add)",
        "prefix": "AddUnitAnimationProperties"
    },
    "SetUnitLookAt": {
        "body": "SetUnitLookAt(${1:whichUnit}, ${2:whichBone}, ${3:lookAtTarget}, ${4:offsetX}, ${5:offsetY}, ${6:offsetZ})",
        "description": "SetUnitLookAt (unit whichUnit, string whichBone, unit lookAtTarget, real offsetX, real offsetY, real offsetZ)",
        "prefix": "SetUnitLookAt"
    },
    "ResetUnitLookAt": {
        "body": "ResetUnitLookAt(${1:whichUnit})",
        "description": "ResetUnitLookAt (unit whichUnit)",
        "prefix": "ResetUnitLookAt"
    },
    "SetUnitRescuable": {
        "body": "SetUnitRescuable(${1:whichUnit}, ${2:byWhichPlayer}, ${3:flag})",
        "description": "SetUnitRescuable (unit whichUnit, player byWhichPlayer, boolean flag)",
        "prefix": "SetUnitRescuable"
    },
    "SetUnitRescueRange": {
        "body": "SetUnitRescueRange(${1:whichUnit}, ${2:range})",
        "description": "SetUnitRescueRange (unit whichUnit, real range)",
        "prefix": "SetUnitRescueRange"
    },
    "SetHeroStr": {
        "body": "SetHeroStr(${1:whichHero}, ${2:newStr}, ${3:permanent})",
        "description": "SetHeroStr (unit whichHero, integer newStr, boolean permanent)",
        "prefix": "SetHeroStr"
    },
    "SetHeroAgi": {
        "body": "SetHeroAgi(${1:whichHero}, ${2:newAgi}, ${3:permanent})",
        "description": "SetHeroAgi (unit whichHero, integer newAgi, boolean permanent)",
        "prefix": "SetHeroAgi"
    },
    "SetHeroInt": {
        "body": "SetHeroInt(${1:whichHero}, ${2:newInt}, ${3:permanent})",
        "description": "SetHeroInt (unit whichHero, integer newInt, boolean permanent)",
        "prefix": "SetHeroInt"
    },
    "GetHeroStr": {
        "body": "GetHeroStr(${1:whichHero}, ${2:includeBonuses})",
        "description": "GetHeroStr (unit whichHero, boolean includeBonuses)",
        "prefix": "GetHeroStr"
    },
    "GetHeroAgi": {
        "body": "GetHeroAgi(${1:whichHero}, ${2:includeBonuses})",
        "description": "GetHeroAgi (unit whichHero, boolean includeBonuses)",
        "prefix": "GetHeroAgi"
    },
    "GetHeroInt": {
        "body": "GetHeroInt(${1:whichHero}, ${2:includeBonuses})",
        "description": "GetHeroInt (unit whichHero, boolean includeBonuses)",
        "prefix": "GetHeroInt"
    },
    "UnitStripHeroLevel": {
        "body": "UnitStripHeroLevel(${1:whichHero}, ${2:howManyLevels})",
        "description": "UnitStripHeroLevel (unit whichHero, integer howManyLevels)",
        "prefix": "UnitStripHeroLevel"
    },
    "GetHeroXP": {
        "body": "GetHeroXP(${1:whichHero})",
        "description": "GetHeroXP (unit whichHero)",
        "prefix": "GetHeroXP"
    },
    "SetHeroXP": {
        "body": "SetHeroXP(${1:whichHero}, ${2:newXpVal}, ${3:showEyeCandy})",
        "description": "SetHeroXP (unit whichHero, integer newXpVal,  boolean showEyeCandy)",
        "prefix": "SetHeroXP"
    },
    "GetHeroSkillPoints": {
        "body": "GetHeroSkillPoints(${1:whichHero})",
        "description": "GetHeroSkillPoints (unit whichHero)",
        "prefix": "GetHeroSkillPoints"
    },
    "UnitModifySkillPoints": {
        "body": "UnitModifySkillPoints(${1:whichHero}, ${2:skillPointDelta})",
        "description": "UnitModifySkillPoints (unit whichHero, integer skillPointDelta)",
        "prefix": "UnitModifySkillPoints"
    },
    "AddHeroXP": {
        "body": "AddHeroXP(${1:whichHero}, ${2:xpToAdd}, ${3:showEyeCandy})",
        "description": "AddHeroXP (unit whichHero, integer xpToAdd,   boolean showEyeCandy)",
        "prefix": "AddHeroXP"
    },
    "SetHeroLevel": {
        "body": "SetHeroLevel(${1:whichHero}, ${2:level}, ${3:showEyeCandy})",
        "description": "SetHeroLevel (unit whichHero, integer level,  boolean showEyeCandy)",
        "prefix": "SetHeroLevel"
    },
    "GetHeroLevel": {
        "body": "GetHeroLevel(${1:whichHero})",
        "description": "GetHeroLevel (unit whichHero)",
        "prefix": "GetHeroLevel"
    },
    "GetUnitLevel": {
        "body": "GetUnitLevel(${1:whichUnit})",
        "description": "GetUnitLevel (unit whichUnit)",
        "prefix": "GetUnitLevel"
    },
    "GetHeroProperName": {
        "body": "GetHeroProperName(${1:whichHero})",
        "description": "GetHeroProperName (unit whichHero)",
        "prefix": "GetHeroProperName"
    },
    "SuspendHeroXP": {
        "body": "SuspendHeroXP(${1:whichHero}, ${2:flag})",
        "description": "SuspendHeroXP (unit whichHero, boolean flag)",
        "prefix": "SuspendHeroXP"
    },
    "IsSuspendedXP": {
        "body": "IsSuspendedXP(${1:whichHero})",
        "description": "IsSuspendedXP (unit whichHero)",
        "prefix": "IsSuspendedXP"
    },
    "SelectHeroSkill": {
        "body": "SelectHeroSkill(${1:whichHero}, ${2:abilcode})",
        "description": "SelectHeroSkill (unit whichHero, integer abilcode)",
        "prefix": "SelectHeroSkill"
    },
    "GetUnitAbilityLevel": {
        "body": "GetUnitAbilityLevel(${1:whichUnit}, ${2:abilcode})",
        "description": "GetUnitAbilityLevel (unit whichUnit, integer abilcode)",
        "prefix": "GetUnitAbilityLevel"
    },
    "DecUnitAbilityLevel": {
        "body": "DecUnitAbilityLevel(${1:whichUnit}, ${2:abilcode})",
        "description": "DecUnitAbilityLevel (unit whichUnit, integer abilcode)",
        "prefix": "DecUnitAbilityLevel"
    },
    "IncUnitAbilityLevel": {
        "body": "IncUnitAbilityLevel(${1:whichUnit}, ${2:abilcode})",
        "description": "IncUnitAbilityLevel (unit whichUnit, integer abilcode)",
        "prefix": "IncUnitAbilityLevel"
    },
    "SetUnitAbilityLevel": {
        "body": "SetUnitAbilityLevel(${1:whichUnit}, ${2:abilcode}, ${3:level})",
        "description": "SetUnitAbilityLevel (unit whichUnit, integer abilcode, integer level)",
        "prefix": "SetUnitAbilityLevel"
    },
    "ReviveHero": {
        "body": "ReviveHero(${1:whichHero}, ${2:x}, ${3:y}, ${4:doEyecandy})",
        "description": "ReviveHero (unit whichHero, real x, real y, boolean doEyecandy)",
        "prefix": "ReviveHero"
    },
    "ReviveHeroLoc": {
        "body": "ReviveHeroLoc(${1:whichHero}, ${2:loc}, ${3:doEyecandy})",
        "description": "ReviveHeroLoc (unit whichHero, location loc, boolean doEyecandy)",
        "prefix": "ReviveHeroLoc"
    },
    "SetUnitExploded": {
        "body": "SetUnitExploded(${1:whichUnit}, ${2:exploded})",
        "description": "SetUnitExploded (unit whichUnit, boolean exploded)",
        "prefix": "SetUnitExploded"
    },
    "SetUnitInvulnerable": {
        "body": "SetUnitInvulnerable(${1:whichUnit}, ${2:flag})",
        "description": "SetUnitInvulnerable (unit whichUnit, boolean flag)",
        "prefix": "SetUnitInvulnerable"
    },
    "PauseUnit": {
        "body": "PauseUnit(${1:whichUnit}, ${2:flag})",
        "description": "PauseUnit (unit whichUnit, boolean flag)",
        "prefix": "PauseUnit"
    },
    "IsUnitPaused": {
        "body": "IsUnitPaused(${1:whichHero})",
        "description": "IsUnitPaused (unit whichHero)",
        "prefix": "IsUnitPaused"
    },
    "SetUnitPathing": {
        "body": "SetUnitPathing(${1:whichUnit}, ${2:flag})",
        "description": "SetUnitPathing (unit whichUnit, boolean flag)",
        "prefix": "SetUnitPathing"
    },
    "ClearSelection": {
        "body": "ClearSelection()",
        "description": "ClearSelection ()",
        "prefix": "ClearSelection"
    },
    "SelectUnit": {
        "body": "SelectUnit(${1:whichUnit}, ${2:flag})",
        "description": "SelectUnit (unit whichUnit, boolean flag)",
        "prefix": "SelectUnit"
    },
    "GetUnitPointValue": {
        "body": "GetUnitPointValue(${1:whichUnit})",
        "description": "GetUnitPointValue (unit whichUnit)",
        "prefix": "GetUnitPointValue"
    },
    "GetUnitPointValueByType": {
        "body": "GetUnitPointValueByType(${1:unitType})",
        "description": "GetUnitPointValueByType (integer unitType)",
        "prefix": "GetUnitPointValueByType"
    },
    "UnitAddItem": {
        "body": "UnitAddItem(${1:whichUnit}, ${2:whichItem})",
        "description": "UnitAddItem (unit whichUnit, item whichItem)",
        "prefix": "UnitAddItem"
    },
    "UnitAddItemById": {
        "body": "UnitAddItemById(${1:whichUnit}, ${2:itemId})",
        "description": "UnitAddItemById (unit whichUnit, integer itemId)",
        "prefix": "UnitAddItemById"
    },
    "UnitAddItemToSlotById": {
        "body": "UnitAddItemToSlotById(${1:whichUnit}, ${2:itemId}, ${3:itemSlot})",
        "description": "UnitAddItemToSlotById (unit whichUnit, integer itemId, integer itemSlot)",
        "prefix": "UnitAddItemToSlotById"
    },
    "UnitRemoveItem": {
        "body": "UnitRemoveItem(${1:whichUnit}, ${2:whichItem})",
        "description": "UnitRemoveItem (unit whichUnit, item whichItem)",
        "prefix": "UnitRemoveItem"
    },
    "UnitRemoveItemFromSlot": {
        "body": "UnitRemoveItemFromSlot(${1:whichUnit}, ${2:itemSlot})",
        "description": "UnitRemoveItemFromSlot (unit whichUnit, integer itemSlot)",
        "prefix": "UnitRemoveItemFromSlot"
    },
    "UnitHasItem": {
        "body": "UnitHasItem(${1:whichUnit}, ${2:whichItem})",
        "description": "UnitHasItem (unit whichUnit, item whichItem)",
        "prefix": "UnitHasItem"
    },
    "UnitItemInSlot": {
        "body": "UnitItemInSlot(${1:whichUnit}, ${2:itemSlot})",
        "description": "UnitItemInSlot (unit whichUnit, integer itemSlot)",
        "prefix": "UnitItemInSlot"
    },
    "UnitInventorySize": {
        "body": "UnitInventorySize(${1:whichUnit})",
        "description": "UnitInventorySize (unit whichUnit)",
        "prefix": "UnitInventorySize"
    },
    "UnitDropItemPoint": {
        "body": "UnitDropItemPoint(${1:whichUnit}, ${2:whichItem}, ${3:x}, ${4:y})",
        "description": "UnitDropItemPoint (unit whichUnit, item whichItem, real x, real y)",
        "prefix": "UnitDropItemPoint"
    },
    "UnitDropItemSlot": {
        "body": "UnitDropItemSlot(${1:whichUnit}, ${2:whichItem}, ${3:slot})",
        "description": "UnitDropItemSlot (unit whichUnit, item whichItem, integer slot)",
        "prefix": "UnitDropItemSlot"
    },
    "UnitDropItemTarget": {
        "body": "UnitDropItemTarget(${1:whichUnit}, ${2:whichItem}, ${3:target})",
        "description": "UnitDropItemTarget (unit whichUnit, item whichItem, widget target)",
        "prefix": "UnitDropItemTarget"
    },
    "UnitUseItem": {
        "body": "UnitUseItem(${1:whichUnit}, ${2:whichItem})",
        "description": "UnitUseItem (unit whichUnit, item whichItem)",
        "prefix": "UnitUseItem"
    },
    "UnitUseItemPoint": {
        "body": "UnitUseItemPoint(${1:whichUnit}, ${2:whichItem}, ${3:x}, ${4:y})",
        "description": "UnitUseItemPoint (unit whichUnit, item whichItem, real x, real y)",
        "prefix": "UnitUseItemPoint"
    },
    "UnitUseItemTarget": {
        "body": "UnitUseItemTarget(${1:whichUnit}, ${2:whichItem}, ${3:target})",
        "description": "UnitUseItemTarget (unit whichUnit, item whichItem, widget target)",
        "prefix": "UnitUseItemTarget"
    },
    "GetUnitX": {
        "body": "GetUnitX(${1:whichUnit})",
        "description": "GetUnitX (unit whichUnit)",
        "prefix": "GetUnitX"
    },
    "GetUnitY": {
        "body": "GetUnitY(${1:whichUnit})",
        "description": "GetUnitY (unit whichUnit)",
        "prefix": "GetUnitY"
    },
    "GetUnitLoc": {
        "body": "GetUnitLoc(${1:whichUnit})",
        "description": "GetUnitLoc (unit whichUnit)",
        "prefix": "GetUnitLoc"
    },
    "GetUnitFacing": {
        "body": "GetUnitFacing(${1:whichUnit})",
        "description": "GetUnitFacing (unit whichUnit)",
        "prefix": "GetUnitFacing"
    },
    "GetUnitMoveSpeed": {
        "body": "GetUnitMoveSpeed(${1:whichUnit})",
        "description": "GetUnitMoveSpeed (unit whichUnit)",
        "prefix": "GetUnitMoveSpeed"
    },
    "GetUnitDefaultMoveSpeed": {
        "body": "GetUnitDefaultMoveSpeed(${1:whichUnit})",
        "description": "GetUnitDefaultMoveSpeed (unit whichUnit)",
        "prefix": "GetUnitDefaultMoveSpeed"
    },
    "GetUnitState": {
        "body": "GetUnitState(${1:whichUnit}, ${2:whichUnitState})",
        "description": "GetUnitState (unit whichUnit, unitstate whichUnitState)",
        "prefix": "GetUnitState"
    },
    "GetOwningPlayer": {
        "body": "GetOwningPlayer(${1:whichUnit})",
        "description": "GetOwningPlayer (unit whichUnit)",
        "prefix": "GetOwningPlayer"
    },
    "GetUnitTypeId": {
        "body": "GetUnitTypeId(${1:whichUnit})",
        "description": "GetUnitTypeId (unit whichUnit)",
        "prefix": "GetUnitTypeId"
    },
    "GetUnitRace": {
        "body": "GetUnitRace(${1:whichUnit})",
        "description": "GetUnitRace (unit whichUnit)",
        "prefix": "GetUnitRace"
    },
    "GetUnitName": {
        "body": "GetUnitName(${1:whichUnit})",
        "description": "GetUnitName (unit whichUnit)",
        "prefix": "GetUnitName"
    },
    "GetUnitFoodUsed": {
        "body": "GetUnitFoodUsed(${1:whichUnit})",
        "description": "GetUnitFoodUsed (unit whichUnit)",
        "prefix": "GetUnitFoodUsed"
    },
    "GetUnitFoodMade": {
        "body": "GetUnitFoodMade(${1:whichUnit})",
        "description": "GetUnitFoodMade (unit whichUnit)",
        "prefix": "GetUnitFoodMade"
    },
    "GetFoodMade": {
        "body": "GetFoodMade(${1:unitId})",
        "description": "GetFoodMade (integer unitId)",
        "prefix": "GetFoodMade"
    },
    "GetFoodUsed": {
        "body": "GetFoodUsed(${1:unitId})",
        "description": "GetFoodUsed (integer unitId)",
        "prefix": "GetFoodUsed"
    },
    "SetUnitUseFood": {
        "body": "SetUnitUseFood(${1:whichUnit}, ${2:useFood})",
        "description": "SetUnitUseFood (unit whichUnit, boolean useFood)",
        "prefix": "SetUnitUseFood"
    },
    "GetUnitRallyPoint": {
        "body": "GetUnitRallyPoint(${1:whichUnit})",
        "description": "GetUnitRallyPoint (unit whichUnit)",
        "prefix": "GetUnitRallyPoint"
    },
    "GetUnitRallyUnit": {
        "body": "GetUnitRallyUnit(${1:whichUnit})",
        "description": "GetUnitRallyUnit (unit whichUnit)",
        "prefix": "GetUnitRallyUnit"
    },
    "GetUnitRallyDestructable": {
        "body": "GetUnitRallyDestructable(${1:whichUnit})",
        "description": "GetUnitRallyDestructable (unit whichUnit)",
        "prefix": "GetUnitRallyDestructable"
    },
    "IsUnitInGroup": {
        "body": "IsUnitInGroup(${1:whichUnit}, ${2:whichGroup})",
        "description": "IsUnitInGroup (unit whichUnit, group whichGroup)",
        "prefix": "IsUnitInGroup"
    },
    "IsUnitInForce": {
        "body": "IsUnitInForce(${1:whichUnit}, ${2:whichForce})",
        "description": "IsUnitInForce (unit whichUnit, force whichForce)",
        "prefix": "IsUnitInForce"
    },
    "IsUnitOwnedByPlayer": {
        "body": "IsUnitOwnedByPlayer(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitOwnedByPlayer (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitOwnedByPlayer"
    },
    "IsUnitAlly": {
        "body": "IsUnitAlly(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitAlly (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitAlly"
    },
    "IsUnitEnemy": {
        "body": "IsUnitEnemy(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitEnemy (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitEnemy"
    },
    "IsUnitVisible": {
        "body": "IsUnitVisible(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitVisible (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitVisible"
    },
    "IsUnitDetected": {
        "body": "IsUnitDetected(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitDetected (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitDetected"
    },
    "IsUnitInvisible": {
        "body": "IsUnitInvisible(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitInvisible (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitInvisible"
    },
    "IsUnitFogged": {
        "body": "IsUnitFogged(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitFogged (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitFogged"
    },
    "IsUnitMasked": {
        "body": "IsUnitMasked(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitMasked (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitMasked"
    },
    "IsUnitSelected": {
        "body": "IsUnitSelected(${1:whichUnit}, ${2:whichPlayer})",
        "description": "IsUnitSelected (unit whichUnit, player whichPlayer)",
        "prefix": "IsUnitSelected"
    },
    "IsUnitRace": {
        "body": "IsUnitRace(${1:whichUnit}, ${2:whichRace})",
        "description": "IsUnitRace (unit whichUnit, race whichRace)",
        "prefix": "IsUnitRace"
    },
    "IsUnitType": {
        "body": "IsUnitType(${1:whichUnit}, ${2:whichUnitType})",
        "description": "IsUnitType (unit whichUnit, unittype whichUnitType)",
        "prefix": "IsUnitType"
    },
    "IsUnit": {
        "body": "IsUnit(${1:whichUnit}, ${2:whichSpecifiedUnit})",
        "description": "IsUnit (unit whichUnit, unit whichSpecifiedUnit)",
        "prefix": "IsUnit"
    },
    "IsUnitInRange": {
        "body": "IsUnitInRange(${1:whichUnit}, ${2:otherUnit}, ${3:distance})",
        "description": "IsUnitInRange (unit whichUnit, unit otherUnit, real distance)",
        "prefix": "IsUnitInRange"
    },
    "IsUnitInRangeXY": {
        "body": "IsUnitInRangeXY(${1:whichUnit}, ${2:x}, ${3:y}, ${4:distance})",
        "description": "IsUnitInRangeXY (unit whichUnit, real x, real y, real distance)",
        "prefix": "IsUnitInRangeXY"
    },
    "IsUnitInRangeLoc": {
        "body": "IsUnitInRangeLoc(${1:whichUnit}, ${2:whichLocation}, ${3:distance})",
        "description": "IsUnitInRangeLoc (unit whichUnit, location whichLocation, real distance)",
        "prefix": "IsUnitInRangeLoc"
    },
    "IsUnitHidden": {
        "body": "IsUnitHidden(${1:whichUnit})",
        "description": "IsUnitHidden (unit whichUnit)",
        "prefix": "IsUnitHidden"
    },
    "IsUnitIllusion": {
        "body": "IsUnitIllusion(${1:whichUnit})",
        "description": "IsUnitIllusion (unit whichUnit)",
        "prefix": "IsUnitIllusion"
    },
    "IsUnitInTransport": {
        "body": "IsUnitInTransport(${1:whichUnit}, ${2:whichTransport})",
        "description": "IsUnitInTransport (unit whichUnit, unit whichTransport)",
        "prefix": "IsUnitInTransport"
    },
    "IsUnitLoaded": {
        "body": "IsUnitLoaded(${1:whichUnit})",
        "description": "IsUnitLoaded (unit whichUnit)",
        "prefix": "IsUnitLoaded"
    },
    "IsHeroUnitId": {
        "body": "IsHeroUnitId(${1:unitId})",
        "description": "IsHeroUnitId (integer unitId)",
        "prefix": "IsHeroUnitId"
    },
    "IsUnitIdType": {
        "body": "IsUnitIdType(${1:unitId}, ${2:whichUnitType})",
        "description": "IsUnitIdType (integer unitId, unittype whichUnitType)",
        "prefix": "IsUnitIdType"
    },
    "UnitShareVision": {
        "body": "UnitShareVision(${1:whichUnit}, ${2:whichPlayer}, ${3:share})",
        "description": "UnitShareVision (unit whichUnit, player whichPlayer, boolean share)",
        "prefix": "UnitShareVision"
    },
    "UnitSuspendDecay": {
        "body": "UnitSuspendDecay(${1:whichUnit}, ${2:suspend})",
        "description": "UnitSuspendDecay (unit whichUnit, boolean suspend)",
        "prefix": "UnitSuspendDecay"
    },
    "UnitAddType": {
        "body": "UnitAddType(${1:whichUnit}, ${2:whichUnitType})",
        "description": "UnitAddType (unit whichUnit, unittype whichUnitType)",
        "prefix": "UnitAddType"
    },
    "UnitRemoveType": {
        "body": "UnitRemoveType(${1:whichUnit}, ${2:whichUnitType})",
        "description": "UnitRemoveType (unit whichUnit, unittype whichUnitType)",
        "prefix": "UnitRemoveType"
    },
    "UnitAddAbility": {
        "body": "UnitAddAbility(${1:whichUnit}, ${2:abilityId})",
        "description": "UnitAddAbility (unit whichUnit, integer abilityId)",
        "prefix": "UnitAddAbility"
    },
    "UnitRemoveAbility": {
        "body": "UnitRemoveAbility(${1:whichUnit}, ${2:abilityId})",
        "description": "UnitRemoveAbility (unit whichUnit, integer abilityId)",
        "prefix": "UnitRemoveAbility"
    },
    "UnitMakeAbilityPermanent": {
        "body": "UnitMakeAbilityPermanent(${1:whichUnit}, ${2:permanent}, ${3:abilityId})",
        "description": "UnitMakeAbilityPermanent (unit whichUnit, boolean permanent, integer abilityId)",
        "prefix": "UnitMakeAbilityPermanent"
    },
    "UnitRemoveBuffs": {
        "body": "UnitRemoveBuffs(${1:whichUnit}, ${2:removePositive}, ${3:removeNegative})",
        "description": "UnitRemoveBuffs (unit whichUnit, boolean removePositive, boolean removeNegative)",
        "prefix": "UnitRemoveBuffs"
    },
    "UnitRemoveBuffsEx": {
        "body": "UnitRemoveBuffsEx(${1:whichUnit}, ${2:removePositive}, ${3:removeNegative}, ${4:magic}, ${5:physical}, ${6:timedLife}, ${7:aura}, ${8:autoDispel})",
        "description": "UnitRemoveBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)",
        "prefix": "UnitRemoveBuffsEx"
    },
    "UnitHasBuffsEx": {
        "body": "UnitHasBuffsEx(${1:whichUnit}, ${2:removePositive}, ${3:removeNegative}, ${4:magic}, ${5:physical}, ${6:timedLife}, ${7:aura}, ${8:autoDispel})",
        "description": "UnitHasBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)",
        "prefix": "UnitHasBuffsEx"
    },
    "UnitCountBuffsEx": {
        "body": "UnitCountBuffsEx(${1:whichUnit}, ${2:removePositive}, ${3:removeNegative}, ${4:magic}, ${5:physical}, ${6:timedLife}, ${7:aura}, ${8:autoDispel})",
        "description": "UnitCountBuffsEx (unit whichUnit, boolean removePositive, boolean removeNegative, boolean magic, boolean physical, boolean timedLife, boolean aura, boolean autoDispel)",
        "prefix": "UnitCountBuffsEx"
    },
    "UnitAddSleep": {
        "body": "UnitAddSleep(${1:whichUnit}, ${2:add})",
        "description": "UnitAddSleep (unit whichUnit, boolean add)",
        "prefix": "UnitAddSleep"
    },
    "UnitCanSleep": {
        "body": "UnitCanSleep(${1:whichUnit})",
        "description": "UnitCanSleep (unit whichUnit)",
        "prefix": "UnitCanSleep"
    },
    "UnitAddSleepPerm": {
        "body": "UnitAddSleepPerm(${1:whichUnit}, ${2:add})",
        "description": "UnitAddSleepPerm (unit whichUnit, boolean add)",
        "prefix": "UnitAddSleepPerm"
    },
    "UnitCanSleepPerm": {
        "body": "UnitCanSleepPerm(${1:whichUnit})",
        "description": "UnitCanSleepPerm (unit whichUnit)",
        "prefix": "UnitCanSleepPerm"
    },
    "UnitIsSleeping": {
        "body": "UnitIsSleeping(${1:whichUnit})",
        "description": "UnitIsSleeping (unit whichUnit)",
        "prefix": "UnitIsSleeping"
    },
    "UnitWakeUp": {
        "body": "UnitWakeUp(${1:whichUnit})",
        "description": "UnitWakeUp (unit whichUnit)",
        "prefix": "UnitWakeUp"
    },
    "UnitApplyTimedLife": {
        "body": "UnitApplyTimedLife(${1:whichUnit}, ${2:buffId}, ${3:duration})",
        "description": "UnitApplyTimedLife (unit whichUnit, integer buffId, real duration)",
        "prefix": "UnitApplyTimedLife"
    },
    "UnitIgnoreAlarm": {
        "body": "UnitIgnoreAlarm(${1:whichUnit}, ${2:flag})",
        "description": "UnitIgnoreAlarm (unit whichUnit, boolean flag)",
        "prefix": "UnitIgnoreAlarm"
    },
    "UnitIgnoreAlarmToggled": {
        "body": "UnitIgnoreAlarmToggled(${1:whichUnit})",
        "description": "UnitIgnoreAlarmToggled (unit whichUnit)",
        "prefix": "UnitIgnoreAlarmToggled"
    },
    "UnitResetCooldown": {
        "body": "UnitResetCooldown(${1:whichUnit})",
        "description": "UnitResetCooldown (unit whichUnit)",
        "prefix": "UnitResetCooldown"
    },
    "UnitSetConstructionProgress": {
        "body": "UnitSetConstructionProgress(${1:whichUnit}, ${2:constructionPercentage})",
        "description": "UnitSetConstructionProgress (unit whichUnit, integer constructionPercentage)",
        "prefix": "UnitSetConstructionProgress"
    },
    "UnitSetUpgradeProgress": {
        "body": "UnitSetUpgradeProgress(${1:whichUnit}, ${2:upgradePercentage})",
        "description": "UnitSetUpgradeProgress (unit whichUnit, integer upgradePercentage)",
        "prefix": "UnitSetUpgradeProgress"
    },
    "UnitPauseTimedLife": {
        "body": "UnitPauseTimedLife(${1:whichUnit}, ${2:flag})",
        "description": "UnitPauseTimedLife (unit whichUnit, boolean flag)",
        "prefix": "UnitPauseTimedLife"
    },
    "UnitSetUsesAltIcon": {
        "body": "UnitSetUsesAltIcon(${1:whichUnit}, ${2:flag})",
        "description": "UnitSetUsesAltIcon (unit whichUnit, boolean flag)",
        "prefix": "UnitSetUsesAltIcon"
    },
    "UnitDamagePoint": {
        "body": "UnitDamagePoint(${1:whichUnit}, ${2:delay}, ${3:radius}, ${4:x}, ${5:y}, ${6:amount}, ${7:attack}, ${8:ranged}, ${9:attackType}, ${10:damageType}, ${11:weaponType})",
        "description": "UnitDamagePoint (unit whichUnit, real delay, real radius, real x, real y, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)",
        "prefix": "UnitDamagePoint"
    },
    "UnitDamageTarget": {
        "body": "UnitDamageTarget(${1:whichUnit}, ${2:target}, ${3:amount}, ${4:attack}, ${5:ranged}, ${6:attackType}, ${7:damageType}, ${8:weaponType})",
        "description": "UnitDamageTarget (unit whichUnit, widget target, real amount, boolean attack, boolean ranged, attacktype attackType, damagetype damageType, weapontype weaponType)",
        "prefix": "UnitDamageTarget"
    },
    "IssueImmediateOrder": {
        "body": "IssueImmediateOrder(${1:whichUnit}, ${2:order})",
        "description": "IssueImmediateOrder (unit whichUnit, string order)",
        "prefix": "IssueImmediateOrder"
    },
    "IssueImmediateOrderById": {
        "body": "IssueImmediateOrderById(${1:whichUnit}, ${2:order})",
        "description": "IssueImmediateOrderById (unit whichUnit, integer order)",
        "prefix": "IssueImmediateOrderById"
    },
    "IssuePointOrder": {
        "body": "IssuePointOrder(${1:whichUnit}, ${2:order}, ${3:x}, ${4:y})",
        "description": "IssuePointOrder (unit whichUnit, string order, real x, real y)",
        "prefix": "IssuePointOrder"
    },
    "IssuePointOrderLoc": {
        "body": "IssuePointOrderLoc(${1:whichUnit}, ${2:order}, ${3:whichLocation})",
        "description": "IssuePointOrderLoc (unit whichUnit, string order, location whichLocation)",
        "prefix": "IssuePointOrderLoc"
    },
    "IssuePointOrderById": {
        "body": "IssuePointOrderById(${1:whichUnit}, ${2:order}, ${3:x}, ${4:y})",
        "description": "IssuePointOrderById (unit whichUnit, integer order, real x, real y)",
        "prefix": "IssuePointOrderById"
    },
    "IssuePointOrderByIdLoc": {
        "body": "IssuePointOrderByIdLoc(${1:whichUnit}, ${2:order}, ${3:whichLocation})",
        "description": "IssuePointOrderByIdLoc (unit whichUnit, integer order, location whichLocation)",
        "prefix": "IssuePointOrderByIdLoc"
    },
    "IssueTargetOrder": {
        "body": "IssueTargetOrder(${1:whichUnit}, ${2:order}, ${3:targetWidget})",
        "description": "IssueTargetOrder (unit whichUnit, string order, widget targetWidget)",
        "prefix": "IssueTargetOrder"
    },
    "IssueTargetOrderById": {
        "body": "IssueTargetOrderById(${1:whichUnit}, ${2:order}, ${3:targetWidget})",
        "description": "IssueTargetOrderById (unit whichUnit, integer order, widget targetWidget)",
        "prefix": "IssueTargetOrderById"
    },
    "IssueInstantPointOrder": {
        "body": "IssueInstantPointOrder(${1:whichUnit}, ${2:order}, ${3:x}, ${4:y}, ${5:instantTargetWidget})",
        "description": "IssueInstantPointOrder (unit whichUnit, string order, real x, real y, widget instantTargetWidget)",
        "prefix": "IssueInstantPointOrder"
    },
    "IssueInstantPointOrderById": {
        "body": "IssueInstantPointOrderById(${1:whichUnit}, ${2:order}, ${3:x}, ${4:y}, ${5:instantTargetWidget})",
        "description": "IssueInstantPointOrderById (unit whichUnit, integer order, real x, real y, widget instantTargetWidget)",
        "prefix": "IssueInstantPointOrderById"
    },
    "IssueInstantTargetOrder": {
        "body": "IssueInstantTargetOrder(${1:whichUnit}, ${2:order}, ${3:targetWidget}, ${4:instantTargetWidget})",
        "description": "IssueInstantTargetOrder (unit whichUnit, string order, widget targetWidget, widget instantTargetWidget)",
        "prefix": "IssueInstantTargetOrder"
    },
    "IssueInstantTargetOrderById": {
        "body": "IssueInstantTargetOrderById(${1:whichUnit}, ${2:order}, ${3:targetWidget}, ${4:instantTargetWidget})",
        "description": "IssueInstantTargetOrderById (unit whichUnit, integer order, widget targetWidget, widget instantTargetWidget)",
        "prefix": "IssueInstantTargetOrderById"
    },
    "IssueBuildOrder": {
        "body": "IssueBuildOrder(${1:whichPeon}, ${2:unitToBuild}, ${3:x}, ${4:y})",
        "description": "IssueBuildOrder (unit whichPeon, string unitToBuild, real x, real y)",
        "prefix": "IssueBuildOrder"
    },
    "IssueBuildOrderById": {
        "body": "IssueBuildOrderById(${1:whichPeon}, ${2:unitId}, ${3:x}, ${4:y})",
        "description": "IssueBuildOrderById (unit whichPeon, integer unitId, real x, real y)",
        "prefix": "IssueBuildOrderById"
    },
    "IssueNeutralImmediateOrder": {
        "body": "IssueNeutralImmediateOrder(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitToBuild})",
        "description": "IssueNeutralImmediateOrder (player forWhichPlayer, unit neutralStructure, string unitToBuild)",
        "prefix": "IssueNeutralImmediateOrder"
    },
    "IssueNeutralImmediateOrderById": {
        "body": "IssueNeutralImmediateOrderById(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitId})",
        "description": "IssueNeutralImmediateOrderById (player forWhichPlayer,unit neutralStructure, integer unitId)",
        "prefix": "IssueNeutralImmediateOrderById"
    },
    "IssueNeutralPointOrder": {
        "body": "IssueNeutralPointOrder(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitToBuild}, ${4:x}, ${5:y})",
        "description": "IssueNeutralPointOrder (player forWhichPlayer,unit neutralStructure, string unitToBuild, real x, real y)",
        "prefix": "IssueNeutralPointOrder"
    },
    "IssueNeutralPointOrderById": {
        "body": "IssueNeutralPointOrderById(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitId}, ${4:x}, ${5:y})",
        "description": "IssueNeutralPointOrderById (player forWhichPlayer,unit neutralStructure, integer unitId, real x, real y)",
        "prefix": "IssueNeutralPointOrderById"
    },
    "IssueNeutralTargetOrder": {
        "body": "IssueNeutralTargetOrder(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitToBuild}, ${4:target})",
        "description": "IssueNeutralTargetOrder (player forWhichPlayer,unit neutralStructure, string unitToBuild, widget target)",
        "prefix": "IssueNeutralTargetOrder"
    },
    "IssueNeutralTargetOrderById": {
        "body": "IssueNeutralTargetOrderById(${1:forWhichPlayer}, ${2:neutralStructure}, ${3:unitId}, ${4:target})",
        "description": "IssueNeutralTargetOrderById (player forWhichPlayer,unit neutralStructure, integer unitId, widget target)",
        "prefix": "IssueNeutralTargetOrderById"
    },
    "GetUnitCurrentOrder": {
        "body": "GetUnitCurrentOrder(${1:whichUnit})",
        "description": "GetUnitCurrentOrder (unit whichUnit)",
        "prefix": "GetUnitCurrentOrder"
    },
    "SetResourceAmount": {
        "body": "SetResourceAmount(${1:whichUnit}, ${2:amount})",
        "description": "SetResourceAmount (unit whichUnit, integer amount)",
        "prefix": "SetResourceAmount"
    },
    "AddResourceAmount": {
        "body": "AddResourceAmount(${1:whichUnit}, ${2:amount})",
        "description": "AddResourceAmount (unit whichUnit, integer amount)",
        "prefix": "AddResourceAmount"
    },
    "GetResourceAmount": {
        "body": "GetResourceAmount(${1:whichUnit})",
        "description": "GetResourceAmount (unit whichUnit)",
        "prefix": "GetResourceAmount"
    },
    "WaygateGetDestinationX": {
        "body": "WaygateGetDestinationX(${1:waygate})",
        "description": "WaygateGetDestinationX (unit waygate)",
        "prefix": "WaygateGetDestinationX"
    },
    "WaygateGetDestinationY": {
        "body": "WaygateGetDestinationY(${1:waygate})",
        "description": "WaygateGetDestinationY (unit waygate)",
        "prefix": "WaygateGetDestinationY"
    },
    "WaygateSetDestination": {
        "body": "WaygateSetDestination(${1:waygate}, ${2:x}, ${3:y})",
        "description": "WaygateSetDestination (unit waygate, real x, real y)",
        "prefix": "WaygateSetDestination"
    },
    "WaygateActivate": {
        "body": "WaygateActivate(${1:waygate}, ${2:activate})",
        "description": "WaygateActivate (unit waygate, boolean activate)",
        "prefix": "WaygateActivate"
    },
    "WaygateIsActive": {
        "body": "WaygateIsActive(${1:waygate})",
        "description": "WaygateIsActive (unit waygate)",
        "prefix": "WaygateIsActive"
    },
    "AddItemToAllStock": {
        "body": "AddItemToAllStock(${1:itemId}, ${2:currentStock}, ${3:stockMax})",
        "description": "AddItemToAllStock (integer itemId, integer currentStock, integer stockMax)",
        "prefix": "AddItemToAllStock"
    },
    "AddItemToStock": {
        "body": "AddItemToStock(${1:whichUnit}, ${2:itemId}, ${3:currentStock}, ${4:stockMax})",
        "description": "AddItemToStock (unit whichUnit, integer itemId, integer currentStock, integer stockMax)",
        "prefix": "AddItemToStock"
    },
    "AddUnitToAllStock": {
        "body": "AddUnitToAllStock(${1:unitId}, ${2:currentStock}, ${3:stockMax})",
        "description": "AddUnitToAllStock (integer unitId, integer currentStock, integer stockMax)",
        "prefix": "AddUnitToAllStock"
    },
    "AddUnitToStock": {
        "body": "AddUnitToStock(${1:whichUnit}, ${2:unitId}, ${3:currentStock}, ${4:stockMax})",
        "description": "AddUnitToStock (unit whichUnit, integer unitId, integer currentStock, integer stockMax)",
        "prefix": "AddUnitToStock"
    },
    "RemoveItemFromAllStock": {
        "body": "RemoveItemFromAllStock(${1:itemId})",
        "description": "RemoveItemFromAllStock (integer itemId)",
        "prefix": "RemoveItemFromAllStock"
    },
    "RemoveItemFromStock": {
        "body": "RemoveItemFromStock(${1:whichUnit}, ${2:itemId})",
        "description": "RemoveItemFromStock (unit whichUnit, integer itemId)",
        "prefix": "RemoveItemFromStock"
    },
    "RemoveUnitFromAllStock": {
        "body": "RemoveUnitFromAllStock(${1:unitId})",
        "description": "RemoveUnitFromAllStock (integer unitId)",
        "prefix": "RemoveUnitFromAllStock"
    },
    "RemoveUnitFromStock": {
        "body": "RemoveUnitFromStock(${1:whichUnit}, ${2:unitId})",
        "description": "RemoveUnitFromStock (unit whichUnit, integer unitId)",
        "prefix": "RemoveUnitFromStock"
    },
    "SetAllItemTypeSlots": {
        "body": "SetAllItemTypeSlots(${1:slots})",
        "description": "SetAllItemTypeSlots (integer slots)",
        "prefix": "SetAllItemTypeSlots"
    },
    "SetAllUnitTypeSlots": {
        "body": "SetAllUnitTypeSlots(${1:slots})",
        "description": "SetAllUnitTypeSlots (integer slots)",
        "prefix": "SetAllUnitTypeSlots"
    },
    "SetItemTypeSlots": {
        "body": "SetItemTypeSlots(${1:whichUnit}, ${2:slots})",
        "description": "SetItemTypeSlots (unit whichUnit, integer slots)",
        "prefix": "SetItemTypeSlots"
    },
    "SetUnitTypeSlots": {
        "body": "SetUnitTypeSlots(${1:whichUnit}, ${2:slots})",
        "description": "SetUnitTypeSlots (unit whichUnit, integer slots)",
        "prefix": "SetUnitTypeSlots"
    },
    "GetUnitUserData": {
        "body": "GetUnitUserData(${1:whichUnit})",
        "description": "GetUnitUserData (unit whichUnit)",
        "prefix": "GetUnitUserData"
    },
    "SetUnitUserData": {
        "body": "SetUnitUserData(${1:whichUnit}, ${2:data})",
        "description": "SetUnitUserData (unit whichUnit, integer data)",
        "prefix": "SetUnitUserData"
    },
    "Player": {
        "body": "Player(${1:number})",
        "description": "Player (integer number)",
        "prefix": "Player"
    },
    "GetLocalPlayer": {
        "body": "GetLocalPlayer()",
        "description": "GetLocalPlayer ()",
        "prefix": "GetLocalPlayer"
    },
    "IsPlayerAlly": {
        "body": "IsPlayerAlly(${1:whichPlayer}, ${2:otherPlayer})",
        "description": "IsPlayerAlly (player whichPlayer, player otherPlayer)",
        "prefix": "IsPlayerAlly"
    },
    "IsPlayerEnemy": {
        "body": "IsPlayerEnemy(${1:whichPlayer}, ${2:otherPlayer})",
        "description": "IsPlayerEnemy (player whichPlayer, player otherPlayer)",
        "prefix": "IsPlayerEnemy"
    },
    "IsPlayerInForce": {
        "body": "IsPlayerInForce(${1:whichPlayer}, ${2:whichForce})",
        "description": "IsPlayerInForce (player whichPlayer, force whichForce)",
        "prefix": "IsPlayerInForce"
    },
    "IsPlayerObserver": {
        "body": "IsPlayerObserver(${1:whichPlayer})",
        "description": "IsPlayerObserver (player whichPlayer)",
        "prefix": "IsPlayerObserver"
    },
    "IsVisibleToPlayer": {
        "body": "IsVisibleToPlayer(${1:x}, ${2:y}, ${3:whichPlayer})",
        "description": "IsVisibleToPlayer (real x, real y, player whichPlayer)",
        "prefix": "IsVisibleToPlayer"
    },
    "IsLocationVisibleToPlayer": {
        "body": "IsLocationVisibleToPlayer(${1:whichLocation}, ${2:whichPlayer})",
        "description": "IsLocationVisibleToPlayer (location whichLocation, player whichPlayer)",
        "prefix": "IsLocationVisibleToPlayer"
    },
    "IsFoggedToPlayer": {
        "body": "IsFoggedToPlayer(${1:x}, ${2:y}, ${3:whichPlayer})",
        "description": "IsFoggedToPlayer (real x, real y, player whichPlayer)",
        "prefix": "IsFoggedToPlayer"
    },
    "IsLocationFoggedToPlayer": {
        "body": "IsLocationFoggedToPlayer(${1:whichLocation}, ${2:whichPlayer})",
        "description": "IsLocationFoggedToPlayer (location whichLocation, player whichPlayer)",
        "prefix": "IsLocationFoggedToPlayer"
    },
    "IsMaskedToPlayer": {
        "body": "IsMaskedToPlayer(${1:x}, ${2:y}, ${3:whichPlayer})",
        "description": "IsMaskedToPlayer (real x, real y, player whichPlayer)",
        "prefix": "IsMaskedToPlayer"
    },
    "IsLocationMaskedToPlayer": {
        "body": "IsLocationMaskedToPlayer(${1:whichLocation}, ${2:whichPlayer})",
        "description": "IsLocationMaskedToPlayer (location whichLocation, player whichPlayer)",
        "prefix": "IsLocationMaskedToPlayer"
    },
    "GetPlayerRace": {
        "body": "GetPlayerRace(${1:whichPlayer})",
        "description": "GetPlayerRace (player whichPlayer)",
        "prefix": "GetPlayerRace"
    },
    "GetPlayerId": {
        "body": "GetPlayerId(${1:whichPlayer})",
        "description": "GetPlayerId (player whichPlayer)",
        "prefix": "GetPlayerId"
    },
    "GetPlayerUnitCount": {
        "body": "GetPlayerUnitCount(${1:whichPlayer}, ${2:includeIncomplete})",
        "description": "GetPlayerUnitCount (player whichPlayer, boolean includeIncomplete)",
        "prefix": "GetPlayerUnitCount"
    },
    "GetPlayerTypedUnitCount": {
        "body": "GetPlayerTypedUnitCount(${1:whichPlayer}, ${2:unitName}, ${3:includeIncomplete}, ${4:includeUpgrades})",
        "description": "GetPlayerTypedUnitCount (player whichPlayer, string unitName, boolean includeIncomplete, boolean includeUpgrades)",
        "prefix": "GetPlayerTypedUnitCount"
    },
    "GetPlayerStructureCount": {
        "body": "GetPlayerStructureCount(${1:whichPlayer}, ${2:includeIncomplete})",
        "description": "GetPlayerStructureCount (player whichPlayer, boolean includeIncomplete)",
        "prefix": "GetPlayerStructureCount"
    },
    "GetPlayerState": {
        "body": "GetPlayerState(${1:whichPlayer}, ${2:whichPlayerState})",
        "description": "GetPlayerState (player whichPlayer, playerstate whichPlayerState)",
        "prefix": "GetPlayerState"
    },
    "GetPlayerScore": {
        "body": "GetPlayerScore(${1:whichPlayer}, ${2:whichPlayerScore})",
        "description": "GetPlayerScore (player whichPlayer, playerscore whichPlayerScore)",
        "prefix": "GetPlayerScore"
    },
    "GetPlayerAlliance": {
        "body": "GetPlayerAlliance(${1:sourcePlayer}, ${2:otherPlayer}, ${3:whichAllianceSetting})",
        "description": "GetPlayerAlliance (player sourcePlayer, player otherPlayer, alliancetype whichAllianceSetting)",
        "prefix": "GetPlayerAlliance"
    },
    "GetPlayerHandicap": {
        "body": "GetPlayerHandicap(${1:whichPlayer})",
        "description": "GetPlayerHandicap (player whichPlayer)",
        "prefix": "GetPlayerHandicap"
    },
    "GetPlayerHandicapXP": {
        "body": "GetPlayerHandicapXP(${1:whichPlayer})",
        "description": "GetPlayerHandicapXP (player whichPlayer)",
        "prefix": "GetPlayerHandicapXP"
    },
    "SetPlayerHandicap": {
        "body": "SetPlayerHandicap(${1:whichPlayer}, ${2:handicap})",
        "description": "SetPlayerHandicap (player whichPlayer, real handicap)",
        "prefix": "SetPlayerHandicap"
    },
    "SetPlayerHandicapXP": {
        "body": "SetPlayerHandicapXP(${1:whichPlayer}, ${2:handicap})",
        "description": "SetPlayerHandicapXP (player whichPlayer, real handicap)",
        "prefix": "SetPlayerHandicapXP"
    },
    "SetPlayerTechMaxAllowed": {
        "body": "SetPlayerTechMaxAllowed(${1:whichPlayer}, ${2:techid}, ${3:maximum})",
        "description": "SetPlayerTechMaxAllowed (player whichPlayer, integer techid, integer maximum)",
        "prefix": "SetPlayerTechMaxAllowed"
    },
    "GetPlayerTechMaxAllowed": {
        "body": "GetPlayerTechMaxAllowed(${1:whichPlayer}, ${2:techid})",
        "description": "GetPlayerTechMaxAllowed (player whichPlayer, integer techid)",
        "prefix": "GetPlayerTechMaxAllowed"
    },
    "AddPlayerTechResearched": {
        "body": "AddPlayerTechResearched(${1:whichPlayer}, ${2:techid}, ${3:levels})",
        "description": "AddPlayerTechResearched (player whichPlayer, integer techid, integer levels)",
        "prefix": "AddPlayerTechResearched"
    },
    "SetPlayerTechResearched": {
        "body": "SetPlayerTechResearched(${1:whichPlayer}, ${2:techid}, ${3:setToLevel})",
        "description": "SetPlayerTechResearched (player whichPlayer, integer techid, integer setToLevel)",
        "prefix": "SetPlayerTechResearched"
    },
    "GetPlayerTechResearched": {
        "body": "GetPlayerTechResearched(${1:whichPlayer}, ${2:techid}, ${3:specificonly})",
        "description": "GetPlayerTechResearched (player whichPlayer, integer techid, boolean specificonly)",
        "prefix": "GetPlayerTechResearched"
    },
    "GetPlayerTechCount": {
        "body": "GetPlayerTechCount(${1:whichPlayer}, ${2:techid}, ${3:specificonly})",
        "description": "GetPlayerTechCount (player whichPlayer, integer techid, boolean specificonly)",
        "prefix": "GetPlayerTechCount"
    },
    "SetPlayerUnitsOwner": {
        "body": "SetPlayerUnitsOwner(${1:whichPlayer}, ${2:newOwner})",
        "description": "SetPlayerUnitsOwner (player whichPlayer, integer newOwner)",
        "prefix": "SetPlayerUnitsOwner"
    },
    "CripplePlayer": {
        "body": "CripplePlayer(${1:whichPlayer}, ${2:toWhichPlayers}, ${3:flag})",
        "description": "CripplePlayer (player whichPlayer, force toWhichPlayers, boolean flag)",
        "prefix": "CripplePlayer"
    },
    "SetPlayerAbilityAvailable": {
        "body": "SetPlayerAbilityAvailable(${1:whichPlayer}, ${2:abilid}, ${3:avail})",
        "description": "SetPlayerAbilityAvailable (player whichPlayer, integer abilid, boolean avail)",
        "prefix": "SetPlayerAbilityAvailable"
    },
    "SetPlayerState": {
        "body": "SetPlayerState(${1:whichPlayer}, ${2:whichPlayerState}, ${3:value})",
        "description": "SetPlayerState (player whichPlayer, playerstate whichPlayerState, integer value)",
        "prefix": "SetPlayerState"
    },
    "RemovePlayer": {
        "body": "RemovePlayer(${1:whichPlayer}, ${2:gameResult})",
        "description": "RemovePlayer (player whichPlayer, playergameresult gameResult)",
        "prefix": "RemovePlayer"
    },
    "CachePlayerHeroData": {
        "body": "CachePlayerHeroData(${1:whichPlayer})",
        "description": "CachePlayerHeroData (player whichPlayer)",
        "prefix": "CachePlayerHeroData"
    },
    "SetFogStateRect": {
        "body": "SetFogStateRect(${1:forWhichPlayer}, ${2:whichState}, ${3:where}, ${4:useSharedVision})",
        "description": "SetFogStateRect (player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision)",
        "prefix": "SetFogStateRect"
    },
    "SetFogStateRadius": {
        "body": "SetFogStateRadius(${1:forWhichPlayer}, ${2:whichState}, ${3:centerx}, ${4:centerY}, ${5:radius}, ${6:useSharedVision})",
        "description": "SetFogStateRadius (player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision)",
        "prefix": "SetFogStateRadius"
    },
    "SetFogStateRadiusLoc": {
        "body": "SetFogStateRadiusLoc(${1:forWhichPlayer}, ${2:whichState}, ${3:center}, ${4:radius}, ${5:useSharedVision})",
        "description": "SetFogStateRadiusLoc (player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision)",
        "prefix": "SetFogStateRadiusLoc"
    },
    "FogMaskEnable": {
        "body": "FogMaskEnable(${1:enable})",
        "description": "FogMaskEnable (boolean enable)",
        "prefix": "FogMaskEnable"
    },
    "IsFogMaskEnabled": {
        "body": "IsFogMaskEnabled()",
        "description": "IsFogMaskEnabled ()",
        "prefix": "IsFogMaskEnabled"
    },
    "FogEnable": {
        "body": "FogEnable(${1:enable})",
        "description": "FogEnable (boolean enable)",
        "prefix": "FogEnable"
    },
    "IsFogEnabled": {
        "body": "IsFogEnabled()",
        "description": "IsFogEnabled ()",
        "prefix": "IsFogEnabled"
    },
    "CreateFogModifierRect": {
        "body": "CreateFogModifierRect(${1:forWhichPlayer}, ${2:whichState}, ${3:where}, ${4:useSharedVision}, ${5:afterUnits})",
        "description": "CreateFogModifierRect (player forWhichPlayer, fogstate whichState, rect where, boolean useSharedVision, boolean afterUnits)",
        "prefix": "CreateFogModifierRect"
    },
    "CreateFogModifierRadius": {
        "body": "CreateFogModifierRadius(${1:forWhichPlayer}, ${2:whichState}, ${3:centerx}, ${4:centerY}, ${5:radius}, ${6:useSharedVision}, ${7:afterUnits})",
        "description": "CreateFogModifierRadius (player forWhichPlayer, fogstate whichState, real centerx, real centerY, real radius, boolean useSharedVision, boolean afterUnits)",
        "prefix": "CreateFogModifierRadius"
    },
    "CreateFogModifierRadiusLoc": {
        "body": "CreateFogModifierRadiusLoc(${1:forWhichPlayer}, ${2:whichState}, ${3:center}, ${4:radius}, ${5:useSharedVision}, ${6:afterUnits})",
        "description": "CreateFogModifierRadiusLoc (player forWhichPlayer, fogstate whichState, location center, real radius, boolean useSharedVision, boolean afterUnits)",
        "prefix": "CreateFogModifierRadiusLoc"
    },
    "DestroyFogModifier": {
        "body": "DestroyFogModifier(${1:whichFogModifier})",
        "description": "DestroyFogModifier (fogmodifier whichFogModifier)",
        "prefix": "DestroyFogModifier"
    },
    "FogModifierStart": {
        "body": "FogModifierStart(${1:whichFogModifier})",
        "description": "FogModifierStart (fogmodifier whichFogModifier)",
        "prefix": "FogModifierStart"
    },
    "FogModifierStop": {
        "body": "FogModifierStop(${1:whichFogModifier})",
        "description": "FogModifierStop (fogmodifier whichFogModifier)",
        "prefix": "FogModifierStop"
    },
    "VersionGet": {
        "body": "VersionGet()",
        "description": "VersionGet ()",
        "prefix": "VersionGet"
    },
    "VersionCompatible": {
        "body": "VersionCompatible(${1:whichVersion})",
        "description": "VersionCompatible (version whichVersion)",
        "prefix": "VersionCompatible"
    },
    "VersionSupported": {
        "body": "VersionSupported(${1:whichVersion})",
        "description": "VersionSupported (version whichVersion)",
        "prefix": "VersionSupported"
    },
    "EndGame": {
        "body": "EndGame(${1:doScoreScreen})",
        "description": "EndGame (boolean doScoreScreen)",
        "prefix": "EndGame"
    },
    "ChangeLevel": {
        "body": "ChangeLevel(${1:newLevel}, ${2:doScoreScreen})",
        "description": "ChangeLevel (string newLevel, boolean doScoreScreen)",
        "prefix": "ChangeLevel"
    },
    "RestartGame": {
        "body": "RestartGame(${1:doScoreScreen})",
        "description": "RestartGame (boolean doScoreScreen)",
        "prefix": "RestartGame"
    },
    "ReloadGame": {
        "body": "ReloadGame()",
        "description": "ReloadGame ()",
        "prefix": "ReloadGame"
    },
    "SetCampaignMenuRace": {
        "body": "SetCampaignMenuRace(${1:r})",
        "description": "SetCampaignMenuRace (race r)",
        "prefix": "SetCampaignMenuRace"
    },
    "SetCampaignMenuRaceEx": {
        "body": "SetCampaignMenuRaceEx(${1:campaignIndex})",
        "description": "SetCampaignMenuRaceEx (integer campaignIndex)",
        "prefix": "SetCampaignMenuRaceEx"
    },
    "ForceCampaignSelectScreen": {
        "body": "ForceCampaignSelectScreen()",
        "description": "ForceCampaignSelectScreen ()",
        "prefix": "ForceCampaignSelectScreen"
    },
    "LoadGame": {
        "body": "LoadGame(${1:saveFileName}, ${2:doScoreScreen})",
        "description": "LoadGame (string saveFileName, boolean doScoreScreen)",
        "prefix": "LoadGame"
    },
    "SaveGame": {
        "body": "SaveGame(${1:saveFileName})",
        "description": "SaveGame (string saveFileName)",
        "prefix": "SaveGame"
    },
    "RenameSaveDirectory": {
        "body": "RenameSaveDirectory(${1:sourceDirName}, ${2:destDirName})",
        "description": "RenameSaveDirectory (string sourceDirName, string destDirName)",
        "prefix": "RenameSaveDirectory"
    },
    "RemoveSaveDirectory": {
        "body": "RemoveSaveDirectory(${1:sourceDirName})",
        "description": "RemoveSaveDirectory (string sourceDirName)",
        "prefix": "RemoveSaveDirectory"
    },
    "CopySaveGame": {
        "body": "CopySaveGame(${1:sourceSaveName}, ${2:destSaveName})",
        "description": "CopySaveGame (string sourceSaveName, string destSaveName)",
        "prefix": "CopySaveGame"
    },
    "SaveGameExists": {
        "body": "SaveGameExists(${1:saveName})",
        "description": "SaveGameExists (string saveName)",
        "prefix": "SaveGameExists"
    },
    "SyncSelections": {
        "body": "SyncSelections()",
        "description": "SyncSelections ()",
        "prefix": "SyncSelections"
    },
    "SetFloatGameState": {
        "body": "SetFloatGameState(${1:whichFloatGameState}, ${2:value})",
        "description": "SetFloatGameState (fgamestate whichFloatGameState, real value)",
        "prefix": "SetFloatGameState"
    },
    "GetFloatGameState": {
        "body": "GetFloatGameState(${1:whichFloatGameState})",
        "description": "GetFloatGameState (fgamestate whichFloatGameState)",
        "prefix": "GetFloatGameState"
    },
    "SetIntegerGameState": {
        "body": "SetIntegerGameState(${1:whichIntegerGameState}, ${2:value})",
        "description": "SetIntegerGameState (igamestate whichIntegerGameState, integer value)",
        "prefix": "SetIntegerGameState"
    },
    "GetIntegerGameState": {
        "body": "GetIntegerGameState(${1:whichIntegerGameState})",
        "description": "GetIntegerGameState (igamestate whichIntegerGameState)",
        "prefix": "GetIntegerGameState"
    },
    "SetTutorialCleared": {
        "body": "SetTutorialCleared(${1:cleared})",
        "description": "SetTutorialCleared (boolean cleared)",
        "prefix": "SetTutorialCleared"
    },
    "SetMissionAvailable": {
        "body": "SetMissionAvailable(${1:campaignNumber}, ${2:missionNumber}, ${3:available})",
        "description": "SetMissionAvailable (integer campaignNumber, integer missionNumber, boolean available)",
        "prefix": "SetMissionAvailable"
    },
    "SetCampaignAvailable": {
        "body": "SetCampaignAvailable(${1:campaignNumber}, ${2:available})",
        "description": "SetCampaignAvailable (integer campaignNumber, boolean available)",
        "prefix": "SetCampaignAvailable"
    },
    "SetOpCinematicAvailable": {
        "body": "SetOpCinematicAvailable(${1:campaignNumber}, ${2:available})",
        "description": "SetOpCinematicAvailable (integer campaignNumber, boolean available)",
        "prefix": "SetOpCinematicAvailable"
    },
    "SetEdCinematicAvailable": {
        "body": "SetEdCinematicAvailable(${1:campaignNumber}, ${2:available})",
        "description": "SetEdCinematicAvailable (integer campaignNumber, boolean available)",
        "prefix": "SetEdCinematicAvailable"
    },
    "GetDefaultDifficulty": {
        "body": "GetDefaultDifficulty()",
        "description": "GetDefaultDifficulty ()",
        "prefix": "GetDefaultDifficulty"
    },
    "SetDefaultDifficulty": {
        "body": "SetDefaultDifficulty(${1:g})",
        "description": "SetDefaultDifficulty (gamedifficulty g)",
        "prefix": "SetDefaultDifficulty"
    },
    "SetCustomCampaignButtonVisible": {
        "body": "SetCustomCampaignButtonVisible(${1:whichButton}, ${2:visible})",
        "description": "SetCustomCampaignButtonVisible (integer whichButton, boolean visible)",
        "prefix": "SetCustomCampaignButtonVisible"
    },
    "GetCustomCampaignButtonVisible": {
        "body": "GetCustomCampaignButtonVisible(${1:whichButton})",
        "description": "GetCustomCampaignButtonVisible (integer whichButton)",
        "prefix": "GetCustomCampaignButtonVisible"
    },
    "DoNotSaveReplay": {
        "body": "DoNotSaveReplay()",
        "description": "DoNotSaveReplay ()",
        "prefix": "DoNotSaveReplay"
    },
    "DialogCreate": {
        "body": "DialogCreate()",
        "description": "DialogCreate ()",
        "prefix": "DialogCreate"
    },
    "DialogDestroy": {
        "body": "DialogDestroy(${1:whichDialog})",
        "description": "DialogDestroy (dialog whichDialog)",
        "prefix": "DialogDestroy"
    },
    "DialogClear": {
        "body": "DialogClear(${1:whichDialog})",
        "description": "DialogClear (dialog whichDialog)",
        "prefix": "DialogClear"
    },
    "DialogSetMessage": {
        "body": "DialogSetMessage(${1:whichDialog}, ${2:messageText})",
        "description": "DialogSetMessage (dialog whichDialog, string messageText)",
        "prefix": "DialogSetMessage"
    },
    "DialogAddButton": {
        "body": "DialogAddButton(${1:whichDialog}, ${2:buttonText}, ${3:hotkey})",
        "description": "DialogAddButton (dialog whichDialog, string buttonText, integer hotkey)",
        "prefix": "DialogAddButton"
    },
    "DialogAddQuitButton": {
        "body": "DialogAddQuitButton(${1:whichDialog}, ${2:doScoreScreen}, ${3:buttonText}, ${4:hotkey})",
        "description": "DialogAddQuitButton (dialog whichDialog, boolean doScoreScreen, string buttonText, integer hotkey)",
        "prefix": "DialogAddQuitButton"
    },
    "DialogDisplay": {
        "body": "DialogDisplay(${1:whichPlayer}, ${2:whichDialog}, ${3:flag})",
        "description": "DialogDisplay (player whichPlayer, dialog whichDialog, boolean flag)",
        "prefix": "DialogDisplay"
    },
    "ReloadGameCachesFromDisk": {
        "body": "ReloadGameCachesFromDisk()",
        "description": "ReloadGameCachesFromDisk ()",
        "prefix": "ReloadGameCachesFromDisk"
    },
    "InitGameCache": {
        "body": "InitGameCache(${1:campaignFile})",
        "description": "InitGameCache (string campaignFile)",
        "prefix": "InitGameCache"
    },
    "SaveGameCache": {
        "body": "SaveGameCache(${1:whichCache})",
        "description": "SaveGameCache (gamecache whichCache)",
        "prefix": "SaveGameCache"
    },
    "StoreInteger": {
        "body": "StoreInteger(${1:cache}, ${2:missionKey}, ${3:key}, ${4:value})",
        "description": "StoreInteger (gamecache cache, string missionKey, string key, integer value)",
        "prefix": "StoreInteger"
    },
    "StoreReal": {
        "body": "StoreReal(${1:cache}, ${2:missionKey}, ${3:key}, ${4:value})",
        "description": "StoreReal (gamecache cache, string missionKey, string key, real value)",
        "prefix": "StoreReal"
    },
    "StoreBoolean": {
        "body": "StoreBoolean(${1:cache}, ${2:missionKey}, ${3:key}, ${4:value})",
        "description": "StoreBoolean (gamecache cache, string missionKey, string key, boolean value)",
        "prefix": "StoreBoolean"
    },
    "StoreUnit": {
        "body": "StoreUnit(${1:cache}, ${2:missionKey}, ${3:key}, ${4:whichUnit})",
        "description": "StoreUnit (gamecache cache, string missionKey, string key, unit whichUnit)",
        "prefix": "StoreUnit"
    },
    "StoreString": {
        "body": "StoreString(${1:cache}, ${2:missionKey}, ${3:key}, ${4:value})",
        "description": "StoreString (gamecache cache, string missionKey, string key, string value)",
        "prefix": "StoreString"
    },
    "SyncStoredInteger": {
        "body": "SyncStoredInteger(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "SyncStoredInteger (gamecache cache, string missionKey, string key)",
        "prefix": "SyncStoredInteger"
    },
    "SyncStoredReal": {
        "body": "SyncStoredReal(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "SyncStoredReal (gamecache cache, string missionKey, string key)",
        "prefix": "SyncStoredReal"
    },
    "SyncStoredBoolean": {
        "body": "SyncStoredBoolean(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "SyncStoredBoolean (gamecache cache, string missionKey, string key)",
        "prefix": "SyncStoredBoolean"
    },
    "SyncStoredUnit": {
        "body": "SyncStoredUnit(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "SyncStoredUnit (gamecache cache, string missionKey, string key)",
        "prefix": "SyncStoredUnit"
    },
    "SyncStoredString": {
        "body": "SyncStoredString(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "SyncStoredString (gamecache cache, string missionKey, string key)",
        "prefix": "SyncStoredString"
    },
    "HaveStoredInteger": {
        "body": "HaveStoredInteger(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "HaveStoredInteger (gamecache cache, string missionKey, string key)",
        "prefix": "HaveStoredInteger"
    },
    "HaveStoredReal": {
        "body": "HaveStoredReal(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "HaveStoredReal (gamecache cache, string missionKey, string key)",
        "prefix": "HaveStoredReal"
    },
    "HaveStoredBoolean": {
        "body": "HaveStoredBoolean(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "HaveStoredBoolean (gamecache cache, string missionKey, string key)",
        "prefix": "HaveStoredBoolean"
    },
    "HaveStoredUnit": {
        "body": "HaveStoredUnit(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "HaveStoredUnit (gamecache cache, string missionKey, string key)",
        "prefix": "HaveStoredUnit"
    },
    "HaveStoredString": {
        "body": "HaveStoredString(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "HaveStoredString (gamecache cache, string missionKey, string key)",
        "prefix": "HaveStoredString"
    },
    "FlushGameCache": {
        "body": "FlushGameCache(${1:cache})",
        "description": "FlushGameCache (gamecache cache)",
        "prefix": "FlushGameCache"
    },
    "FlushStoredMission": {
        "body": "FlushStoredMission(${1:cache}, ${2:missionKey})",
        "description": "FlushStoredMission (gamecache cache, string missionKey)",
        "prefix": "FlushStoredMission"
    },
    "FlushStoredInteger": {
        "body": "FlushStoredInteger(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "FlushStoredInteger (gamecache cache, string missionKey, string key)",
        "prefix": "FlushStoredInteger"
    },
    "FlushStoredReal": {
        "body": "FlushStoredReal(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "FlushStoredReal (gamecache cache, string missionKey, string key)",
        "prefix": "FlushStoredReal"
    },
    "FlushStoredBoolean": {
        "body": "FlushStoredBoolean(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "FlushStoredBoolean (gamecache cache, string missionKey, string key)",
        "prefix": "FlushStoredBoolean"
    },
    "FlushStoredUnit": {
        "body": "FlushStoredUnit(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "FlushStoredUnit (gamecache cache, string missionKey, string key)",
        "prefix": "FlushStoredUnit"
    },
    "FlushStoredString": {
        "body": "FlushStoredString(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "FlushStoredString (gamecache cache, string missionKey, string key)",
        "prefix": "FlushStoredString"
    },
    "GetStoredInteger": {
        "body": "GetStoredInteger(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "GetStoredInteger (gamecache cache, string missionKey, string key)",
        "prefix": "GetStoredInteger"
    },
    "GetStoredReal": {
        "body": "GetStoredReal(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "GetStoredReal (gamecache cache, string missionKey, string key)",
        "prefix": "GetStoredReal"
    },
    "GetStoredBoolean": {
        "body": "GetStoredBoolean(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "GetStoredBoolean (gamecache cache, string missionKey, string key)",
        "prefix": "GetStoredBoolean"
    },
    "GetStoredString": {
        "body": "GetStoredString(${1:cache}, ${2:missionKey}, ${3:key})",
        "description": "GetStoredString (gamecache cache, string missionKey, string key)",
        "prefix": "GetStoredString"
    },
    "RestoreUnit": {
        "body": "RestoreUnit(${1:cache}, ${2:missionKey}, ${3:key}, ${4:forWhichPlayer}, ${5:x}, ${6:y}, ${7:facing})",
        "description": "RestoreUnit (gamecache cache, string missionKey, string key, player forWhichPlayer, real x, real y, real facing)",
        "prefix": "RestoreUnit"
    },
    "InitHashtable": {
        "body": "InitHashtable()",
        "description": "InitHashtable ()",
        "prefix": "InitHashtable"
    },
    "SaveInteger": {
        "body": "SaveInteger(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:value})",
        "description": "SaveInteger (hashtable table, integer parentKey, integer childKey, integer value)",
        "prefix": "SaveInteger"
    },
    "SaveReal": {
        "body": "SaveReal(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:value})",
        "description": "SaveReal (hashtable table, integer parentKey, integer childKey, real value)",
        "prefix": "SaveReal"
    },
    "SaveBoolean": {
        "body": "SaveBoolean(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:value})",
        "description": "SaveBoolean (hashtable table, integer parentKey, integer childKey, boolean value)",
        "prefix": "SaveBoolean"
    },
    "SaveStr": {
        "body": "SaveStr(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:value})",
        "description": "SaveStr (hashtable table, integer parentKey, integer childKey, string value)",
        "prefix": "SaveStr"
    },
    "SavePlayerHandle": {
        "body": "SavePlayerHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichPlayer})",
        "description": "SavePlayerHandle (hashtable table, integer parentKey, integer childKey, player whichPlayer)",
        "prefix": "SavePlayerHandle"
    },
    "SaveWidgetHandle": {
        "body": "SaveWidgetHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichWidget})",
        "description": "SaveWidgetHandle (hashtable table, integer parentKey, integer childKey, widget whichWidget)",
        "prefix": "SaveWidgetHandle"
    },
    "SaveDestructableHandle": {
        "body": "SaveDestructableHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichDestructable})",
        "description": "SaveDestructableHandle (hashtable table, integer parentKey, integer childKey, destructable whichDestructable)",
        "prefix": "SaveDestructableHandle"
    },
    "SaveItemHandle": {
        "body": "SaveItemHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichItem})",
        "description": "SaveItemHandle (hashtable table, integer parentKey, integer childKey, item whichItem)",
        "prefix": "SaveItemHandle"
    },
    "SaveUnitHandle": {
        "body": "SaveUnitHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichUnit})",
        "description": "SaveUnitHandle (hashtable table, integer parentKey, integer childKey, unit whichUnit)",
        "prefix": "SaveUnitHandle"
    },
    "SaveAbilityHandle": {
        "body": "SaveAbilityHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichAbility})",
        "description": "SaveAbilityHandle (hashtable table, integer parentKey, integer childKey, ability whichAbility)",
        "prefix": "SaveAbilityHandle"
    },
    "SaveTimerHandle": {
        "body": "SaveTimerHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTimer})",
        "description": "SaveTimerHandle (hashtable table, integer parentKey, integer childKey, timer whichTimer)",
        "prefix": "SaveTimerHandle"
    },
    "SaveTriggerHandle": {
        "body": "SaveTriggerHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTrigger})",
        "description": "SaveTriggerHandle (hashtable table, integer parentKey, integer childKey, trigger whichTrigger)",
        "prefix": "SaveTriggerHandle"
    },
    "SaveTriggerConditionHandle": {
        "body": "SaveTriggerConditionHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTriggercondition})",
        "description": "SaveTriggerConditionHandle (hashtable table, integer parentKey, integer childKey, triggercondition whichTriggercondition)",
        "prefix": "SaveTriggerConditionHandle"
    },
    "SaveTriggerActionHandle": {
        "body": "SaveTriggerActionHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTriggeraction})",
        "description": "SaveTriggerActionHandle (hashtable table, integer parentKey, integer childKey, triggeraction whichTriggeraction)",
        "prefix": "SaveTriggerActionHandle"
    },
    "SaveTriggerEventHandle": {
        "body": "SaveTriggerEventHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichEvent})",
        "description": "SaveTriggerEventHandle (hashtable table, integer parentKey, integer childKey, event whichEvent)",
        "prefix": "SaveTriggerEventHandle"
    },
    "SaveForceHandle": {
        "body": "SaveForceHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichForce})",
        "description": "SaveForceHandle (hashtable table, integer parentKey, integer childKey, force whichForce)",
        "prefix": "SaveForceHandle"
    },
    "SaveGroupHandle": {
        "body": "SaveGroupHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichGroup})",
        "description": "SaveGroupHandle (hashtable table, integer parentKey, integer childKey, group whichGroup)",
        "prefix": "SaveGroupHandle"
    },
    "SaveLocationHandle": {
        "body": "SaveLocationHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichLocation})",
        "description": "SaveLocationHandle (hashtable table, integer parentKey, integer childKey, location whichLocation)",
        "prefix": "SaveLocationHandle"
    },
    "SaveRectHandle": {
        "body": "SaveRectHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichRect})",
        "description": "SaveRectHandle (hashtable table, integer parentKey, integer childKey, rect whichRect)",
        "prefix": "SaveRectHandle"
    },
    "SaveBooleanExprHandle": {
        "body": "SaveBooleanExprHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichBoolexpr})",
        "description": "SaveBooleanExprHandle (hashtable table, integer parentKey, integer childKey, boolexpr whichBoolexpr)",
        "prefix": "SaveBooleanExprHandle"
    },
    "SaveSoundHandle": {
        "body": "SaveSoundHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichSound})",
        "description": "SaveSoundHandle (hashtable table, integer parentKey, integer childKey, sound whichSound)",
        "prefix": "SaveSoundHandle"
    },
    "SaveEffectHandle": {
        "body": "SaveEffectHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichEffect})",
        "description": "SaveEffectHandle (hashtable table, integer parentKey, integer childKey, effect whichEffect)",
        "prefix": "SaveEffectHandle"
    },
    "SaveUnitPoolHandle": {
        "body": "SaveUnitPoolHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichUnitpool})",
        "description": "SaveUnitPoolHandle (hashtable table, integer parentKey, integer childKey, unitpool whichUnitpool)",
        "prefix": "SaveUnitPoolHandle"
    },
    "SaveItemPoolHandle": {
        "body": "SaveItemPoolHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichItempool})",
        "description": "SaveItemPoolHandle (hashtable table, integer parentKey, integer childKey, itempool whichItempool)",
        "prefix": "SaveItemPoolHandle"
    },
    "SaveQuestHandle": {
        "body": "SaveQuestHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichQuest})",
        "description": "SaveQuestHandle (hashtable table, integer parentKey, integer childKey, quest whichQuest)",
        "prefix": "SaveQuestHandle"
    },
    "SaveQuestItemHandle": {
        "body": "SaveQuestItemHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichQuestitem})",
        "description": "SaveQuestItemHandle (hashtable table, integer parentKey, integer childKey, questitem whichQuestitem)",
        "prefix": "SaveQuestItemHandle"
    },
    "SaveDefeatConditionHandle": {
        "body": "SaveDefeatConditionHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichDefeatcondition})",
        "description": "SaveDefeatConditionHandle (hashtable table, integer parentKey, integer childKey, defeatcondition whichDefeatcondition)",
        "prefix": "SaveDefeatConditionHandle"
    },
    "SaveTimerDialogHandle": {
        "body": "SaveTimerDialogHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTimerdialog})",
        "description": "SaveTimerDialogHandle (hashtable table, integer parentKey, integer childKey, timerdialog whichTimerdialog)",
        "prefix": "SaveTimerDialogHandle"
    },
    "SaveLeaderboardHandle": {
        "body": "SaveLeaderboardHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichLeaderboard})",
        "description": "SaveLeaderboardHandle (hashtable table, integer parentKey, integer childKey, leaderboard whichLeaderboard)",
        "prefix": "SaveLeaderboardHandle"
    },
    "SaveMultiboardHandle": {
        "body": "SaveMultiboardHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichMultiboard})",
        "description": "SaveMultiboardHandle (hashtable table, integer parentKey, integer childKey, multiboard whichMultiboard)",
        "prefix": "SaveMultiboardHandle"
    },
    "SaveMultiboardItemHandle": {
        "body": "SaveMultiboardItemHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichMultiboarditem})",
        "description": "SaveMultiboardItemHandle (hashtable table, integer parentKey, integer childKey, multiboarditem whichMultiboarditem)",
        "prefix": "SaveMultiboardItemHandle"
    },
    "SaveTrackableHandle": {
        "body": "SaveTrackableHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTrackable})",
        "description": "SaveTrackableHandle (hashtable table, integer parentKey, integer childKey, trackable whichTrackable)",
        "prefix": "SaveTrackableHandle"
    },
    "SaveDialogHandle": {
        "body": "SaveDialogHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichDialog})",
        "description": "SaveDialogHandle (hashtable table, integer parentKey, integer childKey, dialog whichDialog)",
        "prefix": "SaveDialogHandle"
    },
    "SaveButtonHandle": {
        "body": "SaveButtonHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichButton})",
        "description": "SaveButtonHandle (hashtable table, integer parentKey, integer childKey, button whichButton)",
        "prefix": "SaveButtonHandle"
    },
    "SaveTextTagHandle": {
        "body": "SaveTextTagHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichTexttag})",
        "description": "SaveTextTagHandle (hashtable table, integer parentKey, integer childKey, texttag whichTexttag)",
        "prefix": "SaveTextTagHandle"
    },
    "SaveLightningHandle": {
        "body": "SaveLightningHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichLightning})",
        "description": "SaveLightningHandle (hashtable table, integer parentKey, integer childKey, lightning whichLightning)",
        "prefix": "SaveLightningHandle"
    },
    "SaveImageHandle": {
        "body": "SaveImageHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichImage})",
        "description": "SaveImageHandle (hashtable table, integer parentKey, integer childKey, image whichImage)",
        "prefix": "SaveImageHandle"
    },
    "SaveUbersplatHandle": {
        "body": "SaveUbersplatHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichUbersplat})",
        "description": "SaveUbersplatHandle (hashtable table, integer parentKey, integer childKey, ubersplat whichUbersplat)",
        "prefix": "SaveUbersplatHandle"
    },
    "SaveRegionHandle": {
        "body": "SaveRegionHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichRegion})",
        "description": "SaveRegionHandle (hashtable table, integer parentKey, integer childKey, region whichRegion)",
        "prefix": "SaveRegionHandle"
    },
    "SaveFogStateHandle": {
        "body": "SaveFogStateHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichFogState})",
        "description": "SaveFogStateHandle (hashtable table, integer parentKey, integer childKey, fogstate whichFogState)",
        "prefix": "SaveFogStateHandle"
    },
    "SaveFogModifierHandle": {
        "body": "SaveFogModifierHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichFogModifier})",
        "description": "SaveFogModifierHandle (hashtable table, integer parentKey, integer childKey, fogmodifier whichFogModifier)",
        "prefix": "SaveFogModifierHandle"
    },
    "SaveAgentHandle": {
        "body": "SaveAgentHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichAgent})",
        "description": "SaveAgentHandle (hashtable table, integer parentKey, integer childKey, agent whichAgent)",
        "prefix": "SaveAgentHandle"
    },
    "SaveHashtableHandle": {
        "body": "SaveHashtableHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichHashtable})",
        "description": "SaveHashtableHandle (hashtable table, integer parentKey, integer childKey, hashtable whichHashtable)",
        "prefix": "SaveHashtableHandle"
    },
    "SaveFrameHandle": {
        "body": "SaveFrameHandle(${1:table}, ${2:parentKey}, ${3:childKey}, ${4:whichFrameHandle})",
        "description": "SaveFrameHandle (hashtable table, integer parentKey, integer childKey, framehandle whichFrameHandle)",
        "prefix": "SaveFrameHandle"
    },
    "LoadInteger": {
        "body": "LoadInteger(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadInteger (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadInteger"
    },
    "LoadReal": {
        "body": "LoadReal(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadReal (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadReal"
    },
    "LoadBoolean": {
        "body": "LoadBoolean(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadBoolean (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadBoolean"
    },
    "LoadStr": {
        "body": "LoadStr(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadStr (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadStr"
    },
    "LoadPlayerHandle": {
        "body": "LoadPlayerHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadPlayerHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadPlayerHandle"
    },
    "LoadWidgetHandle": {
        "body": "LoadWidgetHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadWidgetHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadWidgetHandle"
    },
    "LoadDestructableHandle": {
        "body": "LoadDestructableHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadDestructableHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadDestructableHandle"
    },
    "LoadItemHandle": {
        "body": "LoadItemHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadItemHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadItemHandle"
    },
    "LoadUnitHandle": {
        "body": "LoadUnitHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadUnitHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadUnitHandle"
    },
    "LoadAbilityHandle": {
        "body": "LoadAbilityHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadAbilityHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadAbilityHandle"
    },
    "LoadTimerHandle": {
        "body": "LoadTimerHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTimerHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTimerHandle"
    },
    "LoadTriggerHandle": {
        "body": "LoadTriggerHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTriggerHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTriggerHandle"
    },
    "LoadTriggerConditionHandle": {
        "body": "LoadTriggerConditionHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTriggerConditionHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTriggerConditionHandle"
    },
    "LoadTriggerActionHandle": {
        "body": "LoadTriggerActionHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTriggerActionHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTriggerActionHandle"
    },
    "LoadTriggerEventHandle": {
        "body": "LoadTriggerEventHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTriggerEventHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTriggerEventHandle"
    },
    "LoadForceHandle": {
        "body": "LoadForceHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadForceHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadForceHandle"
    },
    "LoadGroupHandle": {
        "body": "LoadGroupHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadGroupHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadGroupHandle"
    },
    "LoadLocationHandle": {
        "body": "LoadLocationHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadLocationHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadLocationHandle"
    },
    "LoadRectHandle": {
        "body": "LoadRectHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadRectHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadRectHandle"
    },
    "LoadBooleanExprHandle": {
        "body": "LoadBooleanExprHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadBooleanExprHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadBooleanExprHandle"
    },
    "LoadSoundHandle": {
        "body": "LoadSoundHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadSoundHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadSoundHandle"
    },
    "LoadEffectHandle": {
        "body": "LoadEffectHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadEffectHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadEffectHandle"
    },
    "LoadUnitPoolHandle": {
        "body": "LoadUnitPoolHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadUnitPoolHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadUnitPoolHandle"
    },
    "LoadItemPoolHandle": {
        "body": "LoadItemPoolHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadItemPoolHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadItemPoolHandle"
    },
    "LoadQuestHandle": {
        "body": "LoadQuestHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadQuestHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadQuestHandle"
    },
    "LoadQuestItemHandle": {
        "body": "LoadQuestItemHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadQuestItemHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadQuestItemHandle"
    },
    "LoadDefeatConditionHandle": {
        "body": "LoadDefeatConditionHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadDefeatConditionHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadDefeatConditionHandle"
    },
    "LoadTimerDialogHandle": {
        "body": "LoadTimerDialogHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTimerDialogHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTimerDialogHandle"
    },
    "LoadLeaderboardHandle": {
        "body": "LoadLeaderboardHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadLeaderboardHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadLeaderboardHandle"
    },
    "LoadMultiboardHandle": {
        "body": "LoadMultiboardHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadMultiboardHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadMultiboardHandle"
    },
    "LoadMultiboardItemHandle": {
        "body": "LoadMultiboardItemHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadMultiboardItemHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadMultiboardItemHandle"
    },
    "LoadTrackableHandle": {
        "body": "LoadTrackableHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTrackableHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTrackableHandle"
    },
    "LoadDialogHandle": {
        "body": "LoadDialogHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadDialogHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadDialogHandle"
    },
    "LoadButtonHandle": {
        "body": "LoadButtonHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadButtonHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadButtonHandle"
    },
    "LoadTextTagHandle": {
        "body": "LoadTextTagHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadTextTagHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadTextTagHandle"
    },
    "LoadLightningHandle": {
        "body": "LoadLightningHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadLightningHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadLightningHandle"
    },
    "LoadImageHandle": {
        "body": "LoadImageHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadImageHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadImageHandle"
    },
    "LoadUbersplatHandle": {
        "body": "LoadUbersplatHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadUbersplatHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadUbersplatHandle"
    },
    "LoadRegionHandle": {
        "body": "LoadRegionHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadRegionHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadRegionHandle"
    },
    "LoadFogStateHandle": {
        "body": "LoadFogStateHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadFogStateHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadFogStateHandle"
    },
    "LoadFogModifierHandle": {
        "body": "LoadFogModifierHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadFogModifierHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadFogModifierHandle"
    },
    "LoadHashtableHandle": {
        "body": "LoadHashtableHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadHashtableHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadHashtableHandle"
    },
    "LoadFrameHandle": {
        "body": "LoadFrameHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "LoadFrameHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "LoadFrameHandle"
    },
    "HaveSavedInteger": {
        "body": "HaveSavedInteger(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "HaveSavedInteger (hashtable table, integer parentKey, integer childKey)",
        "prefix": "HaveSavedInteger"
    },
    "HaveSavedReal": {
        "body": "HaveSavedReal(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "HaveSavedReal (hashtable table, integer parentKey, integer childKey)",
        "prefix": "HaveSavedReal"
    },
    "HaveSavedBoolean": {
        "body": "HaveSavedBoolean(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "HaveSavedBoolean (hashtable table, integer parentKey, integer childKey)",
        "prefix": "HaveSavedBoolean"
    },
    "HaveSavedString": {
        "body": "HaveSavedString(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "HaveSavedString (hashtable table, integer parentKey, integer childKey)",
        "prefix": "HaveSavedString"
    },
    "HaveSavedHandle": {
        "body": "HaveSavedHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "HaveSavedHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "HaveSavedHandle"
    },
    "RemoveSavedInteger": {
        "body": "RemoveSavedInteger(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "RemoveSavedInteger (hashtable table, integer parentKey, integer childKey)",
        "prefix": "RemoveSavedInteger"
    },
    "RemoveSavedReal": {
        "body": "RemoveSavedReal(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "RemoveSavedReal (hashtable table, integer parentKey, integer childKey)",
        "prefix": "RemoveSavedReal"
    },
    "RemoveSavedBoolean": {
        "body": "RemoveSavedBoolean(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "RemoveSavedBoolean (hashtable table, integer parentKey, integer childKey)",
        "prefix": "RemoveSavedBoolean"
    },
    "RemoveSavedString": {
        "body": "RemoveSavedString(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "RemoveSavedString (hashtable table, integer parentKey, integer childKey)",
        "prefix": "RemoveSavedString"
    },
    "RemoveSavedHandle": {
        "body": "RemoveSavedHandle(${1:table}, ${2:parentKey}, ${3:childKey})",
        "description": "RemoveSavedHandle (hashtable table, integer parentKey, integer childKey)",
        "prefix": "RemoveSavedHandle"
    },
    "FlushParentHashtable": {
        "body": "FlushParentHashtable(${1:table})",
        "description": "FlushParentHashtable (hashtable table)",
        "prefix": "FlushParentHashtable"
    },
    "FlushChildHashtable": {
        "body": "FlushChildHashtable(${1:table}, ${2:parentKey})",
        "description": "FlushChildHashtable (hashtable table, integer parentKey)",
        "prefix": "FlushChildHashtable"
    },
    "GetRandomInt": {
        "body": "GetRandomInt(${1:lowBound}, ${2:highBound})",
        "description": "GetRandomInt (integer lowBound, integer highBound)",
        "prefix": "GetRandomInt"
    },
    "GetRandomReal": {
        "body": "GetRandomReal(${1:lowBound}, ${2:highBound})",
        "description": "GetRandomReal (real lowBound, real highBound)",
        "prefix": "GetRandomReal"
    },
    "CreateUnitPool": {
        "body": "CreateUnitPool()",
        "description": "CreateUnitPool ()",
        "prefix": "CreateUnitPool"
    },
    "DestroyUnitPool": {
        "body": "DestroyUnitPool(${1:whichPool})",
        "description": "DestroyUnitPool (unitpool whichPool)",
        "prefix": "DestroyUnitPool"
    },
    "UnitPoolAddUnitType": {
        "body": "UnitPoolAddUnitType(${1:whichPool}, ${2:unitId}, ${3:weight})",
        "description": "UnitPoolAddUnitType (unitpool whichPool, integer unitId, real weight)",
        "prefix": "UnitPoolAddUnitType"
    },
    "UnitPoolRemoveUnitType": {
        "body": "UnitPoolRemoveUnitType(${1:whichPool}, ${2:unitId})",
        "description": "UnitPoolRemoveUnitType (unitpool whichPool, integer unitId)",
        "prefix": "UnitPoolRemoveUnitType"
    },
    "PlaceRandomUnit": {
        "body": "PlaceRandomUnit(${1:whichPool}, ${2:forWhichPlayer}, ${3:x}, ${4:y}, ${5:facing})",
        "description": "PlaceRandomUnit (unitpool whichPool, player forWhichPlayer, real x, real y, real facing)",
        "prefix": "PlaceRandomUnit"
    },
    "CreateItemPool": {
        "body": "CreateItemPool()",
        "description": "CreateItemPool ()",
        "prefix": "CreateItemPool"
    },
    "DestroyItemPool": {
        "body": "DestroyItemPool(${1:whichItemPool})",
        "description": "DestroyItemPool (itempool whichItemPool)",
        "prefix": "DestroyItemPool"
    },
    "ItemPoolAddItemType": {
        "body": "ItemPoolAddItemType(${1:whichItemPool}, ${2:itemId}, ${3:weight})",
        "description": "ItemPoolAddItemType (itempool whichItemPool, integer itemId, real weight)",
        "prefix": "ItemPoolAddItemType"
    },
    "ItemPoolRemoveItemType": {
        "body": "ItemPoolRemoveItemType(${1:whichItemPool}, ${2:itemId})",
        "description": "ItemPoolRemoveItemType (itempool whichItemPool, integer itemId)",
        "prefix": "ItemPoolRemoveItemType"
    },
    "PlaceRandomItem": {
        "body": "PlaceRandomItem(${1:whichItemPool}, ${2:x}, ${3:y})",
        "description": "PlaceRandomItem (itempool whichItemPool, real x, real y)",
        "prefix": "PlaceRandomItem"
    },
    "ChooseRandomCreep": {
        "body": "ChooseRandomCreep(${1:level})",
        "description": "ChooseRandomCreep (integer level)",
        "prefix": "ChooseRandomCreep"
    },
    "ChooseRandomNPBuilding": {
        "body": "ChooseRandomNPBuilding()",
        "description": "ChooseRandomNPBuilding ()",
        "prefix": "ChooseRandomNPBuilding"
    },
    "ChooseRandomItem": {
        "body": "ChooseRandomItem(${1:level})",
        "description": "ChooseRandomItem (integer level)",
        "prefix": "ChooseRandomItem"
    },
    "ChooseRandomItemEx": {
        "body": "ChooseRandomItemEx(${1:whichType}, ${2:level})",
        "description": "ChooseRandomItemEx (itemtype whichType, integer level)",
        "prefix": "ChooseRandomItemEx"
    },
    "SetRandomSeed": {
        "body": "SetRandomSeed(${1:seed})",
        "description": "SetRandomSeed (integer seed)",
        "prefix": "SetRandomSeed"
    },
    "SetTerrainFog": {
        "body": "SetTerrainFog(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:e})",
        "description": "SetTerrainFog (real a, real b, real c, real d, real e)",
        "prefix": "SetTerrainFog"
    },
    "ResetTerrainFog": {
        "body": "ResetTerrainFog()",
        "description": "ResetTerrainFog ()",
        "prefix": "ResetTerrainFog"
    },
    "SetUnitFog": {
        "body": "SetUnitFog(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:e})",
        "description": "SetUnitFog (real a, real b, real c, real d, real e)",
        "prefix": "SetUnitFog"
    },
    "SetTerrainFogEx": {
        "body": "SetTerrainFogEx(${1:style}, ${2:zstart}, ${3:zend}, ${4:density}, ${5:red}, ${6:green}, ${7:blue})",
        "description": "SetTerrainFogEx (integer style, real zstart, real zend, real density, real red, real green, real blue)",
        "prefix": "SetTerrainFogEx"
    },
    "DisplayTextToPlayer": {
        "body": "DisplayTextToPlayer(${1:toPlayer}, ${2:x}, ${3:y}, ${4:message})",
        "description": "DisplayTextToPlayer (player toPlayer, real x, real y, string message)",
        "prefix": "DisplayTextToPlayer"
    },
    "DisplayTimedTextToPlayer": {
        "body": "DisplayTimedTextToPlayer(${1:toPlayer}, ${2:x}, ${3:y}, ${4:duration}, ${5:message})",
        "description": "DisplayTimedTextToPlayer (player toPlayer, real x, real y, real duration, string message)",
        "prefix": "DisplayTimedTextToPlayer"
    },
    "DisplayTimedTextFromPlayer": {
        "body": "DisplayTimedTextFromPlayer(${1:toPlayer}, ${2:x}, ${3:y}, ${4:duration}, ${5:message})",
        "description": "DisplayTimedTextFromPlayer (player toPlayer, real x, real y, real duration, string message)",
        "prefix": "DisplayTimedTextFromPlayer"
    },
    "ClearTextMessages": {
        "body": "ClearTextMessages()",
        "description": "ClearTextMessages ()",
        "prefix": "ClearTextMessages"
    },
    "SetDayNightModels": {
        "body": "SetDayNightModels(${1:terrainDNCFile}, ${2:unitDNCFile})",
        "description": "SetDayNightModels (string terrainDNCFile, string unitDNCFile)",
        "prefix": "SetDayNightModels"
    },
    "SetSkyModel": {
        "body": "SetSkyModel(${1:skyModelFile})",
        "description": "SetSkyModel (string skyModelFile)",
        "prefix": "SetSkyModel"
    },
    "EnableUserControl": {
        "body": "EnableUserControl(${1:b})",
        "description": "EnableUserControl (boolean b)",
        "prefix": "EnableUserControl"
    },
    "EnableUserUI": {
        "body": "EnableUserUI(${1:b})",
        "description": "EnableUserUI (boolean b)",
        "prefix": "EnableUserUI"
    },
    "SuspendTimeOfDay": {
        "body": "SuspendTimeOfDay(${1:b})",
        "description": "SuspendTimeOfDay (boolean b)",
        "prefix": "SuspendTimeOfDay"
    },
    "SetTimeOfDayScale": {
        "body": "SetTimeOfDayScale(${1:r})",
        "description": "SetTimeOfDayScale (real r)",
        "prefix": "SetTimeOfDayScale"
    },
    "GetTimeOfDayScale": {
        "body": "GetTimeOfDayScale()",
        "description": "GetTimeOfDayScale ()",
        "prefix": "GetTimeOfDayScale"
    },
    "ShowInterface": {
        "body": "ShowInterface(${1:flag}, ${2:fadeDuration})",
        "description": "ShowInterface (boolean flag, real fadeDuration)",
        "prefix": "ShowInterface"
    },
    "PauseGame": {
        "body": "PauseGame(${1:flag})",
        "description": "PauseGame (boolean flag)",
        "prefix": "PauseGame"
    },
    "UnitAddIndicator": {
        "body": "UnitAddIndicator(${1:whichUnit}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "UnitAddIndicator (unit whichUnit, integer red, integer green, integer blue, integer alpha)",
        "prefix": "UnitAddIndicator"
    },
    "AddIndicator": {
        "body": "AddIndicator(${1:whichWidget}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "AddIndicator (widget whichWidget, integer red, integer green, integer blue, integer alpha)",
        "prefix": "AddIndicator"
    },
    "PingMinimap": {
        "body": "PingMinimap(${1:x}, ${2:y}, ${3:duration})",
        "description": "PingMinimap (real x, real y, real duration)",
        "prefix": "PingMinimap"
    },
    "PingMinimapEx": {
        "body": "PingMinimapEx(${1:x}, ${2:y}, ${3:duration}, ${4:red}, ${5:green}, ${6:blue}, ${7:extraEffects})",
        "description": "PingMinimapEx (real x, real y, real duration, integer red, integer green, integer blue, boolean extraEffects)",
        "prefix": "PingMinimapEx"
    },
    "EnableOcclusion": {
        "body": "EnableOcclusion(${1:flag})",
        "description": "EnableOcclusion (boolean flag)",
        "prefix": "EnableOcclusion"
    },
    "SetIntroShotText": {
        "body": "SetIntroShotText(${1:introText})",
        "description": "SetIntroShotText (string introText)",
        "prefix": "SetIntroShotText"
    },
    "SetIntroShotModel": {
        "body": "SetIntroShotModel(${1:introModelPath})",
        "description": "SetIntroShotModel (string introModelPath)",
        "prefix": "SetIntroShotModel"
    },
    "EnableWorldFogBoundary": {
        "body": "EnableWorldFogBoundary(${1:b})",
        "description": "EnableWorldFogBoundary (boolean b)",
        "prefix": "EnableWorldFogBoundary"
    },
    "PlayModelCinematic": {
        "body": "PlayModelCinematic(${1:modelName})",
        "description": "PlayModelCinematic (string modelName)",
        "prefix": "PlayModelCinematic"
    },
    "PlayCinematic": {
        "body": "PlayCinematic(${1:movieName})",
        "description": "PlayCinematic (string movieName)",
        "prefix": "PlayCinematic"
    },
    "ForceUIKey": {
        "body": "ForceUIKey(${1:key})",
        "description": "ForceUIKey (string key)",
        "prefix": "ForceUIKey"
    },
    "ForceUICancel": {
        "body": "ForceUICancel()",
        "description": "ForceUICancel ()",
        "prefix": "ForceUICancel"
    },
    "DisplayLoadDialog": {
        "body": "DisplayLoadDialog()",
        "description": "DisplayLoadDialog ()",
        "prefix": "DisplayLoadDialog"
    },
    "SetAltMinimapIcon": {
        "body": "SetAltMinimapIcon(${1:iconPath})",
        "description": "SetAltMinimapIcon (string iconPath)",
        "prefix": "SetAltMinimapIcon"
    },
    "DisableRestartMission": {
        "body": "DisableRestartMission(${1:flag})",
        "description": "DisableRestartMission (boolean flag)",
        "prefix": "DisableRestartMission"
    },
    "CreateTextTag": {
        "body": "CreateTextTag()",
        "description": "CreateTextTag ()",
        "prefix": "CreateTextTag"
    },
    "DestroyTextTag": {
        "body": "DestroyTextTag(${1:t})",
        "description": "DestroyTextTag (texttag t)",
        "prefix": "DestroyTextTag"
    },
    "SetTextTagText": {
        "body": "SetTextTagText(${1:t}, ${2:s}, ${3:height})",
        "description": "SetTextTagText (texttag t, string s, real height)",
        "prefix": "SetTextTagText"
    },
    "SetTextTagPos": {
        "body": "SetTextTagPos(${1:t}, ${2:x}, ${3:y}, ${4:heightOffset})",
        "description": "SetTextTagPos (texttag t, real x, real y, real heightOffset)",
        "prefix": "SetTextTagPos"
    },
    "SetTextTagPosUnit": {
        "body": "SetTextTagPosUnit(${1:t}, ${2:whichUnit}, ${3:heightOffset})",
        "description": "SetTextTagPosUnit (texttag t, unit whichUnit, real heightOffset)",
        "prefix": "SetTextTagPosUnit"
    },
    "SetTextTagColor": {
        "body": "SetTextTagColor(${1:t}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "SetTextTagColor (texttag t, integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetTextTagColor"
    },
    "SetTextTagVelocity": {
        "body": "SetTextTagVelocity(${1:t}, ${2:xvel}, ${3:yvel})",
        "description": "SetTextTagVelocity (texttag t, real xvel, real yvel)",
        "prefix": "SetTextTagVelocity"
    },
    "SetTextTagVisibility": {
        "body": "SetTextTagVisibility(${1:t}, ${2:flag})",
        "description": "SetTextTagVisibility (texttag t, boolean flag)",
        "prefix": "SetTextTagVisibility"
    },
    "SetTextTagSuspended": {
        "body": "SetTextTagSuspended(${1:t}, ${2:flag})",
        "description": "SetTextTagSuspended (texttag t, boolean flag)",
        "prefix": "SetTextTagSuspended"
    },
    "SetTextTagPermanent": {
        "body": "SetTextTagPermanent(${1:t}, ${2:flag})",
        "description": "SetTextTagPermanent (texttag t, boolean flag)",
        "prefix": "SetTextTagPermanent"
    },
    "SetTextTagAge": {
        "body": "SetTextTagAge(${1:t}, ${2:age})",
        "description": "SetTextTagAge (texttag t, real age)",
        "prefix": "SetTextTagAge"
    },
    "SetTextTagLifespan": {
        "body": "SetTextTagLifespan(${1:t}, ${2:lifespan})",
        "description": "SetTextTagLifespan (texttag t, real lifespan)",
        "prefix": "SetTextTagLifespan"
    },
    "SetTextTagFadepoint": {
        "body": "SetTextTagFadepoint(${1:t}, ${2:fadepoint})",
        "description": "SetTextTagFadepoint (texttag t, real fadepoint)",
        "prefix": "SetTextTagFadepoint"
    },
    "SetReservedLocalHeroButtons": {
        "body": "SetReservedLocalHeroButtons(${1:reserved})",
        "description": "SetReservedLocalHeroButtons (integer reserved)",
        "prefix": "SetReservedLocalHeroButtons"
    },
    "GetAllyColorFilterState": {
        "body": "GetAllyColorFilterState()",
        "description": "GetAllyColorFilterState ()",
        "prefix": "GetAllyColorFilterState"
    },
    "SetAllyColorFilterState": {
        "body": "SetAllyColorFilterState(${1:state})",
        "description": "SetAllyColorFilterState (integer state)",
        "prefix": "SetAllyColorFilterState"
    },
    "GetCreepCampFilterState": {
        "body": "GetCreepCampFilterState()",
        "description": "GetCreepCampFilterState ()",
        "prefix": "GetCreepCampFilterState"
    },
    "SetCreepCampFilterState": {
        "body": "SetCreepCampFilterState(${1:state})",
        "description": "SetCreepCampFilterState (boolean state)",
        "prefix": "SetCreepCampFilterState"
    },
    "EnableMinimapFilterButtons": {
        "body": "EnableMinimapFilterButtons(${1:enableAlly}, ${2:enableCreep})",
        "description": "EnableMinimapFilterButtons (boolean enableAlly, boolean enableCreep)",
        "prefix": "EnableMinimapFilterButtons"
    },
    "EnableDragSelect": {
        "body": "EnableDragSelect(${1:state}, ${2:ui})",
        "description": "EnableDragSelect (boolean state, boolean ui)",
        "prefix": "EnableDragSelect"
    },
    "EnablePreSelect": {
        "body": "EnablePreSelect(${1:state}, ${2:ui})",
        "description": "EnablePreSelect (boolean state, boolean ui)",
        "prefix": "EnablePreSelect"
    },
    "EnableSelect": {
        "body": "EnableSelect(${1:state}, ${2:ui})",
        "description": "EnableSelect (boolean state, boolean ui)",
        "prefix": "EnableSelect"
    },
    "CreateTrackable": {
        "body": "CreateTrackable(${1:trackableModelPath}, ${2:x}, ${3:y}, ${4:facing})",
        "description": "CreateTrackable (string trackableModelPath, real x, real y, real facing)",
        "prefix": "CreateTrackable"
    },
    "CreateQuest": {
        "body": "CreateQuest()",
        "description": "CreateQuest ()",
        "prefix": "CreateQuest"
    },
    "DestroyQuest": {
        "body": "DestroyQuest(${1:whichQuest})",
        "description": "DestroyQuest (quest whichQuest)",
        "prefix": "DestroyQuest"
    },
    "QuestSetTitle": {
        "body": "QuestSetTitle(${1:whichQuest}, ${2:title})",
        "description": "QuestSetTitle (quest whichQuest, string title)",
        "prefix": "QuestSetTitle"
    },
    "QuestSetDescription": {
        "body": "QuestSetDescription(${1:whichQuest}, ${2:description})",
        "description": "QuestSetDescription (quest whichQuest, string description)",
        "prefix": "QuestSetDescription"
    },
    "QuestSetIconPath": {
        "body": "QuestSetIconPath(${1:whichQuest}, ${2:iconPath})",
        "description": "QuestSetIconPath (quest whichQuest, string iconPath)",
        "prefix": "QuestSetIconPath"
    },
    "QuestSetRequired": {
        "body": "QuestSetRequired(${1:whichQuest}, ${2:required})",
        "description": "QuestSetRequired (quest whichQuest, boolean required)",
        "prefix": "QuestSetRequired"
    },
    "QuestSetCompleted": {
        "body": "QuestSetCompleted(${1:whichQuest}, ${2:completed})",
        "description": "QuestSetCompleted (quest whichQuest, boolean completed)",
        "prefix": "QuestSetCompleted"
    },
    "QuestSetDiscovered": {
        "body": "QuestSetDiscovered(${1:whichQuest}, ${2:discovered})",
        "description": "QuestSetDiscovered (quest whichQuest, boolean discovered)",
        "prefix": "QuestSetDiscovered"
    },
    "QuestSetFailed": {
        "body": "QuestSetFailed(${1:whichQuest}, ${2:failed})",
        "description": "QuestSetFailed (quest whichQuest, boolean failed)",
        "prefix": "QuestSetFailed"
    },
    "QuestSetEnabled": {
        "body": "QuestSetEnabled(${1:whichQuest}, ${2:enabled})",
        "description": "QuestSetEnabled (quest whichQuest, boolean enabled)",
        "prefix": "QuestSetEnabled"
    },
    "IsQuestRequired": {
        "body": "IsQuestRequired(${1:whichQuest})",
        "description": "IsQuestRequired (quest whichQuest)",
        "prefix": "IsQuestRequired"
    },
    "IsQuestCompleted": {
        "body": "IsQuestCompleted(${1:whichQuest})",
        "description": "IsQuestCompleted (quest whichQuest)",
        "prefix": "IsQuestCompleted"
    },
    "IsQuestDiscovered": {
        "body": "IsQuestDiscovered(${1:whichQuest})",
        "description": "IsQuestDiscovered (quest whichQuest)",
        "prefix": "IsQuestDiscovered"
    },
    "IsQuestFailed": {
        "body": "IsQuestFailed(${1:whichQuest})",
        "description": "IsQuestFailed (quest whichQuest)",
        "prefix": "IsQuestFailed"
    },
    "IsQuestEnabled": {
        "body": "IsQuestEnabled(${1:whichQuest})",
        "description": "IsQuestEnabled (quest whichQuest)",
        "prefix": "IsQuestEnabled"
    },
    "QuestCreateItem": {
        "body": "QuestCreateItem(${1:whichQuest})",
        "description": "QuestCreateItem (quest whichQuest)",
        "prefix": "QuestCreateItem"
    },
    "QuestItemSetDescription": {
        "body": "QuestItemSetDescription(${1:whichQuestItem}, ${2:description})",
        "description": "QuestItemSetDescription (questitem whichQuestItem, string description)",
        "prefix": "QuestItemSetDescription"
    },
    "QuestItemSetCompleted": {
        "body": "QuestItemSetCompleted(${1:whichQuestItem}, ${2:completed})",
        "description": "QuestItemSetCompleted (questitem whichQuestItem, boolean completed)",
        "prefix": "QuestItemSetCompleted"
    },
    "IsQuestItemCompleted": {
        "body": "IsQuestItemCompleted(${1:whichQuestItem})",
        "description": "IsQuestItemCompleted (questitem whichQuestItem)",
        "prefix": "IsQuestItemCompleted"
    },
    "CreateDefeatCondition": {
        "body": "CreateDefeatCondition()",
        "description": "CreateDefeatCondition ()",
        "prefix": "CreateDefeatCondition"
    },
    "DestroyDefeatCondition": {
        "body": "DestroyDefeatCondition(${1:whichCondition})",
        "description": "DestroyDefeatCondition (defeatcondition whichCondition)",
        "prefix": "DestroyDefeatCondition"
    },
    "DefeatConditionSetDescription": {
        "body": "DefeatConditionSetDescription(${1:whichCondition}, ${2:description})",
        "description": "DefeatConditionSetDescription (defeatcondition whichCondition, string description)",
        "prefix": "DefeatConditionSetDescription"
    },
    "FlashQuestDialogButton": {
        "body": "FlashQuestDialogButton()",
        "description": "FlashQuestDialogButton ()",
        "prefix": "FlashQuestDialogButton"
    },
    "ForceQuestDialogUpdate": {
        "body": "ForceQuestDialogUpdate()",
        "description": "ForceQuestDialogUpdate ()",
        "prefix": "ForceQuestDialogUpdate"
    },
    "CreateTimerDialog": {
        "body": "CreateTimerDialog(${1:t})",
        "description": "CreateTimerDialog (timer t)",
        "prefix": "CreateTimerDialog"
    },
    "DestroyTimerDialog": {
        "body": "DestroyTimerDialog(${1:whichDialog})",
        "description": "DestroyTimerDialog (timerdialog whichDialog)",
        "prefix": "DestroyTimerDialog"
    },
    "TimerDialogSetTitle": {
        "body": "TimerDialogSetTitle(${1:whichDialog}, ${2:title})",
        "description": "TimerDialogSetTitle (timerdialog whichDialog, string title)",
        "prefix": "TimerDialogSetTitle"
    },
    "TimerDialogSetTitleColor": {
        "body": "TimerDialogSetTitleColor(${1:whichDialog}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "TimerDialogSetTitleColor (timerdialog whichDialog, integer red, integer green, integer blue, integer alpha)",
        "prefix": "TimerDialogSetTitleColor"
    },
    "TimerDialogSetTimeColor": {
        "body": "TimerDialogSetTimeColor(${1:whichDialog}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "TimerDialogSetTimeColor (timerdialog whichDialog, integer red, integer green, integer blue, integer alpha)",
        "prefix": "TimerDialogSetTimeColor"
    },
    "TimerDialogSetSpeed": {
        "body": "TimerDialogSetSpeed(${1:whichDialog}, ${2:speedMultFactor})",
        "description": "TimerDialogSetSpeed (timerdialog whichDialog, real speedMultFactor)",
        "prefix": "TimerDialogSetSpeed"
    },
    "TimerDialogDisplay": {
        "body": "TimerDialogDisplay(${1:whichDialog}, ${2:display})",
        "description": "TimerDialogDisplay (timerdialog whichDialog, boolean display)",
        "prefix": "TimerDialogDisplay"
    },
    "IsTimerDialogDisplayed": {
        "body": "IsTimerDialogDisplayed(${1:whichDialog})",
        "description": "IsTimerDialogDisplayed (timerdialog whichDialog)",
        "prefix": "IsTimerDialogDisplayed"
    },
    "TimerDialogSetRealTimeRemaining": {
        "body": "TimerDialogSetRealTimeRemaining(${1:whichDialog}, ${2:timeRemaining})",
        "description": "TimerDialogSetRealTimeRemaining (timerdialog whichDialog, real timeRemaining)",
        "prefix": "TimerDialogSetRealTimeRemaining"
    },
    "CreateLeaderboard": {
        "body": "CreateLeaderboard()",
        "description": "CreateLeaderboard ()",
        "prefix": "CreateLeaderboard"
    },
    "DestroyLeaderboard": {
        "body": "DestroyLeaderboard(${1:lb})",
        "description": "DestroyLeaderboard (leaderboard lb)",
        "prefix": "DestroyLeaderboard"
    },
    "LeaderboardDisplay": {
        "body": "LeaderboardDisplay(${1:lb}, ${2:show})",
        "description": "LeaderboardDisplay (leaderboard lb, boolean show)",
        "prefix": "LeaderboardDisplay"
    },
    "IsLeaderboardDisplayed": {
        "body": "IsLeaderboardDisplayed(${1:lb})",
        "description": "IsLeaderboardDisplayed (leaderboard lb)",
        "prefix": "IsLeaderboardDisplayed"
    },
    "LeaderboardGetItemCount": {
        "body": "LeaderboardGetItemCount(${1:lb})",
        "description": "LeaderboardGetItemCount (leaderboard lb)",
        "prefix": "LeaderboardGetItemCount"
    },
    "LeaderboardSetSizeByItemCount": {
        "body": "LeaderboardSetSizeByItemCount(${1:lb}, ${2:count})",
        "description": "LeaderboardSetSizeByItemCount (leaderboard lb, integer count)",
        "prefix": "LeaderboardSetSizeByItemCount"
    },
    "LeaderboardAddItem": {
        "body": "LeaderboardAddItem(${1:lb}, ${2:label}, ${3:value}, ${4:p})",
        "description": "LeaderboardAddItem (leaderboard lb, string label, integer value, player p)",
        "prefix": "LeaderboardAddItem"
    },
    "LeaderboardRemoveItem": {
        "body": "LeaderboardRemoveItem(${1:lb}, ${2:index})",
        "description": "LeaderboardRemoveItem (leaderboard lb, integer index)",
        "prefix": "LeaderboardRemoveItem"
    },
    "LeaderboardRemovePlayerItem": {
        "body": "LeaderboardRemovePlayerItem(${1:lb}, ${2:p})",
        "description": "LeaderboardRemovePlayerItem (leaderboard lb, player p)",
        "prefix": "LeaderboardRemovePlayerItem"
    },
    "LeaderboardClear": {
        "body": "LeaderboardClear(${1:lb})",
        "description": "LeaderboardClear (leaderboard lb)",
        "prefix": "LeaderboardClear"
    },
    "LeaderboardSortItemsByValue": {
        "body": "LeaderboardSortItemsByValue(${1:lb}, ${2:ascending})",
        "description": "LeaderboardSortItemsByValue (leaderboard lb, boolean ascending)",
        "prefix": "LeaderboardSortItemsByValue"
    },
    "LeaderboardSortItemsByPlayer": {
        "body": "LeaderboardSortItemsByPlayer(${1:lb}, ${2:ascending})",
        "description": "LeaderboardSortItemsByPlayer (leaderboard lb, boolean ascending)",
        "prefix": "LeaderboardSortItemsByPlayer"
    },
    "LeaderboardSortItemsByLabel": {
        "body": "LeaderboardSortItemsByLabel(${1:lb}, ${2:ascending})",
        "description": "LeaderboardSortItemsByLabel (leaderboard lb, boolean ascending)",
        "prefix": "LeaderboardSortItemsByLabel"
    },
    "LeaderboardHasPlayerItem": {
        "body": "LeaderboardHasPlayerItem(${1:lb}, ${2:p})",
        "description": "LeaderboardHasPlayerItem (leaderboard lb, player p)",
        "prefix": "LeaderboardHasPlayerItem"
    },
    "LeaderboardGetPlayerIndex": {
        "body": "LeaderboardGetPlayerIndex(${1:lb}, ${2:p})",
        "description": "LeaderboardGetPlayerIndex (leaderboard lb, player p)",
        "prefix": "LeaderboardGetPlayerIndex"
    },
    "LeaderboardSetLabel": {
        "body": "LeaderboardSetLabel(${1:lb}, ${2:label})",
        "description": "LeaderboardSetLabel (leaderboard lb, string label)",
        "prefix": "LeaderboardSetLabel"
    },
    "LeaderboardGetLabelText": {
        "body": "LeaderboardGetLabelText(${1:lb})",
        "description": "LeaderboardGetLabelText (leaderboard lb)",
        "prefix": "LeaderboardGetLabelText"
    },
    "PlayerSetLeaderboard": {
        "body": "PlayerSetLeaderboard(${1:toPlayer}, ${2:lb})",
        "description": "PlayerSetLeaderboard (player toPlayer, leaderboard lb)",
        "prefix": "PlayerSetLeaderboard"
    },
    "PlayerGetLeaderboard": {
        "body": "PlayerGetLeaderboard(${1:toPlayer})",
        "description": "PlayerGetLeaderboard (player toPlayer)",
        "prefix": "PlayerGetLeaderboard"
    },
    "LeaderboardSetLabelColor": {
        "body": "LeaderboardSetLabelColor(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "LeaderboardSetLabelColor (leaderboard lb, integer red, integer green, integer blue, integer alpha)",
        "prefix": "LeaderboardSetLabelColor"
    },
    "LeaderboardSetValueColor": {
        "body": "LeaderboardSetValueColor(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "LeaderboardSetValueColor (leaderboard lb, integer red, integer green, integer blue, integer alpha)",
        "prefix": "LeaderboardSetValueColor"
    },
    "LeaderboardSetStyle": {
        "body": "LeaderboardSetStyle(${1:lb}, ${2:showLabel}, ${3:showNames}, ${4:showValues}, ${5:showIcons})",
        "description": "LeaderboardSetStyle (leaderboard lb, boolean showLabel, boolean showNames, boolean showValues, boolean showIcons)",
        "prefix": "LeaderboardSetStyle"
    },
    "LeaderboardSetItemValue": {
        "body": "LeaderboardSetItemValue(${1:lb}, ${2:whichItem}, ${3:val})",
        "description": "LeaderboardSetItemValue (leaderboard lb, integer whichItem, integer val)",
        "prefix": "LeaderboardSetItemValue"
    },
    "LeaderboardSetItemLabel": {
        "body": "LeaderboardSetItemLabel(${1:lb}, ${2:whichItem}, ${3:val})",
        "description": "LeaderboardSetItemLabel (leaderboard lb, integer whichItem, string val)",
        "prefix": "LeaderboardSetItemLabel"
    },
    "LeaderboardSetItemStyle": {
        "body": "LeaderboardSetItemStyle(${1:lb}, ${2:whichItem}, ${3:showLabel}, ${4:showValue}, ${5:showIcon})",
        "description": "LeaderboardSetItemStyle (leaderboard lb, integer whichItem, boolean showLabel, boolean showValue, boolean showIcon)",
        "prefix": "LeaderboardSetItemStyle"
    },
    "LeaderboardSetItemLabelColor": {
        "body": "LeaderboardSetItemLabelColor(${1:lb}, ${2:whichItem}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha})",
        "description": "LeaderboardSetItemLabelColor (leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha)",
        "prefix": "LeaderboardSetItemLabelColor"
    },
    "LeaderboardSetItemValueColor": {
        "body": "LeaderboardSetItemValueColor(${1:lb}, ${2:whichItem}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha})",
        "description": "LeaderboardSetItemValueColor (leaderboard lb, integer whichItem, integer red, integer green, integer blue, integer alpha)",
        "prefix": "LeaderboardSetItemValueColor"
    },
    "CreateMultiboard": {
        "body": "CreateMultiboard()",
        "description": "CreateMultiboard ()",
        "prefix": "CreateMultiboard"
    },
    "DestroyMultiboard": {
        "body": "DestroyMultiboard(${1:lb})",
        "description": "DestroyMultiboard (multiboard lb)",
        "prefix": "DestroyMultiboard"
    },
    "MultiboardDisplay": {
        "body": "MultiboardDisplay(${1:lb}, ${2:show})",
        "description": "MultiboardDisplay (multiboard lb, boolean show)",
        "prefix": "MultiboardDisplay"
    },
    "IsMultiboardDisplayed": {
        "body": "IsMultiboardDisplayed(${1:lb})",
        "description": "IsMultiboardDisplayed (multiboard lb)",
        "prefix": "IsMultiboardDisplayed"
    },
    "MultiboardMinimize": {
        "body": "MultiboardMinimize(${1:lb}, ${2:minimize})",
        "description": "MultiboardMinimize (multiboard lb, boolean minimize)",
        "prefix": "MultiboardMinimize"
    },
    "IsMultiboardMinimized": {
        "body": "IsMultiboardMinimized(${1:lb})",
        "description": "IsMultiboardMinimized (multiboard lb)",
        "prefix": "IsMultiboardMinimized"
    },
    "MultiboardClear": {
        "body": "MultiboardClear(${1:lb})",
        "description": "MultiboardClear (multiboard lb)",
        "prefix": "MultiboardClear"
    },
    "MultiboardSetTitleText": {
        "body": "MultiboardSetTitleText(${1:lb}, ${2:label})",
        "description": "MultiboardSetTitleText (multiboard lb, string label)",
        "prefix": "MultiboardSetTitleText"
    },
    "MultiboardGetTitleText": {
        "body": "MultiboardGetTitleText(${1:lb})",
        "description": "MultiboardGetTitleText (multiboard lb)",
        "prefix": "MultiboardGetTitleText"
    },
    "MultiboardSetTitleTextColor": {
        "body": "MultiboardSetTitleTextColor(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "MultiboardSetTitleTextColor (multiboard lb, integer red, integer green, integer blue, integer alpha)",
        "prefix": "MultiboardSetTitleTextColor"
    },
    "MultiboardGetRowCount": {
        "body": "MultiboardGetRowCount(${1:lb})",
        "description": "MultiboardGetRowCount (multiboard lb)",
        "prefix": "MultiboardGetRowCount"
    },
    "MultiboardGetColumnCount": {
        "body": "MultiboardGetColumnCount(${1:lb})",
        "description": "MultiboardGetColumnCount (multiboard lb)",
        "prefix": "MultiboardGetColumnCount"
    },
    "MultiboardSetColumnCount": {
        "body": "MultiboardSetColumnCount(${1:lb}, ${2:count})",
        "description": "MultiboardSetColumnCount (multiboard lb, integer count)",
        "prefix": "MultiboardSetColumnCount"
    },
    "MultiboardSetRowCount": {
        "body": "MultiboardSetRowCount(${1:lb}, ${2:count})",
        "description": "MultiboardSetRowCount (multiboard lb, integer count)",
        "prefix": "MultiboardSetRowCount"
    },
    "MultiboardSetItemsStyle": {
        "body": "MultiboardSetItemsStyle(${1:lb}, ${2:showValues}, ${3:showIcons})",
        "description": "MultiboardSetItemsStyle (multiboard lb, boolean showValues, boolean showIcons)",
        "prefix": "MultiboardSetItemsStyle"
    },
    "MultiboardSetItemsValue": {
        "body": "MultiboardSetItemsValue(${1:lb}, ${2:value})",
        "description": "MultiboardSetItemsValue (multiboard lb, string value)",
        "prefix": "MultiboardSetItemsValue"
    },
    "MultiboardSetItemsValueColor": {
        "body": "MultiboardSetItemsValueColor(${1:lb}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "MultiboardSetItemsValueColor (multiboard lb, integer red, integer green, integer blue, integer alpha)",
        "prefix": "MultiboardSetItemsValueColor"
    },
    "MultiboardSetItemsWidth": {
        "body": "MultiboardSetItemsWidth(${1:lb}, ${2:width})",
        "description": "MultiboardSetItemsWidth (multiboard lb, real width)",
        "prefix": "MultiboardSetItemsWidth"
    },
    "MultiboardSetItemsIcon": {
        "body": "MultiboardSetItemsIcon(${1:lb}, ${2:iconPath})",
        "description": "MultiboardSetItemsIcon (multiboard lb, string iconPath)",
        "prefix": "MultiboardSetItemsIcon"
    },
    "MultiboardGetItem": {
        "body": "MultiboardGetItem(${1:lb}, ${2:row}, ${3:column})",
        "description": "MultiboardGetItem (multiboard lb, integer row, integer column)",
        "prefix": "MultiboardGetItem"
    },
    "MultiboardReleaseItem": {
        "body": "MultiboardReleaseItem(${1:mbi})",
        "description": "MultiboardReleaseItem (multiboarditem mbi)",
        "prefix": "MultiboardReleaseItem"
    },
    "MultiboardSetItemStyle": {
        "body": "MultiboardSetItemStyle(${1:mbi}, ${2:showValue}, ${3:showIcon})",
        "description": "MultiboardSetItemStyle (multiboarditem mbi, boolean showValue, boolean showIcon)",
        "prefix": "MultiboardSetItemStyle"
    },
    "MultiboardSetItemValue": {
        "body": "MultiboardSetItemValue(${1:mbi}, ${2:val})",
        "description": "MultiboardSetItemValue (multiboarditem mbi, string val)",
        "prefix": "MultiboardSetItemValue"
    },
    "MultiboardSetItemValueColor": {
        "body": "MultiboardSetItemValueColor(${1:mbi}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "MultiboardSetItemValueColor (multiboarditem mbi, integer red, integer green, integer blue, integer alpha)",
        "prefix": "MultiboardSetItemValueColor"
    },
    "MultiboardSetItemWidth": {
        "body": "MultiboardSetItemWidth(${1:mbi}, ${2:width})",
        "description": "MultiboardSetItemWidth (multiboarditem mbi, real width)",
        "prefix": "MultiboardSetItemWidth"
    },
    "MultiboardSetItemIcon": {
        "body": "MultiboardSetItemIcon(${1:mbi}, ${2:iconFileName})",
        "description": "MultiboardSetItemIcon (multiboarditem mbi, string iconFileName)",
        "prefix": "MultiboardSetItemIcon"
    },
    "MultiboardSuppressDisplay": {
        "body": "MultiboardSuppressDisplay(${1:flag})",
        "description": "MultiboardSuppressDisplay (boolean flag)",
        "prefix": "MultiboardSuppressDisplay"
    },
    "SetCameraPosition": {
        "body": "SetCameraPosition(${1:x}, ${2:y})",
        "description": "SetCameraPosition (real x, real y)",
        "prefix": "SetCameraPosition"
    },
    "SetCameraQuickPosition": {
        "body": "SetCameraQuickPosition(${1:x}, ${2:y})",
        "description": "SetCameraQuickPosition (real x, real y)",
        "prefix": "SetCameraQuickPosition"
    },
    "SetCameraBounds": {
        "body": "SetCameraBounds(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${8:y4})",
        "description": "SetCameraBounds (real x1, real y1, real x2, real y2, real x3, real y3, real x4, real y4)",
        "prefix": "SetCameraBounds"
    },
    "StopCamera": {
        "body": "StopCamera()",
        "description": "StopCamera ()",
        "prefix": "StopCamera"
    },
    "ResetToGameCamera": {
        "body": "ResetToGameCamera(${1:duration})",
        "description": "ResetToGameCamera (real duration)",
        "prefix": "ResetToGameCamera"
    },
    "PanCameraTo": {
        "body": "PanCameraTo(${1:x}, ${2:y})",
        "description": "PanCameraTo (real x, real y)",
        "prefix": "PanCameraTo"
    },
    "PanCameraToTimed": {
        "body": "PanCameraToTimed(${1:x}, ${2:y}, ${3:duration})",
        "description": "PanCameraToTimed (real x, real y, real duration)",
        "prefix": "PanCameraToTimed"
    },
    "PanCameraToWithZ": {
        "body": "PanCameraToWithZ(${1:x}, ${2:y}, ${3:zOffsetDest})",
        "description": "PanCameraToWithZ (real x, real y, real zOffsetDest)",
        "prefix": "PanCameraToWithZ"
    },
    "PanCameraToTimedWithZ": {
        "body": "PanCameraToTimedWithZ(${1:x}, ${2:y}, ${3:zOffsetDest}, ${4:duration})",
        "description": "PanCameraToTimedWithZ (real x, real y, real zOffsetDest, real duration)",
        "prefix": "PanCameraToTimedWithZ"
    },
    "SetCinematicCamera": {
        "body": "SetCinematicCamera(${1:cameraModelFile})",
        "description": "SetCinematicCamera (string cameraModelFile)",
        "prefix": "SetCinematicCamera"
    },
    "SetCameraRotateMode": {
        "body": "SetCameraRotateMode(${1:x}, ${2:y}, ${3:radiansToSweep}, ${4:duration})",
        "description": "SetCameraRotateMode (real x, real y, real radiansToSweep, real duration)",
        "prefix": "SetCameraRotateMode"
    },
    "SetCameraField": {
        "body": "SetCameraField(${1:whichField}, ${2:value}, ${3:duration})",
        "description": "SetCameraField (camerafield whichField, real value, real duration)",
        "prefix": "SetCameraField"
    },
    "AdjustCameraField": {
        "body": "AdjustCameraField(${1:whichField}, ${2:offset}, ${3:duration})",
        "description": "AdjustCameraField (camerafield whichField, real offset, real duration)",
        "prefix": "AdjustCameraField"
    },
    "SetCameraTargetController": {
        "body": "SetCameraTargetController(${1:whichUnit}, ${2:xoffset}, ${3:yoffset}, ${4:inheritOrientation})",
        "description": "SetCameraTargetController (unit whichUnit, real xoffset, real yoffset, boolean inheritOrientation)",
        "prefix": "SetCameraTargetController"
    },
    "SetCameraOrientController": {
        "body": "SetCameraOrientController(${1:whichUnit}, ${2:xoffset}, ${3:yoffset})",
        "description": "SetCameraOrientController (unit whichUnit, real xoffset, real yoffset)",
        "prefix": "SetCameraOrientController"
    },
    "CreateCameraSetup": {
        "body": "CreateCameraSetup()",
        "description": "CreateCameraSetup ()",
        "prefix": "CreateCameraSetup"
    },
    "CameraSetupSetField": {
        "body": "CameraSetupSetField(${1:whichSetup}, ${2:whichField}, ${3:value}, ${4:duration})",
        "description": "CameraSetupSetField (camerasetup whichSetup, camerafield whichField, real value, real duration)",
        "prefix": "CameraSetupSetField"
    },
    "CameraSetupGetField": {
        "body": "CameraSetupGetField(${1:whichSetup}, ${2:whichField})",
        "description": "CameraSetupGetField (camerasetup whichSetup, camerafield whichField)",
        "prefix": "CameraSetupGetField"
    },
    "CameraSetupSetDestPosition": {
        "body": "CameraSetupSetDestPosition(${1:whichSetup}, ${2:x}, ${3:y}, ${4:duration})",
        "description": "CameraSetupSetDestPosition (camerasetup whichSetup, real x, real y, real duration)",
        "prefix": "CameraSetupSetDestPosition"
    },
    "CameraSetupGetDestPositionLoc": {
        "body": "CameraSetupGetDestPositionLoc(${1:whichSetup})",
        "description": "CameraSetupGetDestPositionLoc (camerasetup whichSetup)",
        "prefix": "CameraSetupGetDestPositionLoc"
    },
    "CameraSetupGetDestPositionX": {
        "body": "CameraSetupGetDestPositionX(${1:whichSetup})",
        "description": "CameraSetupGetDestPositionX (camerasetup whichSetup)",
        "prefix": "CameraSetupGetDestPositionX"
    },
    "CameraSetupGetDestPositionY": {
        "body": "CameraSetupGetDestPositionY(${1:whichSetup})",
        "description": "CameraSetupGetDestPositionY (camerasetup whichSetup)",
        "prefix": "CameraSetupGetDestPositionY"
    },
    "CameraSetupApply": {
        "body": "CameraSetupApply(${1:whichSetup}, ${2:doPan}, ${3:panTimed})",
        "description": "CameraSetupApply (camerasetup whichSetup, boolean doPan, boolean panTimed)",
        "prefix": "CameraSetupApply"
    },
    "CameraSetupApplyWithZ": {
        "body": "CameraSetupApplyWithZ(${1:whichSetup}, ${2:zDestOffset})",
        "description": "CameraSetupApplyWithZ (camerasetup whichSetup, real zDestOffset)",
        "prefix": "CameraSetupApplyWithZ"
    },
    "CameraSetupApplyForceDuration": {
        "body": "CameraSetupApplyForceDuration(${1:whichSetup}, ${2:doPan}, ${3:forceDuration})",
        "description": "CameraSetupApplyForceDuration (camerasetup whichSetup, boolean doPan, real forceDuration)",
        "prefix": "CameraSetupApplyForceDuration"
    },
    "CameraSetupApplyForceDurationWithZ": {
        "body": "CameraSetupApplyForceDurationWithZ(${1:whichSetup}, ${2:zDestOffset}, ${3:forceDuration})",
        "description": "CameraSetupApplyForceDurationWithZ (camerasetup whichSetup, real zDestOffset, real forceDuration)",
        "prefix": "CameraSetupApplyForceDurationWithZ"
    },
    "CameraSetTargetNoise": {
        "body": "CameraSetTargetNoise(${1:mag}, ${2:velocity})",
        "description": "CameraSetTargetNoise (real mag, real velocity)",
        "prefix": "CameraSetTargetNoise"
    },
    "CameraSetSourceNoise": {
        "body": "CameraSetSourceNoise(${1:mag}, ${2:velocity})",
        "description": "CameraSetSourceNoise (real mag, real velocity)",
        "prefix": "CameraSetSourceNoise"
    },
    "CameraSetTargetNoiseEx": {
        "body": "CameraSetTargetNoiseEx(${1:mag}, ${2:velocity}, ${3:vertOnly})",
        "description": "CameraSetTargetNoiseEx (real mag, real velocity, boolean vertOnly)",
        "prefix": "CameraSetTargetNoiseEx"
    },
    "CameraSetSourceNoiseEx": {
        "body": "CameraSetSourceNoiseEx(${1:mag}, ${2:velocity}, ${3:vertOnly})",
        "description": "CameraSetSourceNoiseEx (real mag, real velocity, boolean vertOnly)",
        "prefix": "CameraSetSourceNoiseEx"
    },
    "CameraSetSmoothingFactor": {
        "body": "CameraSetSmoothingFactor(${1:factor})",
        "description": "CameraSetSmoothingFactor (real factor)",
        "prefix": "CameraSetSmoothingFactor"
    },
    "SetCineFilterTexture": {
        "body": "SetCineFilterTexture(${1:filename})",
        "description": "SetCineFilterTexture (string filename)",
        "prefix": "SetCineFilterTexture"
    },
    "SetCineFilterBlendMode": {
        "body": "SetCineFilterBlendMode(${1:whichMode})",
        "description": "SetCineFilterBlendMode (blendmode whichMode)",
        "prefix": "SetCineFilterBlendMode"
    },
    "SetCineFilterTexMapFlags": {
        "body": "SetCineFilterTexMapFlags(${1:whichFlags})",
        "description": "SetCineFilterTexMapFlags (texmapflags whichFlags)",
        "prefix": "SetCineFilterTexMapFlags"
    },
    "SetCineFilterStartUV": {
        "body": "SetCineFilterStartUV(${1:minu}, ${2:minv}, ${3:maxu}, ${4:maxv})",
        "description": "SetCineFilterStartUV (real minu, real minv, real maxu, real maxv)",
        "prefix": "SetCineFilterStartUV"
    },
    "SetCineFilterEndUV": {
        "body": "SetCineFilterEndUV(${1:minu}, ${2:minv}, ${3:maxu}, ${4:maxv})",
        "description": "SetCineFilterEndUV (real minu, real minv, real maxu, real maxv)",
        "prefix": "SetCineFilterEndUV"
    },
    "SetCineFilterStartColor": {
        "body": "SetCineFilterStartColor(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})",
        "description": "SetCineFilterStartColor (integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetCineFilterStartColor"
    },
    "SetCineFilterEndColor": {
        "body": "SetCineFilterEndColor(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})",
        "description": "SetCineFilterEndColor (integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetCineFilterEndColor"
    },
    "SetCineFilterDuration": {
        "body": "SetCineFilterDuration(${1:duration})",
        "description": "SetCineFilterDuration (real duration)",
        "prefix": "SetCineFilterDuration"
    },
    "DisplayCineFilter": {
        "body": "DisplayCineFilter(${1:flag})",
        "description": "DisplayCineFilter (boolean flag)",
        "prefix": "DisplayCineFilter"
    },
    "IsCineFilterDisplayed": {
        "body": "IsCineFilterDisplayed()",
        "description": "IsCineFilterDisplayed ()",
        "prefix": "IsCineFilterDisplayed"
    },
    "SetCinematicScene": {
        "body": "SetCinematicScene(${1:portraitUnitId}, ${2:color}, ${3:speakerTitle}, ${4:text}, ${5:sceneDuration}, ${6:voiceoverDuration})",
        "description": "SetCinematicScene (integer portraitUnitId, playercolor color, string speakerTitle, string text, real sceneDuration, real voiceoverDuration)",
        "prefix": "SetCinematicScene"
    },
    "EndCinematicScene": {
        "body": "EndCinematicScene()",
        "description": "EndCinematicScene ()",
        "prefix": "EndCinematicScene"
    },
    "ForceCinematicSubtitles": {
        "body": "ForceCinematicSubtitles(${1:flag})",
        "description": "ForceCinematicSubtitles (boolean flag)",
        "prefix": "ForceCinematicSubtitles"
    },
    "GetCameraMargin": {
        "body": "GetCameraMargin(${1:whichMargin})",
        "description": "GetCameraMargin (integer whichMargin)",
        "prefix": "GetCameraMargin"
    },
    "GetCameraBoundMinX": {
        "body": "GetCameraBoundMinX()",
        "description": "GetCameraBoundMinX ()",
        "prefix": "GetCameraBoundMinX"
    },
    "GetCameraBoundMinY": {
        "body": "GetCameraBoundMinY()",
        "description": "GetCameraBoundMinY ()",
        "prefix": "GetCameraBoundMinY"
    },
    "GetCameraBoundMaxX": {
        "body": "GetCameraBoundMaxX()",
        "description": "GetCameraBoundMaxX ()",
        "prefix": "GetCameraBoundMaxX"
    },
    "GetCameraBoundMaxY": {
        "body": "GetCameraBoundMaxY()",
        "description": "GetCameraBoundMaxY ()",
        "prefix": "GetCameraBoundMaxY"
    },
    "GetCameraField": {
        "body": "GetCameraField(${1:whichField})",
        "description": "GetCameraField (camerafield whichField)",
        "prefix": "GetCameraField"
    },
    "GetCameraTargetPositionX": {
        "body": "GetCameraTargetPositionX()",
        "description": "GetCameraTargetPositionX ()",
        "prefix": "GetCameraTargetPositionX"
    },
    "GetCameraTargetPositionY": {
        "body": "GetCameraTargetPositionY()",
        "description": "GetCameraTargetPositionY ()",
        "prefix": "GetCameraTargetPositionY"
    },
    "GetCameraTargetPositionZ": {
        "body": "GetCameraTargetPositionZ()",
        "description": "GetCameraTargetPositionZ ()",
        "prefix": "GetCameraTargetPositionZ"
    },
    "GetCameraTargetPositionLoc": {
        "body": "GetCameraTargetPositionLoc()",
        "description": "GetCameraTargetPositionLoc ()",
        "prefix": "GetCameraTargetPositionLoc"
    },
    "GetCameraEyePositionX": {
        "body": "GetCameraEyePositionX()",
        "description": "GetCameraEyePositionX ()",
        "prefix": "GetCameraEyePositionX"
    },
    "GetCameraEyePositionY": {
        "body": "GetCameraEyePositionY()",
        "description": "GetCameraEyePositionY ()",
        "prefix": "GetCameraEyePositionY"
    },
    "GetCameraEyePositionZ": {
        "body": "GetCameraEyePositionZ()",
        "description": "GetCameraEyePositionZ ()",
        "prefix": "GetCameraEyePositionZ"
    },
    "GetCameraEyePositionLoc": {
        "body": "GetCameraEyePositionLoc()",
        "description": "GetCameraEyePositionLoc ()",
        "prefix": "GetCameraEyePositionLoc"
    },
    "NewSoundEnvironment": {
        "body": "NewSoundEnvironment(${1:environmentName})",
        "description": "NewSoundEnvironment (string environmentName)",
        "prefix": "NewSoundEnvironment"
    },
    "CreateSound": {
        "body": "CreateSound(${1:fileName}, ${2:looping}, ${3:is3D}, ${4:stopwhenoutofrange}, ${5:fadeInRate}, ${6:fadeOutRate}, ${7:eaxSetting})",
        "description": "CreateSound (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string eaxSetting)",
        "prefix": "CreateSound"
    },
    "CreateSoundFilenameWithLabel": {
        "body": "CreateSoundFilenameWithLabel(${1:fileName}, ${2:looping}, ${3:is3D}, ${4:stopwhenoutofrange}, ${5:fadeInRate}, ${6:fadeOutRate}, ${7:SLKEntryName})",
        "description": "CreateSoundFilenameWithLabel (string fileName, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate, string SLKEntryName)",
        "prefix": "CreateSoundFilenameWithLabel"
    },
    "CreateSoundFromLabel": {
        "body": "CreateSoundFromLabel(${1:soundLabel}, ${2:looping}, ${3:is3D}, ${4:stopwhenoutofrange}, ${5:fadeInRate}, ${6:fadeOutRate})",
        "description": "CreateSoundFromLabel (string soundLabel, boolean looping, boolean is3D, boolean stopwhenoutofrange, integer fadeInRate, integer fadeOutRate)",
        "prefix": "CreateSoundFromLabel"
    },
    "CreateMIDISound": {
        "body": "CreateMIDISound(${1:soundLabel}, ${2:fadeInRate}, ${3:fadeOutRate})",
        "description": "CreateMIDISound (string soundLabel, integer fadeInRate, integer fadeOutRate)",
        "prefix": "CreateMIDISound"
    },
    "SetSoundParamsFromLabel": {
        "body": "SetSoundParamsFromLabel(${1:soundHandle}, ${2:soundLabel})",
        "description": "SetSoundParamsFromLabel (sound soundHandle, string soundLabel)",
        "prefix": "SetSoundParamsFromLabel"
    },
    "SetSoundDistanceCutoff": {
        "body": "SetSoundDistanceCutoff(${1:soundHandle}, ${2:cutoff})",
        "description": "SetSoundDistanceCutoff (sound soundHandle, real cutoff)",
        "prefix": "SetSoundDistanceCutoff"
    },
    "SetSoundChannel": {
        "body": "SetSoundChannel(${1:soundHandle}, ${2:channel})",
        "description": "SetSoundChannel (sound soundHandle, integer channel)",
        "prefix": "SetSoundChannel"
    },
    "SetSoundVolume": {
        "body": "SetSoundVolume(${1:soundHandle}, ${2:volume})",
        "description": "SetSoundVolume (sound soundHandle, integer volume)",
        "prefix": "SetSoundVolume"
    },
    "SetSoundPitch": {
        "body": "SetSoundPitch(${1:soundHandle}, ${2:pitch})",
        "description": "SetSoundPitch (sound soundHandle, real pitch)",
        "prefix": "SetSoundPitch"
    },
    "SetSoundPlayPosition": {
        "body": "SetSoundPlayPosition(${1:soundHandle}, ${2:millisecs})",
        "description": "SetSoundPlayPosition (sound soundHandle, integer millisecs)",
        "prefix": "SetSoundPlayPosition"
    },
    "SetSoundDistances": {
        "body": "SetSoundDistances(${1:soundHandle}, ${2:minDist}, ${3:maxDist})",
        "description": "SetSoundDistances (sound soundHandle, real minDist, real maxDist)",
        "prefix": "SetSoundDistances"
    },
    "SetSoundConeAngles": {
        "body": "SetSoundConeAngles(${1:soundHandle}, ${2:inside}, ${3:outside}, ${4:outsideVolume})",
        "description": "SetSoundConeAngles (sound soundHandle, real inside, real outside, integer outsideVolume)",
        "prefix": "SetSoundConeAngles"
    },
    "SetSoundConeOrientation": {
        "body": "SetSoundConeOrientation(${1:soundHandle}, ${2:x}, ${3:y}, ${4:z})",
        "description": "SetSoundConeOrientation (sound soundHandle, real x, real y, real z)",
        "prefix": "SetSoundConeOrientation"
    },
    "SetSoundPosition": {
        "body": "SetSoundPosition(${1:soundHandle}, ${2:x}, ${3:y}, ${4:z})",
        "description": "SetSoundPosition (sound soundHandle, real x, real y, real z)",
        "prefix": "SetSoundPosition"
    },
    "SetSoundVelocity": {
        "body": "SetSoundVelocity(${1:soundHandle}, ${2:x}, ${3:y}, ${4:z})",
        "description": "SetSoundVelocity (sound soundHandle, real x, real y, real z)",
        "prefix": "SetSoundVelocity"
    },
    "AttachSoundToUnit": {
        "body": "AttachSoundToUnit(${1:soundHandle}, ${2:whichUnit})",
        "description": "AttachSoundToUnit (sound soundHandle, unit whichUnit)",
        "prefix": "AttachSoundToUnit"
    },
    "StartSound": {
        "body": "StartSound(${1:soundHandle})",
        "description": "StartSound (sound soundHandle)",
        "prefix": "StartSound"
    },
    "StopSound": {
        "body": "StopSound(${1:soundHandle}, ${2:killWhenDone}, ${3:fadeOut})",
        "description": "StopSound (sound soundHandle, boolean killWhenDone, boolean fadeOut)",
        "prefix": "StopSound"
    },
    "KillSoundWhenDone": {
        "body": "KillSoundWhenDone(${1:soundHandle})",
        "description": "KillSoundWhenDone (sound soundHandle)",
        "prefix": "KillSoundWhenDone"
    },
    "SetMapMusic": {
        "body": "SetMapMusic(${1:musicName}, ${2:random}, ${3:index})",
        "description": "SetMapMusic (string musicName, boolean random, integer index)",
        "prefix": "SetMapMusic"
    },
    "ClearMapMusic": {
        "body": "ClearMapMusic()",
        "description": "ClearMapMusic ()",
        "prefix": "ClearMapMusic"
    },
    "PlayMusic": {
        "body": "PlayMusic(${1:musicName})",
        "description": "PlayMusic (string musicName)",
        "prefix": "PlayMusic"
    },
    "PlayMusicEx": {
        "body": "PlayMusicEx(${1:musicName}, ${2:frommsecs}, ${3:fadeinmsecs})",
        "description": "PlayMusicEx (string musicName, integer frommsecs, integer fadeinmsecs)",
        "prefix": "PlayMusicEx"
    },
    "StopMusic": {
        "body": "StopMusic(${1:fadeOut})",
        "description": "StopMusic (boolean fadeOut)",
        "prefix": "StopMusic"
    },
    "ResumeMusic": {
        "body": "ResumeMusic()",
        "description": "ResumeMusic ()",
        "prefix": "ResumeMusic"
    },
    "PlayThematicMusic": {
        "body": "PlayThematicMusic(${1:musicFileName})",
        "description": "PlayThematicMusic (string musicFileName)",
        "prefix": "PlayThematicMusic"
    },
    "PlayThematicMusicEx": {
        "body": "PlayThematicMusicEx(${1:musicFileName}, ${2:frommsecs})",
        "description": "PlayThematicMusicEx (string musicFileName, integer frommsecs)",
        "prefix": "PlayThematicMusicEx"
    },
    "EndThematicMusic": {
        "body": "EndThematicMusic()",
        "description": "EndThematicMusic ()",
        "prefix": "EndThematicMusic"
    },
    "SetMusicVolume": {
        "body": "SetMusicVolume(${1:volume})",
        "description": "SetMusicVolume (integer volume)",
        "prefix": "SetMusicVolume"
    },
    "SetMusicPlayPosition": {
        "body": "SetMusicPlayPosition(${1:millisecs})",
        "description": "SetMusicPlayPosition (integer millisecs)",
        "prefix": "SetMusicPlayPosition"
    },
    "SetThematicMusicPlayPosition": {
        "body": "SetThematicMusicPlayPosition(${1:millisecs})",
        "description": "SetThematicMusicPlayPosition (integer millisecs)",
        "prefix": "SetThematicMusicPlayPosition"
    },
    "SetSoundDuration": {
        "body": "SetSoundDuration(${1:soundHandle}, ${2:duration})",
        "description": "SetSoundDuration (sound soundHandle, integer duration)",
        "prefix": "SetSoundDuration"
    },
    "GetSoundDuration": {
        "body": "GetSoundDuration(${1:soundHandle})",
        "description": "GetSoundDuration (sound soundHandle)",
        "prefix": "GetSoundDuration"
    },
    "GetSoundFileDuration": {
        "body": "GetSoundFileDuration(${1:musicFileName})",
        "description": "GetSoundFileDuration (string musicFileName)",
        "prefix": "GetSoundFileDuration"
    },
    "VolumeGroupSetVolume": {
        "body": "VolumeGroupSetVolume(${1:vgroup}, ${2:scale})",
        "description": "VolumeGroupSetVolume (volumegroup vgroup, real scale)",
        "prefix": "VolumeGroupSetVolume"
    },
    "VolumeGroupReset": {
        "body": "VolumeGroupReset()",
        "description": "VolumeGroupReset ()",
        "prefix": "VolumeGroupReset"
    },
    "GetSoundIsPlaying": {
        "body": "GetSoundIsPlaying(${1:soundHandle})",
        "description": "GetSoundIsPlaying (sound soundHandle)",
        "prefix": "GetSoundIsPlaying"
    },
    "GetSoundIsLoading": {
        "body": "GetSoundIsLoading(${1:soundHandle})",
        "description": "GetSoundIsLoading (sound soundHandle)",
        "prefix": "GetSoundIsLoading"
    },
    "RegisterStackedSound": {
        "body": "RegisterStackedSound(${1:soundHandle}, ${2:byPosition}, ${3:rectwidth}, ${4:rectheight})",
        "description": "RegisterStackedSound (sound soundHandle, boolean byPosition, real rectwidth, real rectheight)",
        "prefix": "RegisterStackedSound"
    },
    "UnregisterStackedSound": {
        "body": "UnregisterStackedSound(${1:soundHandle}, ${2:byPosition}, ${3:rectwidth}, ${4:rectheight})",
        "description": "UnregisterStackedSound (sound soundHandle, boolean byPosition, real rectwidth, real rectheight)",
        "prefix": "UnregisterStackedSound"
    },
    "AddWeatherEffect": {
        "body": "AddWeatherEffect(${1:where}, ${2:effectID})",
        "description": "AddWeatherEffect (rect where, integer effectID)",
        "prefix": "AddWeatherEffect"
    },
    "RemoveWeatherEffect": {
        "body": "RemoveWeatherEffect(${1:whichEffect})",
        "description": "RemoveWeatherEffect (weathereffect whichEffect)",
        "prefix": "RemoveWeatherEffect"
    },
    "EnableWeatherEffect": {
        "body": "EnableWeatherEffect(${1:whichEffect}, ${2:enable})",
        "description": "EnableWeatherEffect (weathereffect whichEffect, boolean enable)",
        "prefix": "EnableWeatherEffect"
    },
    "TerrainDeformCrater": {
        "body": "TerrainDeformCrater(${1:x}, ${2:y}, ${3:radius}, ${4:depth}, ${5:duration}, ${6:permanent})",
        "description": "TerrainDeformCrater (real x, real y, real radius, real depth, integer duration, boolean permanent)",
        "prefix": "TerrainDeformCrater"
    },
    "TerrainDeformRipple": {
        "body": "TerrainDeformRipple(${1:x}, ${2:y}, ${3:radius}, ${4:depth}, ${5:duration}, ${6:count}, ${7:spaceWaves}, ${8:timeWaves}, ${9:radiusStartPct}, ${10:limitNeg})",
        "description": "TerrainDeformRipple (real x, real y, real radius, real depth, integer duration, integer count, real spaceWaves, real timeWaves, real radiusStartPct, boolean limitNeg)",
        "prefix": "TerrainDeformRipple"
    },
    "TerrainDeformWave": {
        "body": "TerrainDeformWave(${1:x}, ${2:y}, ${3:dirX}, ${4:dirY}, ${5:distance}, ${6:speed}, ${7:radius}, ${8:depth}, ${9:trailTime}, ${10:count})",
        "description": "TerrainDeformWave (real x, real y, real dirX, real dirY, real distance, real speed, real radius, real depth, integer trailTime, integer count)",
        "prefix": "TerrainDeformWave"
    },
    "TerrainDeformRandom": {
        "body": "TerrainDeformRandom(${1:x}, ${2:y}, ${3:radius}, ${4:minDelta}, ${5:maxDelta}, ${6:duration}, ${7:updateInterval})",
        "description": "TerrainDeformRandom (real x, real y, real radius, real minDelta, real maxDelta, integer duration, integer updateInterval)",
        "prefix": "TerrainDeformRandom"
    },
    "TerrainDeformStop": {
        "body": "TerrainDeformStop(${1:deformation}, ${2:duration})",
        "description": "TerrainDeformStop (terraindeformation deformation, integer duration)",
        "prefix": "TerrainDeformStop"
    },
    "TerrainDeformStopAll": {
        "body": "TerrainDeformStopAll()",
        "description": "TerrainDeformStopAll ()",
        "prefix": "TerrainDeformStopAll"
    },
    "AddSpecialEffect": {
        "body": "AddSpecialEffect(${1:modelName}, ${2:x}, ${3:y})",
        "description": "AddSpecialEffect (string modelName, real x, real y)",
        "prefix": "AddSpecialEffect"
    },
    "AddSpecialEffectLoc": {
        "body": "AddSpecialEffectLoc(${1:modelName}, ${2:where})",
        "description": "AddSpecialEffectLoc (string modelName, location where)",
        "prefix": "AddSpecialEffectLoc"
    },
    "AddSpecialEffectTarget": {
        "body": "AddSpecialEffectTarget(${1:modelName}, ${2:targetWidget}, ${3:attachPointName})",
        "description": "AddSpecialEffectTarget (string modelName, widget targetWidget, string attachPointName)",
        "prefix": "AddSpecialEffectTarget"
    },
    "DestroyEffect": {
        "body": "DestroyEffect(${1:whichEffect})",
        "description": "DestroyEffect (effect whichEffect)",
        "prefix": "DestroyEffect"
    },
    "AddSpellEffect": {
        "body": "AddSpellEffect(${1:abilityString}, ${2:t}, ${3:x}, ${4:y})",
        "description": "AddSpellEffect (string abilityString, effecttype t, real x, real y)",
        "prefix": "AddSpellEffect"
    },
    "AddSpellEffectLoc": {
        "body": "AddSpellEffectLoc(${1:abilityString}, ${2:t}, ${3:where})",
        "description": "AddSpellEffectLoc (string abilityString, effecttype t,location where)",
        "prefix": "AddSpellEffectLoc"
    },
    "AddSpellEffectById": {
        "body": "AddSpellEffectById(${1:abilityId}, ${2:t}, ${3:x}, ${4:y})",
        "description": "AddSpellEffectById (integer abilityId, effecttype t,real x, real y)",
        "prefix": "AddSpellEffectById"
    },
    "AddSpellEffectByIdLoc": {
        "body": "AddSpellEffectByIdLoc(${1:abilityId}, ${2:t}, ${3:where})",
        "description": "AddSpellEffectByIdLoc (integer abilityId, effecttype t,location where)",
        "prefix": "AddSpellEffectByIdLoc"
    },
    "AddSpellEffectTarget": {
        "body": "AddSpellEffectTarget(${1:modelName}, ${2:t}, ${3:targetWidget}, ${4:attachPoint})",
        "description": "AddSpellEffectTarget (string modelName, effecttype t, widget targetWidget, string attachPoint)",
        "prefix": "AddSpellEffectTarget"
    },
    "AddSpellEffectTargetById": {
        "body": "AddSpellEffectTargetById(${1:abilityId}, ${2:t}, ${3:targetWidget}, ${4:attachPoint})",
        "description": "AddSpellEffectTargetById (integer abilityId, effecttype t, widget targetWidget, string attachPoint)",
        "prefix": "AddSpellEffectTargetById"
    },
    "AddLightning": {
        "body": "AddLightning(${1:codeName}, ${2:checkVisibility}, ${3:x1}, ${4:y1}, ${5:x2}, ${6:y2})",
        "description": "AddLightning (string codeName, boolean checkVisibility, real x1, real y1, real x2, real y2)",
        "prefix": "AddLightning"
    },
    "AddLightningEx": {
        "body": "AddLightningEx(${1:codeName}, ${2:checkVisibility}, ${3:x1}, ${4:y1}, ${5:z1}, ${6:x2}, ${7:y2}, ${8:z2})",
        "description": "AddLightningEx (string codeName, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2)",
        "prefix": "AddLightningEx"
    },
    "DestroyLightning": {
        "body": "DestroyLightning(${1:whichBolt})",
        "description": "DestroyLightning (lightning whichBolt)",
        "prefix": "DestroyLightning"
    },
    "MoveLightning": {
        "body": "MoveLightning(${1:whichBolt}, ${2:checkVisibility}, ${3:x1}, ${4:y1}, ${5:x2}, ${6:y2})",
        "description": "MoveLightning (lightning whichBolt, boolean checkVisibility, real x1, real y1, real x2, real y2)",
        "prefix": "MoveLightning"
    },
    "MoveLightningEx": {
        "body": "MoveLightningEx(${1:whichBolt}, ${2:checkVisibility}, ${3:x1}, ${4:y1}, ${5:z1}, ${6:x2}, ${7:y2}, ${8:z2})",
        "description": "MoveLightningEx (lightning whichBolt, boolean checkVisibility, real x1, real y1, real z1, real x2, real y2, real z2)",
        "prefix": "MoveLightningEx"
    },
    "GetLightningColorA": {
        "body": "GetLightningColorA(${1:whichBolt})",
        "description": "GetLightningColorA (lightning whichBolt)",
        "prefix": "GetLightningColorA"
    },
    "GetLightningColorR": {
        "body": "GetLightningColorR(${1:whichBolt})",
        "description": "GetLightningColorR (lightning whichBolt)",
        "prefix": "GetLightningColorR"
    },
    "GetLightningColorG": {
        "body": "GetLightningColorG(${1:whichBolt})",
        "description": "GetLightningColorG (lightning whichBolt)",
        "prefix": "GetLightningColorG"
    },
    "GetLightningColorB": {
        "body": "GetLightningColorB(${1:whichBolt})",
        "description": "GetLightningColorB (lightning whichBolt)",
        "prefix": "GetLightningColorB"
    },
    "SetLightningColor": {
        "body": "SetLightningColor(${1:whichBolt}, ${2:r}, ${3:g}, ${4:b}, ${5:a})",
        "description": "SetLightningColor (lightning whichBolt, real r, real g, real b, real a)",
        "prefix": "SetLightningColor"
    },
    "GetAbilityEffect": {
        "body": "GetAbilityEffect(${1:abilityString}, ${2:t}, ${3:index})",
        "description": "GetAbilityEffect (string abilityString, effecttype t, integer index)",
        "prefix": "GetAbilityEffect"
    },
    "GetAbilityEffectById": {
        "body": "GetAbilityEffectById(${1:abilityId}, ${2:t}, ${3:index})",
        "description": "GetAbilityEffectById (integer abilityId, effecttype t, integer index)",
        "prefix": "GetAbilityEffectById"
    },
    "GetAbilitySound": {
        "body": "GetAbilitySound(${1:abilityString}, ${2:t})",
        "description": "GetAbilitySound (string abilityString, soundtype t)",
        "prefix": "GetAbilitySound"
    },
    "GetAbilitySoundById": {
        "body": "GetAbilitySoundById(${1:abilityId}, ${2:t})",
        "description": "GetAbilitySoundById (integer abilityId, soundtype t)",
        "prefix": "GetAbilitySoundById"
    },
    "GetTerrainCliffLevel": {
        "body": "GetTerrainCliffLevel(${1:x}, ${2:y})",
        "description": "GetTerrainCliffLevel (real x, real y)",
        "prefix": "GetTerrainCliffLevel"
    },
    "SetWaterBaseColor": {
        "body": "SetWaterBaseColor(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})",
        "description": "SetWaterBaseColor (integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetWaterBaseColor"
    },
    "SetWaterDeforms": {
        "body": "SetWaterDeforms(${1:val})",
        "description": "SetWaterDeforms (boolean val)",
        "prefix": "SetWaterDeforms"
    },
    "GetTerrainType": {
        "body": "GetTerrainType(${1:x}, ${2:y})",
        "description": "GetTerrainType (real x, real y)",
        "prefix": "GetTerrainType"
    },
    "GetTerrainVariance": {
        "body": "GetTerrainVariance(${1:x}, ${2:y})",
        "description": "GetTerrainVariance (real x, real y)",
        "prefix": "GetTerrainVariance"
    },
    "SetTerrainType": {
        "body": "SetTerrainType(${1:x}, ${2:y}, ${3:terrainType}, ${4:variation}, ${5:area}, ${6:shape})",
        "description": "SetTerrainType (real x, real y, integer terrainType, integer variation, integer area, integer shape)",
        "prefix": "SetTerrainType"
    },
    "IsTerrainPathable": {
        "body": "IsTerrainPathable(${1:x}, ${2:y}, ${3:t})",
        "description": "IsTerrainPathable (real x, real y, pathingtype t)",
        "prefix": "IsTerrainPathable"
    },
    "SetTerrainPathable": {
        "body": "SetTerrainPathable(${1:x}, ${2:y}, ${3:t}, ${4:flag})",
        "description": "SetTerrainPathable (real x, real y, pathingtype t, boolean flag)",
        "prefix": "SetTerrainPathable"
    },
    "CreateImage": {
        "body": "CreateImage(${1:file}, ${2:sizeX}, ${3:sizeY}, ${4:sizeZ}, ${5:posX}, ${6:posY}, ${7:posZ}, ${8:originX}, ${9:originY}, ${10:originZ}, ${11:imageType})",
        "description": "CreateImage (string file, real sizeX, real sizeY, real sizeZ, real posX, real posY, real posZ, real originX, real originY, real originZ, integer imageType)",
        "prefix": "CreateImage"
    },
    "DestroyImage": {
        "body": "DestroyImage(${1:whichImage})",
        "description": "DestroyImage (image whichImage)",
        "prefix": "DestroyImage"
    },
    "ShowImage": {
        "body": "ShowImage(${1:whichImage}, ${2:flag})",
        "description": "ShowImage (image whichImage, boolean flag)",
        "prefix": "ShowImage"
    },
    "SetImageConstantHeight": {
        "body": "SetImageConstantHeight(${1:whichImage}, ${2:flag}, ${3:height})",
        "description": "SetImageConstantHeight (image whichImage, boolean flag, real height)",
        "prefix": "SetImageConstantHeight"
    },
    "SetImagePosition": {
        "body": "SetImagePosition(${1:whichImage}, ${2:x}, ${3:y}, ${4:z})",
        "description": "SetImagePosition (image whichImage, real x, real y, real z)",
        "prefix": "SetImagePosition"
    },
    "SetImageColor": {
        "body": "SetImageColor(${1:whichImage}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
        "description": "SetImageColor (image whichImage, integer red, integer green, integer blue, integer alpha)",
        "prefix": "SetImageColor"
    },
    "SetImageRender": {
        "body": "SetImageRender(${1:whichImage}, ${2:flag})",
        "description": "SetImageRender (image whichImage, boolean flag)",
        "prefix": "SetImageRender"
    },
    "SetImageRenderAlways": {
        "body": "SetImageRenderAlways(${1:whichImage}, ${2:flag})",
        "description": "SetImageRenderAlways (image whichImage, boolean flag)",
        "prefix": "SetImageRenderAlways"
    },
    "SetImageAboveWater": {
        "body": "SetImageAboveWater(${1:whichImage}, ${2:flag}, ${3:useWaterAlpha})",
        "description": "SetImageAboveWater (image whichImage, boolean flag, boolean useWaterAlpha)",
        "prefix": "SetImageAboveWater"
    },
    "SetImageType": {
        "body": "SetImageType(${1:whichImage}, ${2:imageType})",
        "description": "SetImageType (image whichImage, integer imageType)",
        "prefix": "SetImageType"
    },
    "CreateUbersplat": {
        "body": "CreateUbersplat(${1:x}, ${2:y}, ${3:name}, ${4:red}, ${5:green}, ${6:blue}, ${7:alpha}, ${8:forcePaused}, ${9:noBirthTime})",
        "description": "CreateUbersplat (real x, real y, string name, integer red, integer green, integer blue, integer alpha, boolean forcePaused, boolean noBirthTime)",
        "prefix": "CreateUbersplat"
    },
    "DestroyUbersplat": {
        "body": "DestroyUbersplat(${1:whichSplat})",
        "description": "DestroyUbersplat (ubersplat whichSplat)",
        "prefix": "DestroyUbersplat"
    },
    "ResetUbersplat": {
        "body": "ResetUbersplat(${1:whichSplat})",
        "description": "ResetUbersplat (ubersplat whichSplat)",
        "prefix": "ResetUbersplat"
    },
    "FinishUbersplat": {
        "body": "FinishUbersplat(${1:whichSplat})",
        "description": "FinishUbersplat (ubersplat whichSplat)",
        "prefix": "FinishUbersplat"
    },
    "ShowUbersplat": {
        "body": "ShowUbersplat(${1:whichSplat}, ${2:flag})",
        "description": "ShowUbersplat (ubersplat whichSplat, boolean flag)",
        "prefix": "ShowUbersplat"
    },
    "SetUbersplatRender": {
        "body": "SetUbersplatRender(${1:whichSplat}, ${2:flag})",
        "description": "SetUbersplatRender (ubersplat whichSplat, boolean flag)",
        "prefix": "SetUbersplatRender"
    },
    "SetUbersplatRenderAlways": {
        "body": "SetUbersplatRenderAlways(${1:whichSplat}, ${2:flag})",
        "description": "SetUbersplatRenderAlways (ubersplat whichSplat, boolean flag)",
        "prefix": "SetUbersplatRenderAlways"
    },
    "SetBlight": {
        "body": "SetBlight(${1:whichPlayer}, ${2:x}, ${3:y}, ${4:radius}, ${5:addBlight})",
        "description": "SetBlight (player whichPlayer, real x, real y, real radius, boolean addBlight)",
        "prefix": "SetBlight"
    },
    "SetBlightRect": {
        "body": "SetBlightRect(${1:whichPlayer}, ${2:r}, ${3:addBlight})",
        "description": "SetBlightRect (player whichPlayer, rect r, boolean addBlight)",
        "prefix": "SetBlightRect"
    },
    "SetBlightPoint": {
        "body": "SetBlightPoint(${1:whichPlayer}, ${2:x}, ${3:y}, ${4:addBlight})",
        "description": "SetBlightPoint (player whichPlayer, real x, real y, boolean addBlight)",
        "prefix": "SetBlightPoint"
    },
    "SetBlightLoc": {
        "body": "SetBlightLoc(${1:whichPlayer}, ${2:whichLocation}, ${3:radius}, ${4:addBlight})",
        "description": "SetBlightLoc (player whichPlayer, location whichLocation, real radius, boolean addBlight)",
        "prefix": "SetBlightLoc"
    },
    "CreateBlightedGoldmine": {
        "body": "CreateBlightedGoldmine(${1:id}, ${2:x}, ${3:y}, ${4:face})",
        "description": "CreateBlightedGoldmine (player id, real x, real y, real face)",
        "prefix": "CreateBlightedGoldmine"
    },
    "IsPointBlighted": {
        "body": "IsPointBlighted(${1:x}, ${2:y})",
        "description": "IsPointBlighted (real x, real y)",
        "prefix": "IsPointBlighted"
    },
    "SetDoodadAnimation": {
        "body": "SetDoodadAnimation(${1:x}, ${2:y}, ${3:radius}, ${4:doodadID}, ${5:nearestOnly}, ${6:animName}, ${7:animRandom})",
        "description": "SetDoodadAnimation (real x, real y, real radius, integer doodadID, boolean nearestOnly, string animName, boolean animRandom)",
        "prefix": "SetDoodadAnimation"
    },
    "SetDoodadAnimationRect": {
        "body": "SetDoodadAnimationRect(${1:r}, ${2:doodadID}, ${3:animName}, ${4:animRandom})",
        "description": "SetDoodadAnimationRect (rect r, integer doodadID, string animName, boolean animRandom)",
        "prefix": "SetDoodadAnimationRect"
    },
    "StartMeleeAI": {
        "body": "StartMeleeAI(${1:num}, ${2:script})",
        "description": "StartMeleeAI (player num, string script)",
        "prefix": "StartMeleeAI"
    },
    "StartCampaignAI": {
        "body": "StartCampaignAI(${1:num}, ${2:script})",
        "description": "StartCampaignAI (player num, string script)",
        "prefix": "StartCampaignAI"
    },
    "CommandAI": {
        "body": "CommandAI(${1:num}, ${2:command}, ${3:data})",
        "description": "CommandAI (player num, integer command, integer data)",
        "prefix": "CommandAI"
    },
    "PauseCompAI": {
        "body": "PauseCompAI(${1:p}, ${2:pause})",
        "description": "PauseCompAI (player p,   boolean pause)",
        "prefix": "PauseCompAI"
    },
    "GetAIDifficulty": {
        "body": "GetAIDifficulty(${1:num})",
        "description": "GetAIDifficulty (player num)",
        "prefix": "GetAIDifficulty"
    },
    "RemoveGuardPosition": {
        "body": "RemoveGuardPosition(${1:hUnit})",
        "description": "RemoveGuardPosition (unit hUnit)",
        "prefix": "RemoveGuardPosition"
    },
    "RecycleGuardPosition": {
        "body": "RecycleGuardPosition(${1:hUnit})",
        "description": "RecycleGuardPosition (unit hUnit)",
        "prefix": "RecycleGuardPosition"
    },
    "RemoveAllGuardPositions": {
        "body": "RemoveAllGuardPositions(${1:num})",
        "description": "RemoveAllGuardPositions (player num)",
        "prefix": "RemoveAllGuardPositions"
    },
    "Cheat": {
        "body": "Cheat(${1:cheatStr})",
        "description": "Cheat (string cheatStr)",
        "prefix": "Cheat"
    },
    "IsNoVictoryCheat": {
        "body": "IsNoVictoryCheat()",
        "description": "IsNoVictoryCheat ()",
        "prefix": "IsNoVictoryCheat"
    },
    "IsNoDefeatCheat": {
        "body": "IsNoDefeatCheat()",
        "description": "IsNoDefeatCheat ()",
        "prefix": "IsNoDefeatCheat"
    },
    "Preload": {
        "body": "Preload(${1:filename})",
        "description": "Preload (string filename)",
        "prefix": "Preload"
    },
    "PreloadEnd": {
        "body": "PreloadEnd(${1:timeout})",
        "description": "PreloadEnd (real timeout)",
        "prefix": "PreloadEnd"
    },
    "PreloadStart": {
        "body": "PreloadStart()",
        "description": "PreloadStart ()",
        "prefix": "PreloadStart"
    },
    "PreloadRefresh": {
        "body": "PreloadRefresh()",
        "description": "PreloadRefresh ()",
        "prefix": "PreloadRefresh"
    },
    "PreloadEndEx": {
        "body": "PreloadEndEx()",
        "description": "PreloadEndEx ()",
        "prefix": "PreloadEndEx"
    },
    "PreloadGenClear": {
        "body": "PreloadGenClear()",
        "description": "PreloadGenClear ()",
        "prefix": "PreloadGenClear"
    },
    "PreloadGenStart": {
        "body": "PreloadGenStart()",
        "description": "PreloadGenStart ()",
        "prefix": "PreloadGenStart"
    },
    "PreloadGenEnd": {
        "body": "PreloadGenEnd(${1:filename})",
        "description": "PreloadGenEnd (string filename)",
        "prefix": "PreloadGenEnd"
    },
    "Preloader": {
        "body": "Preloader(${1:filename})",
        "description": "Preloader (string filename)",
        "prefix": "Preloader"
    },
    "AutomationSetTestType": {
        "body": "AutomationSetTestType(${1:testType})",
        "description": "AutomationSetTestType (string testType)",
        "prefix": "AutomationSetTestType"
    },
    "AutomationTestStart": {
        "body": "AutomationTestStart(${1:testName})",
        "description": "AutomationTestStart (string testName)",
        "prefix": "AutomationTestStart"
    },
    "AutomationTestEnd": {
        "body": "AutomationTestEnd()",
        "description": "AutomationTestEnd ()",
        "prefix": "AutomationTestEnd"
    },
    "AutomationTestingFinished": {
        "body": "AutomationTestingFinished()",
        "description": "AutomationTestingFinished ()",
        "prefix": "AutomationTestingFinished"
    },
    "BlzGetTriggerPlayerMouseX": {
        "body": "BlzGetTriggerPlayerMouseX()",
        "description": "BlzGetTriggerPlayerMouseX ()",
        "prefix": "BlzGetTriggerPlayerMouseX"
    },
    "BlzGetTriggerPlayerMouseY": {
        "body": "BlzGetTriggerPlayerMouseY()",
        "description": "BlzGetTriggerPlayerMouseY ()",
        "prefix": "BlzGetTriggerPlayerMouseY"
    },
    "BlzGetTriggerPlayerMousePosition": {
        "body": "BlzGetTriggerPlayerMousePosition()",
        "description": "BlzGetTriggerPlayerMousePosition ()",
        "prefix": "BlzGetTriggerPlayerMousePosition"
    },
    "BlzGetTriggerPlayerMouseButton": {
        "body": "BlzGetTriggerPlayerMouseButton()",
        "description": "BlzGetTriggerPlayerMouseButton ()",
        "prefix": "BlzGetTriggerPlayerMouseButton"
    },
    "BlzSetAbilityTooltip": {
        "body": "BlzSetAbilityTooltip(${1:abilCode}, ${2:tooltip}, ${3:level})",
        "description": "BlzSetAbilityTooltip (integer abilCode, string tooltip, integer level)",
        "prefix": "BlzSetAbilityTooltip"
    },
    "BlzSetAbilityActivatedTooltip": {
        "body": "BlzSetAbilityActivatedTooltip(${1:abilCode}, ${2:tooltip}, ${3:level})",
        "description": "BlzSetAbilityActivatedTooltip (integer abilCode, string tooltip, integer level)",
        "prefix": "BlzSetAbilityActivatedTooltip"
    },
    "BlzSetAbilityExtendedTooltip": {
        "body": "BlzSetAbilityExtendedTooltip(${1:abilCode}, ${2:extendedTooltip}, ${3:level})",
        "description": "BlzSetAbilityExtendedTooltip (integer abilCode, string extendedTooltip, integer level)",
        "prefix": "BlzSetAbilityExtendedTooltip"
    },
    "BlzSetAbilityActivatedExtendedTooltip": {
        "body": "BlzSetAbilityActivatedExtendedTooltip(${1:abilCode}, ${2:extendedTooltip}, ${3:level})",
        "description": "BlzSetAbilityActivatedExtendedTooltip (integer abilCode, string extendedTooltip, integer level)",
        "prefix": "BlzSetAbilityActivatedExtendedTooltip"
    },
    "BlzSetAbilityResearchTooltip": {
        "body": "BlzSetAbilityResearchTooltip(${1:abilCode}, ${2:researchTooltip}, ${3:level})",
        "description": "BlzSetAbilityResearchTooltip (integer abilCode, string researchTooltip, integer level)",
        "prefix": "BlzSetAbilityResearchTooltip"
    },
    "BlzSetAbilityResearchExtendedTooltip": {
        "body": "BlzSetAbilityResearchExtendedTooltip(${1:abilCode}, ${2:researchExtendedTooltip}, ${3:level})",
        "description": "BlzSetAbilityResearchExtendedTooltip (integer abilCode, string researchExtendedTooltip, integer level)",
        "prefix": "BlzSetAbilityResearchExtendedTooltip"
    },
    "BlzGetAbilityTooltip": {
        "body": "BlzGetAbilityTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityTooltip"
    },
    "BlzGetAbilityActivatedTooltip": {
        "body": "BlzGetAbilityActivatedTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityActivatedTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityActivatedTooltip"
    },
    "BlzGetAbilityExtendedTooltip": {
        "body": "BlzGetAbilityExtendedTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityExtendedTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityExtendedTooltip"
    },
    "BlzGetAbilityActivatedExtendedTooltip": {
        "body": "BlzGetAbilityActivatedExtendedTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityActivatedExtendedTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityActivatedExtendedTooltip"
    },
    "BlzGetAbilityResearchTooltip": {
        "body": "BlzGetAbilityResearchTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityResearchTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityResearchTooltip"
    },
    "BlzGetAbilityResearchExtendedTooltip": {
        "body": "BlzGetAbilityResearchExtendedTooltip(${1:abilCode}, ${2:level})",
        "description": "BlzGetAbilityResearchExtendedTooltip (integer abilCode, integer level)",
        "prefix": "BlzGetAbilityResearchExtendedTooltip"
    },
    "BlzSetAbilityIcon": {
        "body": "BlzSetAbilityIcon(${1:abilCode}, ${2:iconPath})",
        "description": "BlzSetAbilityIcon (integer abilCode, string iconPath)",
        "prefix": "BlzSetAbilityIcon"
    },
    "BlzGetAbilityIcon": {
        "body": "BlzGetAbilityIcon(${1:abilCode})",
        "description": "BlzGetAbilityIcon (integer abilCode)",
        "prefix": "BlzGetAbilityIcon"
    },
    "BlzSetAbilityActivatedIcon": {
        "body": "BlzSetAbilityActivatedIcon(${1:abilCode}, ${2:iconPath})",
        "description": "BlzSetAbilityActivatedIcon (integer abilCode, string iconPath)",
        "prefix": "BlzSetAbilityActivatedIcon"
    },
    "BlzGetAbilityActivatedIcon": {
        "body": "BlzGetAbilityActivatedIcon(${1:abilCode})",
        "description": "BlzGetAbilityActivatedIcon (integer abilCode)",
        "prefix": "BlzGetAbilityActivatedIcon"
    },
    "BlzGetAbilityPosX": {
        "body": "BlzGetAbilityPosX(${1:abilCode})",
        "description": "BlzGetAbilityPosX (integer abilCode)",
        "prefix": "BlzGetAbilityPosX"
    },
    "BlzGetAbilityPosY": {
        "body": "BlzGetAbilityPosY(${1:abilCode})",
        "description": "BlzGetAbilityPosY (integer abilCode)",
        "prefix": "BlzGetAbilityPosY"
    },
    "BlzSetAbilityPosX": {
        "body": "BlzSetAbilityPosX(${1:abilCode}, ${2:x})",
        "description": "BlzSetAbilityPosX (integer abilCode, integer x)",
        "prefix": "BlzSetAbilityPosX"
    },
    "BlzSetAbilityPosY": {
        "body": "BlzSetAbilityPosY(${1:abilCode}, ${2:y})",
        "description": "BlzSetAbilityPosY (integer abilCode, integer y)",
        "prefix": "BlzSetAbilityPosY"
    },
    "BlzGetAbilityActivatedPosX": {
        "body": "BlzGetAbilityActivatedPosX(${1:abilCode})",
        "description": "BlzGetAbilityActivatedPosX (integer abilCode)",
        "prefix": "BlzGetAbilityActivatedPosX"
    },
    "BlzGetAbilityActivatedPosY": {
        "body": "BlzGetAbilityActivatedPosY(${1:abilCode})",
        "description": "BlzGetAbilityActivatedPosY (integer abilCode)",
        "prefix": "BlzGetAbilityActivatedPosY"
    },
    "BlzSetAbilityActivatedPosX": {
        "body": "BlzSetAbilityActivatedPosX(${1:abilCode}, ${2:x})",
        "description": "BlzSetAbilityActivatedPosX (integer abilCode, integer x)",
        "prefix": "BlzSetAbilityActivatedPosX"
    },
    "BlzSetAbilityActivatedPosY": {
        "body": "BlzSetAbilityActivatedPosY(${1:abilCode}, ${2:y})",
        "description": "BlzSetAbilityActivatedPosY (integer abilCode, integer y)",
        "prefix": "BlzSetAbilityActivatedPosY"
    },
    "BlzGetUnitMaxHP": {
        "body": "BlzGetUnitMaxHP(${1:whichUnit})",
        "description": "BlzGetUnitMaxHP (unit whichUnit)",
        "prefix": "BlzGetUnitMaxHP"
    },
    "BlzSetUnitMaxHP": {
        "body": "BlzSetUnitMaxHP(${1:whichUnit}, ${2:hp})",
        "description": "BlzSetUnitMaxHP (unit whichUnit, integer hp)",
        "prefix": "BlzSetUnitMaxHP"
    },
    "BlzGetUnitMaxMana": {
        "body": "BlzGetUnitMaxMana(${1:whichUnit})",
        "description": "BlzGetUnitMaxMana (unit whichUnit)",
        "prefix": "BlzGetUnitMaxMana"
    },
    "BlzSetUnitMaxMana": {
        "body": "BlzSetUnitMaxMana(${1:whichUnit}, ${2:mana})",
        "description": "BlzSetUnitMaxMana (unit whichUnit, integer mana)",
        "prefix": "BlzSetUnitMaxMana"
    },
    "BlzSetItemName": {
        "body": "BlzSetItemName(${1:whichItem}, ${2:name})",
        "description": "BlzSetItemName (item whichItem, string name)",
        "prefix": "BlzSetItemName"
    },
    "BlzSetItemDescription": {
        "body": "BlzSetItemDescription(${1:whichItem}, ${2:description})",
        "description": "BlzSetItemDescription (item whichItem, string description)",
        "prefix": "BlzSetItemDescription"
    },
    "BlzGetItemDescription": {
        "body": "BlzGetItemDescription(${1:whichItem})",
        "description": "BlzGetItemDescription (item whichItem)",
        "prefix": "BlzGetItemDescription"
    },
    "BlzSetItemTooltip": {
        "body": "BlzSetItemTooltip(${1:whichItem}, ${2:tooltip})",
        "description": "BlzSetItemTooltip (item whichItem, string tooltip)",
        "prefix": "BlzSetItemTooltip"
    },
    "BlzGetItemTooltip": {
        "body": "BlzGetItemTooltip(${1:whichItem})",
        "description": "BlzGetItemTooltip (item whichItem)",
        "prefix": "BlzGetItemTooltip"
    },
    "BlzSetItemExtendedTooltip": {
        "body": "BlzSetItemExtendedTooltip(${1:whichItem}, ${2:extendedTooltip})",
        "description": "BlzSetItemExtendedTooltip (item whichItem, string extendedTooltip)",
        "prefix": "BlzSetItemExtendedTooltip"
    },
    "BlzGetItemExtendedTooltip": {
        "body": "BlzGetItemExtendedTooltip(${1:whichItem})",
        "description": "BlzGetItemExtendedTooltip (item whichItem)",
        "prefix": "BlzGetItemExtendedTooltip"
    },
    "BlzSetItemIconPath": {
        "body": "BlzSetItemIconPath(${1:whichItem}, ${2:iconPath})",
        "description": "BlzSetItemIconPath (item whichItem, string iconPath)",
        "prefix": "BlzSetItemIconPath"
    },
    "BlzGetItemIconPath": {
        "body": "BlzGetItemIconPath(${1:whichItem})",
        "description": "BlzGetItemIconPath (item whichItem)",
        "prefix": "BlzGetItemIconPath"
    },
    "BlzSetUnitName": {
        "body": "BlzSetUnitName(${1:whichUnit}, ${2:name})",
        "description": "BlzSetUnitName (unit whichUnit, string name)",
        "prefix": "BlzSetUnitName"
    },
    "BlzSetHeroProperName": {
        "body": "BlzSetHeroProperName(${1:whichUnit}, ${2:heroProperName})",
        "description": "BlzSetHeroProperName (unit whichUnit, string heroProperName)",
        "prefix": "BlzSetHeroProperName"
    },
    "BlzGetUnitBaseDamage": {
        "body": "BlzGetUnitBaseDamage(${1:whichUnit}, ${2:weaponIndex})",
        "description": "BlzGetUnitBaseDamage (unit whichUnit, integer weaponIndex)",
        "prefix": "BlzGetUnitBaseDamage"
    },
    "BlzSetUnitBaseDamage": {
        "body": "BlzSetUnitBaseDamage(${1:whichUnit}, ${2:baseDamage}, ${3:weaponIndex})",
        "description": "BlzSetUnitBaseDamage (unit whichUnit, integer baseDamage, integer weaponIndex)",
        "prefix": "BlzSetUnitBaseDamage"
    },
    "BlzGetUnitDiceNumber": {
        "body": "BlzGetUnitDiceNumber(${1:whichUnit}, ${2:weaponIndex})",
        "description": "BlzGetUnitDiceNumber (unit whichUnit, integer weaponIndex)",
        "prefix": "BlzGetUnitDiceNumber"
    },
    "BlzSetUnitDiceNumber": {
        "body": "BlzSetUnitDiceNumber(${1:whichUnit}, ${2:diceNumber}, ${3:weaponIndex})",
        "description": "BlzSetUnitDiceNumber (unit whichUnit, integer diceNumber, integer weaponIndex)",
        "prefix": "BlzSetUnitDiceNumber"
    },
    "BlzGetUnitDiceSides": {
        "body": "BlzGetUnitDiceSides(${1:whichUnit}, ${2:weaponIndex})",
        "description": "BlzGetUnitDiceSides (unit whichUnit, integer weaponIndex)",
        "prefix": "BlzGetUnitDiceSides"
    },
    "BlzSetUnitDiceSides": {
        "body": "BlzSetUnitDiceSides(${1:whichUnit}, ${2:diceSides}, ${3:weaponIndex})",
        "description": "BlzSetUnitDiceSides (unit whichUnit, integer diceSides, integer weaponIndex)",
        "prefix": "BlzSetUnitDiceSides"
    },
    "BlzGetUnitAttackCooldown": {
        "body": "BlzGetUnitAttackCooldown(${1:whichUnit}, ${2:weaponIndex})",
        "description": "BlzGetUnitAttackCooldown (unit whichUnit, integer weaponIndex)",
        "prefix": "BlzGetUnitAttackCooldown"
    },
    "BlzSetUnitAttackCooldown": {
        "body": "BlzSetUnitAttackCooldown(${1:whichUnit}, ${2:cooldown}, ${3:weaponIndex})",
        "description": "BlzSetUnitAttackCooldown (unit whichUnit, real cooldown, integer weaponIndex)",
        "prefix": "BlzSetUnitAttackCooldown"
    },
    "BlzSetSpecialEffectColorByPlayer": {
        "body": "BlzSetSpecialEffectColorByPlayer(${1:whichEffect}, ${2:whichPlayer})",
        "description": "BlzSetSpecialEffectColorByPlayer (effect whichEffect, player whichPlayer)",
        "prefix": "BlzSetSpecialEffectColorByPlayer"
    },
    "BlzSetSpecialEffectColor": {
        "body": "BlzSetSpecialEffectColor(${1:whichEffect}, ${2:r}, ${3:g}, ${4:b})",
        "description": "BlzSetSpecialEffectColor (effect whichEffect, integer r, integer g, integer b)",
        "prefix": "BlzSetSpecialEffectColor"
    },
    "BlzSetSpecialEffectAlpha": {
        "body": "BlzSetSpecialEffectAlpha(${1:whichEffect}, ${2:alpha})",
        "description": "BlzSetSpecialEffectAlpha (effect whichEffect, integer alpha)",
        "prefix": "BlzSetSpecialEffectAlpha"
    },
    "BlzSetSpecialEffectScale": {
        "body": "BlzSetSpecialEffectScale(${1:whichEffect}, ${2:scale})",
        "description": "BlzSetSpecialEffectScale (effect whichEffect, real scale)",
        "prefix": "BlzSetSpecialEffectScale"
    },
    "BlzSetSpecialEffectPosition": {
        "body": "BlzSetSpecialEffectPosition(${1:whichEffect}, ${2:x}, ${3:y}, ${4:z})",
        "description": "BlzSetSpecialEffectPosition (effect whichEffect, real x, real y, real z)",
        "prefix": "BlzSetSpecialEffectPosition"
    },
    "BlzSetSpecialEffectHeight": {
        "body": "BlzSetSpecialEffectHeight(${1:whichEffect}, ${2:height})",
        "description": "BlzSetSpecialEffectHeight (effect whichEffect, real height)",
        "prefix": "BlzSetSpecialEffectHeight"
    },
    "BlzSetSpecialEffectTimeScale": {
        "body": "BlzSetSpecialEffectTimeScale(${1:whichEffect}, ${2:timeScale})",
        "description": "BlzSetSpecialEffectTimeScale (effect whichEffect, real timeScale)",
        "prefix": "BlzSetSpecialEffectTimeScale"
    },
    "BlzSetSpecialEffectTime": {
        "body": "BlzSetSpecialEffectTime(${1:whichEffect}, ${2:time})",
        "description": "BlzSetSpecialEffectTime (effect whichEffect, real time)",
        "prefix": "BlzSetSpecialEffectTime"
    },
    "BlzSetSpecialEffectOrientation": {
        "body": "BlzSetSpecialEffectOrientation(${1:whichEffect}, ${2:yaw}, ${3:pitch}, ${4:roll})",
        "description": "BlzSetSpecialEffectOrientation (effect whichEffect, real yaw, real pitch, real roll)",
        "prefix": "BlzSetSpecialEffectOrientation"
    },
    "BlzSetSpecialEffectYaw": {
        "body": "BlzSetSpecialEffectYaw(${1:whichEffect}, ${2:yaw})",
        "description": "BlzSetSpecialEffectYaw (effect whichEffect, real yaw)",
        "prefix": "BlzSetSpecialEffectYaw"
    },
    "BlzSetSpecialEffectPitch": {
        "body": "BlzSetSpecialEffectPitch(${1:whichEffect}, ${2:pitch})",
        "description": "BlzSetSpecialEffectPitch (effect whichEffect, real pitch)",
        "prefix": "BlzSetSpecialEffectPitch"
    },
    "BlzSetSpecialEffectRoll": {
        "body": "BlzSetSpecialEffectRoll(${1:whichEffect}, ${2:roll})",
        "description": "BlzSetSpecialEffectRoll (effect whichEffect, real roll)",
        "prefix": "BlzSetSpecialEffectRoll"
    },
    "BlzSetSpecialEffectX": {
        "body": "BlzSetSpecialEffectX(${1:whichEffect}, ${2:x})",
        "description": "BlzSetSpecialEffectX (effect whichEffect, real x)",
        "prefix": "BlzSetSpecialEffectX"
    },
    "BlzSetSpecialEffectY": {
        "body": "BlzSetSpecialEffectY(${1:whichEffect}, ${2:y})",
        "description": "BlzSetSpecialEffectY (effect whichEffect, real y)",
        "prefix": "BlzSetSpecialEffectY"
    },
    "BlzSetSpecialEffectZ": {
        "body": "BlzSetSpecialEffectZ(${1:whichEffect}, ${2:z})",
        "description": "BlzSetSpecialEffectZ (effect whichEffect, real z)",
        "prefix": "BlzSetSpecialEffectZ"
    },
    "BlzSetSpecialEffectPositionLoc": {
        "body": "BlzSetSpecialEffectPositionLoc(${1:whichEffect}, ${2:loc})",
        "description": "BlzSetSpecialEffectPositionLoc (effect whichEffect, location loc)",
        "prefix": "BlzSetSpecialEffectPositionLoc"
    },
    "BlzGetLocalSpecialEffectX": {
        "body": "BlzGetLocalSpecialEffectX(${1:whichEffect})",
        "description": "BlzGetLocalSpecialEffectX (effect whichEffect)",
        "prefix": "BlzGetLocalSpecialEffectX"
    },
    "BlzGetLocalSpecialEffectY": {
        "body": "BlzGetLocalSpecialEffectY(${1:whichEffect})",
        "description": "BlzGetLocalSpecialEffectY (effect whichEffect)",
        "prefix": "BlzGetLocalSpecialEffectY"
    },
    "BlzGetLocalSpecialEffectZ": {
        "body": "BlzGetLocalSpecialEffectZ(${1:whichEffect})",
        "description": "BlzGetLocalSpecialEffectZ (effect whichEffect)",
        "prefix": "BlzGetLocalSpecialEffectZ"
    },
    "BlzSpecialEffectClearSubAnimations": {
        "body": "BlzSpecialEffectClearSubAnimations(${1:whichEffect})",
        "description": "BlzSpecialEffectClearSubAnimations (effect whichEffect)",
        "prefix": "BlzSpecialEffectClearSubAnimations"
    },
    "BlzSpecialEffectRemoveSubAnimation": {
        "body": "BlzSpecialEffectRemoveSubAnimation(${1:whichEffect}, ${2:whichSubAnim})",
        "description": "BlzSpecialEffectRemoveSubAnimation (effect whichEffect, subanimtype whichSubAnim)",
        "prefix": "BlzSpecialEffectRemoveSubAnimation"
    },
    "BlzSpecialEffectAddSubAnimation": {
        "body": "BlzSpecialEffectAddSubAnimation(${1:whichEffect}, ${2:whichSubAnim})",
        "description": "BlzSpecialEffectAddSubAnimation (effect whichEffect, subanimtype whichSubAnim)",
        "prefix": "BlzSpecialEffectAddSubAnimation"
    },
    "BlzPlaySpecialEffect": {
        "body": "BlzPlaySpecialEffect(${1:whichEffect}, ${2:whichAnim})",
        "description": "BlzPlaySpecialEffect (effect whichEffect, animtype whichAnim)",
        "prefix": "BlzPlaySpecialEffect"
    },
    "BlzPlaySpecialEffectWithTimeScale": {
        "body": "BlzPlaySpecialEffectWithTimeScale(${1:whichEffect}, ${2:whichAnim}, ${3:timeScale})",
        "description": "BlzPlaySpecialEffectWithTimeScale (effect whichEffect, animtype whichAnim, real timeScale)",
        "prefix": "BlzPlaySpecialEffectWithTimeScale"
    },
    "BlzGetAnimName": {
        "body": "BlzGetAnimName(${1:whichAnim})",
        "description": "BlzGetAnimName (animtype whichAnim)",
        "prefix": "BlzGetAnimName"
    },
    "BlzGetUnitArmor": {
        "body": "BlzGetUnitArmor(${1:whichUnit})",
        "description": "BlzGetUnitArmor (unit whichUnit)",
        "prefix": "BlzGetUnitArmor"
    },
    "BlzSetUnitArmor": {
        "body": "BlzSetUnitArmor(${1:whichUnit}, ${2:armorAmount})",
        "description": "BlzSetUnitArmor (unit whichUnit, real armorAmount)",
        "prefix": "BlzSetUnitArmor"
    },
    "BlzUnitHideAbility": {
        "body": "BlzUnitHideAbility(${1:whichUnit}, ${2:abilId}, ${3:flag})",
        "description": "BlzUnitHideAbility (unit whichUnit, integer abilId, boolean flag)",
        "prefix": "BlzUnitHideAbility"
    },
    "BlzUnitDisableAbility": {
        "body": "BlzUnitDisableAbility(${1:whichUnit}, ${2:abilId}, ${3:flag}, ${4:hideUI})",
        "description": "BlzUnitDisableAbility (unit whichUnit, integer abilId, boolean flag, boolean hideUI)",
        "prefix": "BlzUnitDisableAbility"
    },
    "BlzUnitCancelTimedLife": {
        "body": "BlzUnitCancelTimedLife(${1:whichUnit})",
        "description": "BlzUnitCancelTimedLife (unit whichUnit)",
        "prefix": "BlzUnitCancelTimedLife"
    },
    "BlzIsUnitSelectable": {
        "body": "BlzIsUnitSelectable(${1:whichUnit})",
        "description": "BlzIsUnitSelectable (unit whichUnit)",
        "prefix": "BlzIsUnitSelectable"
    },
    "BlzIsUnitInvulnerable": {
        "body": "BlzIsUnitInvulnerable(${1:whichUnit})",
        "description": "BlzIsUnitInvulnerable (unit whichUnit)",
        "prefix": "BlzIsUnitInvulnerable"
    },
    "BlzUnitInterruptAttack": {
        "body": "BlzUnitInterruptAttack(${1:whichUnit})",
        "description": "BlzUnitInterruptAttack (unit whichUnit)",
        "prefix": "BlzUnitInterruptAttack"
    },
    "BlzGetUnitCollisionSize": {
        "body": "BlzGetUnitCollisionSize(${1:whichUnit})",
        "description": "BlzGetUnitCollisionSize (unit whichUnit)",
        "prefix": "BlzGetUnitCollisionSize"
    },
    "BlzGetAbilityManaCost": {
        "body": "BlzGetAbilityManaCost(${1:abilId}, ${2:level})",
        "description": "BlzGetAbilityManaCost (integer abilId, integer level)",
        "prefix": "BlzGetAbilityManaCost"
    },
    "BlzGetAbilityCooldown": {
        "body": "BlzGetAbilityCooldown(${1:abilId}, ${2:level})",
        "description": "BlzGetAbilityCooldown (integer abilId, integer level)",
        "prefix": "BlzGetAbilityCooldown"
    },
    "BlzSetUnitAbilityCooldown": {
        "body": "BlzSetUnitAbilityCooldown(${1:whichUnit}, ${2:abilId}, ${3:level}, ${4:cooldown})",
        "description": "BlzSetUnitAbilityCooldown (unit whichUnit, integer abilId, integer level, real cooldown)",
        "prefix": "BlzSetUnitAbilityCooldown"
    },
    "BlzGetUnitAbilityCooldown": {
        "body": "BlzGetUnitAbilityCooldown(${1:whichUnit}, ${2:abilId}, ${3:level})",
        "description": "BlzGetUnitAbilityCooldown (unit whichUnit, integer abilId, integer level)",
        "prefix": "BlzGetUnitAbilityCooldown"
    },
    "BlzGetUnitAbilityCooldownRemaining": {
        "body": "BlzGetUnitAbilityCooldownRemaining(${1:whichUnit}, ${2:abilId})",
        "description": "BlzGetUnitAbilityCooldownRemaining (unit whichUnit, integer abilId)",
        "prefix": "BlzGetUnitAbilityCooldownRemaining"
    },
    "BlzEndUnitAbilityCooldown": {
        "body": "BlzEndUnitAbilityCooldown(${1:whichUnit}, ${2:abilCode})",
        "description": "BlzEndUnitAbilityCooldown (unit whichUnit, integer abilCode)",
        "prefix": "BlzEndUnitAbilityCooldown"
    },
    "BlzGetUnitAbilityManaCost": {
        "body": "BlzGetUnitAbilityManaCost(${1:whichUnit}, ${2:abilId}, ${3:level})",
        "description": "BlzGetUnitAbilityManaCost (unit whichUnit, integer abilId, integer level)",
        "prefix": "BlzGetUnitAbilityManaCost"
    },
    "BlzSetUnitAbilityManaCost": {
        "body": "BlzSetUnitAbilityManaCost(${1:whichUnit}, ${2:abilId}, ${3:level}, ${4:manaCost})",
        "description": "BlzSetUnitAbilityManaCost (unit whichUnit, integer abilId, integer level, integer manaCost)",
        "prefix": "BlzSetUnitAbilityManaCost"
    },
    "BlzGetLocalUnitZ": {
        "body": "BlzGetLocalUnitZ(${1:whichUnit})",
        "description": "BlzGetLocalUnitZ (unit whichUnit)",
        "prefix": "BlzGetLocalUnitZ"
    },
    "BlzDecPlayerTechResearched": {
        "body": "BlzDecPlayerTechResearched(${1:whichPlayer}, ${2:techid}, ${3:levels})",
        "description": "BlzDecPlayerTechResearched (player whichPlayer, integer techid, integer levels)",
        "prefix": "BlzDecPlayerTechResearched"
    },
    "BlzSetEventDamage": {
        "body": "BlzSetEventDamage(${1:damage})",
        "description": "BlzSetEventDamage (real damage)",
        "prefix": "BlzSetEventDamage"
    },
    "BlzGetEventDamageTarget": {
        "body": "BlzGetEventDamageTarget()",
        "description": "BlzGetEventDamageTarget ()",
        "prefix": "BlzGetEventDamageTarget"
    },
    "BlzGetEventAttackType": {
        "body": "BlzGetEventAttackType()",
        "description": "BlzGetEventAttackType ()",
        "prefix": "BlzGetEventAttackType"
    },
    "BlzGetEventDamageType": {
        "body": "BlzGetEventDamageType()",
        "description": "BlzGetEventDamageType ()",
        "prefix": "BlzGetEventDamageType"
    },
    "BlzGetEventWeaponType": {
        "body": "BlzGetEventWeaponType()",
        "description": "BlzGetEventWeaponType ()",
        "prefix": "BlzGetEventWeaponType"
    },
    "BlzSetEventAttackType": {
        "body": "BlzSetEventAttackType(${1:attackType})",
        "description": "BlzSetEventAttackType (attacktype attackType)",
        "prefix": "BlzSetEventAttackType"
    },
    "BlzSetEventDamageType": {
        "body": "BlzSetEventDamageType(${1:damageType})",
        "description": "BlzSetEventDamageType (damagetype damageType)",
        "prefix": "BlzSetEventDamageType"
    },
    "BlzSetEventWeaponType": {
        "body": "BlzSetEventWeaponType(${1:weaponType})",
        "description": "BlzSetEventWeaponType (weapontype weaponType)",
        "prefix": "BlzSetEventWeaponType"
    },
    "RequestExtraIntegerData": {
        "body": "RequestExtraIntegerData(${1:dataType}, ${2:whichPlayer}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5}, ${8:param6})",
        "description": "RequestExtraIntegerData (integer dataType, player whichPlayer, string param1, string param2, boolean param3, integer param4, integer param5, integer param6)",
        "prefix": "RequestExtraIntegerData"
    },
    "RequestExtraBooleanData": {
        "body": "RequestExtraBooleanData(${1:dataType}, ${2:whichPlayer}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5}, ${8:param6})",
        "description": "RequestExtraBooleanData (integer dataType, player whichPlayer, string param1, string param2, boolean param3, integer param4, integer param5, integer param6)",
        "prefix": "RequestExtraBooleanData"
    },
    "RequestExtraStringData": {
        "body": "RequestExtraStringData(${1:dataType}, ${2:whichPlayer}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5}, ${8:param6})",
        "description": "RequestExtraStringData (integer dataType, player whichPlayer, string param1, string param2, boolean param3, integer param4, integer param5, integer param6)",
        "prefix": "RequestExtraStringData"
    },
    "RequestExtraRealData": {
        "body": "RequestExtraRealData(${1:dataType}, ${2:whichPlayer}, ${3:param1}, ${4:param2}, ${5:param3}, ${6:param4}, ${7:param5}, ${8:param6})",
        "description": "RequestExtraRealData (integer dataType, player whichPlayer, string param1, string param2, boolean param3, integer param4, integer param5, integer param6)",
        "prefix": "RequestExtraRealData"
    },
    "BlzGetUnitZ": {
        "body": "BlzGetUnitZ(${1:whichUnit})",
        "description": "BlzGetUnitZ (unit whichUnit)",
        "prefix": "BlzGetUnitZ"
    },
    "BlzEnableSelections": {
        "body": "BlzEnableSelections(${1:enableSelection}, ${2:enableSelectionCircle})",
        "description": "BlzEnableSelections (boolean enableSelection, boolean enableSelectionCircle)",
        "prefix": "BlzEnableSelections"
    },
    "BlzIsSelectionEnabled": {
        "body": "BlzIsSelectionEnabled()",
        "description": "BlzIsSelectionEnabled ()",
        "prefix": "BlzIsSelectionEnabled"
    },
    "BlzIsSelectionCircleEnabled": {
        "body": "BlzIsSelectionCircleEnabled()",
        "description": "BlzIsSelectionCircleEnabled ()",
        "prefix": "BlzIsSelectionCircleEnabled"
    },
    "BlzCameraSetupApplyForceDurationSmooth": {
        "body": "BlzCameraSetupApplyForceDurationSmooth(${1:whichSetup}, ${2:doPan}, ${3:forcedDuration}, ${4:easeInDuration}, ${5:easeOutDuration}, ${6:smoothFactor})",
        "description": "BlzCameraSetupApplyForceDurationSmooth (camerasetup whichSetup, boolean doPan, real forcedDuration, real easeInDuration, real easeOutDuration, real smoothFactor)",
        "prefix": "BlzCameraSetupApplyForceDurationSmooth"
    },
    "BlzEnableTargetIndicator": {
        "body": "BlzEnableTargetIndicator(${1:enable})",
        "description": "BlzEnableTargetIndicator (boolean enable)",
        "prefix": "BlzEnableTargetIndicator"
    },
    "BlzIsTargetIndicatorEnabled": {
        "body": "BlzIsTargetIndicatorEnabled()",
        "description": "BlzIsTargetIndicatorEnabled ()",
        "prefix": "BlzIsTargetIndicatorEnabled"
    },
    "BlzGetOriginFrame": {
        "body": "BlzGetOriginFrame(${1:frameType}, ${2:index})",
        "description": "BlzGetOriginFrame (originframetype frameType, integer index)",
        "prefix": "BlzGetOriginFrame"
    },
    "BlzEnableUIAutoPosition": {
        "body": "BlzEnableUIAutoPosition(${1:enable})",
        "description": "BlzEnableUIAutoPosition (boolean enable)",
        "prefix": "BlzEnableUIAutoPosition"
    },
    "BlzHideOriginFrames": {
        "body": "BlzHideOriginFrames(${1:enable})",
        "description": "BlzHideOriginFrames (boolean enable)",
        "prefix": "BlzHideOriginFrames"
    },
    "BlzConvertColor": {
        "body": "BlzConvertColor(${1:a}, ${2:r}, ${3:g}, ${4:b})",
        "description": "BlzConvertColor (integer a, integer r, integer g, integer b)",
        "prefix": "BlzConvertColor"
    },
    "BlzLoadTOCFile": {
        "body": "BlzLoadTOCFile(${1:TOCFile})",
        "description": "BlzLoadTOCFile (string TOCFile)",
        "prefix": "BlzLoadTOCFile"
    },
    "BlzCreateFrame": {
        "body": "BlzCreateFrame(${1:name}, ${2:owner}, ${3:priority}, ${4:createContext})",
        "description": "BlzCreateFrame (string name, framehandle owner, integer priority, integer createContext)",
        "prefix": "BlzCreateFrame"
    },
    "BlzCreateSimpleFrame": {
        "body": "BlzCreateSimpleFrame(${1:name}, ${2:owner}, ${3:createContext})",
        "description": "BlzCreateSimpleFrame (string name, framehandle owner, integer createContext)",
        "prefix": "BlzCreateSimpleFrame"
    },
    "BlzCreateFrameByType": {
        "body": "BlzCreateFrameByType(${1:typeName}, ${2:name}, ${3:owner}, ${4:inherits}, ${5:createContext})",
        "description": "BlzCreateFrameByType (string typeName, string name, framehandle owner, string inherits, integer createContext)",
        "prefix": "BlzCreateFrameByType"
    },
    "BlzDestroyFrame": {
        "body": "BlzDestroyFrame(${1:frame})",
        "description": "BlzDestroyFrame (framehandle frame)",
        "prefix": "BlzDestroyFrame"
    },
    "BlzFrameSetPoint": {
        "body": "BlzFrameSetPoint(${1:frame}, ${2:point}, ${3:relative}, ${4:relativePoint}, ${5:x}, ${6:y})",
        "description": "BlzFrameSetPoint (framehandle frame, framepointtype point, framehandle relative, framepointtype relativePoint, real x, real y)",
        "prefix": "BlzFrameSetPoint"
    },
    "BlzFrameSetAbsPoint": {
        "body": "BlzFrameSetAbsPoint(${1:frame}, ${2:point}, ${3:x}, ${4:y})",
        "description": "BlzFrameSetAbsPoint (framehandle frame, framepointtype point, real x, real y)",
        "prefix": "BlzFrameSetAbsPoint"
    },
    "BlzFrameClearAllPoints": {
        "body": "BlzFrameClearAllPoints(${1:frame})",
        "description": "BlzFrameClearAllPoints (framehandle frame)",
        "prefix": "BlzFrameClearAllPoints"
    },
    "BlzFrameSetAllPoints": {
        "body": "BlzFrameSetAllPoints(${1:frame}, ${2:relative})",
        "description": "BlzFrameSetAllPoints (framehandle frame, framehandle relative)",
        "prefix": "BlzFrameSetAllPoints"
    },
    "BlzFrameSetVisible": {
        "body": "BlzFrameSetVisible(${1:frame}, ${2:visible})",
        "description": "BlzFrameSetVisible (framehandle frame, boolean visible)",
        "prefix": "BlzFrameSetVisible"
    },
    "BlzFrameIsVisible": {
        "body": "BlzFrameIsVisible(${1:frame})",
        "description": "BlzFrameIsVisible (framehandle frame)",
        "prefix": "BlzFrameIsVisible"
    },
    "BlzGetFrameByName": {
        "body": "BlzGetFrameByName(${1:name}, ${2:createContext})",
        "description": "BlzGetFrameByName (string name, integer createContext)",
        "prefix": "BlzGetFrameByName"
    },
    "BlzFrameGetName": {
        "body": "BlzFrameGetName(${1:frame})",
        "description": "BlzFrameGetName (framehandle frame)",
        "prefix": "BlzFrameGetName"
    },
    "BlzFrameClick": {
        "body": "BlzFrameClick(${1:frame})",
        "description": "BlzFrameClick (framehandle frame)",
        "prefix": "BlzFrameClick"
    },
    "BlzFrameSetText": {
        "body": "BlzFrameSetText(${1:frame}, ${2:text})",
        "description": "BlzFrameSetText (framehandle frame, string text)",
        "prefix": "BlzFrameSetText"
    },
    "BlzFrameGetText": {
        "body": "BlzFrameGetText(${1:frame})",
        "description": "BlzFrameGetText (framehandle frame)",
        "prefix": "BlzFrameGetText"
    },
    "BlzFrameSetTextSizeLimit": {
        "body": "BlzFrameSetTextSizeLimit(${1:frame}, ${2:size})",
        "description": "BlzFrameSetTextSizeLimit (framehandle frame, integer size)",
        "prefix": "BlzFrameSetTextSizeLimit"
    },
    "BlzFrameGetTextSizeLimit": {
        "body": "BlzFrameGetTextSizeLimit(${1:frame})",
        "description": "BlzFrameGetTextSizeLimit (framehandle frame)",
        "prefix": "BlzFrameGetTextSizeLimit"
    },
    "BlzFrameSetTextColor": {
        "body": "BlzFrameSetTextColor(${1:frame}, ${2:color})",
        "description": "BlzFrameSetTextColor (framehandle frame, integer color)",
        "prefix": "BlzFrameSetTextColor"
    },
    "BlzFrameSetFocus": {
        "body": "BlzFrameSetFocus(${1:frame}, ${2:flag})",
        "description": "BlzFrameSetFocus (framehandle frame, boolean flag)",
        "prefix": "BlzFrameSetFocus"
    },
    "BlzFrameSetModel": {
        "body": "BlzFrameSetModel(${1:frame}, ${2:modelFile}, ${3:cameraIndex})",
        "description": "BlzFrameSetModel (framehandle frame, string modelFile, integer cameraIndex)",
        "prefix": "BlzFrameSetModel"
    },
    "BlzFrameSetEnable": {
        "body": "BlzFrameSetEnable(${1:frame}, ${2:enabled})",
        "description": "BlzFrameSetEnable (framehandle frame, boolean enabled)",
        "prefix": "BlzFrameSetEnable"
    },
    "BlzFrameGetEnable": {
        "body": "BlzFrameGetEnable(${1:frame})",
        "description": "BlzFrameGetEnable (framehandle frame)",
        "prefix": "BlzFrameGetEnable"
    },
    "BlzFrameSetAlpha": {
        "body": "BlzFrameSetAlpha(${1:frame}, ${2:alpha})",
        "description": "BlzFrameSetAlpha (framehandle frame, integer alpha)",
        "prefix": "BlzFrameSetAlpha"
    },
    "BlzFrameGetAlpha": {
        "body": "BlzFrameGetAlpha(${1:frame})",
        "description": "BlzFrameGetAlpha (framehandle frame)",
        "prefix": "BlzFrameGetAlpha"
    },
    "BlzFrameSetSpriteAnimate": {
        "body": "BlzFrameSetSpriteAnimate(${1:frame}, ${2:primaryProp}, ${3:flags})",
        "description": "BlzFrameSetSpriteAnimate (framehandle frame, integer primaryProp, integer flags)",
        "prefix": "BlzFrameSetSpriteAnimate"
    },
    "BlzFrameSetTexture": {
        "body": "BlzFrameSetTexture(${1:frame}, ${2:texFile}, ${3:flag}, ${4:blend})",
        "description": "BlzFrameSetTexture (framehandle frame, string texFile, integer flag, boolean blend)",
        "prefix": "BlzFrameSetTexture"
    },
    "BlzFrameSetScale": {
        "body": "BlzFrameSetScale(${1:frame}, ${2:scale})",
        "description": "BlzFrameSetScale (framehandle frame, real scale)",
        "prefix": "BlzFrameSetScale"
    },
    "BlzFrameSetTooltip": {
        "body": "BlzFrameSetTooltip(${1:frame}, ${2:tooltip})",
        "description": "BlzFrameSetTooltip (framehandle frame, framehandle tooltip)",
        "prefix": "BlzFrameSetTooltip"
    },
    "BlzFrameCageMouse": {
        "body": "BlzFrameCageMouse(${1:frame}, ${2:enable})",
        "description": "BlzFrameCageMouse (framehandle frame, boolean enable)",
        "prefix": "BlzFrameCageMouse"
    },
    "BlzFrameSetValue": {
        "body": "BlzFrameSetValue(${1:frame}, ${2:value})",
        "description": "BlzFrameSetValue (framehandle frame, real value)",
        "prefix": "BlzFrameSetValue"
    },
    "BlzFrameGetValue": {
        "body": "BlzFrameGetValue(${1:frame})",
        "description": "BlzFrameGetValue (framehandle frame)",
        "prefix": "BlzFrameGetValue"
    },
    "BlzFrameSetMinMaxValue": {
        "body": "BlzFrameSetMinMaxValue(${1:frame}, ${2:minValue}, ${3:maxValue})",
        "description": "BlzFrameSetMinMaxValue (framehandle frame, real minValue, real maxValue)",
        "prefix": "BlzFrameSetMinMaxValue"
    },
    "BlzFrameSetStepSize": {
        "body": "BlzFrameSetStepSize(${1:frame}, ${2:stepSize})",
        "description": "BlzFrameSetStepSize (framehandle frame, real stepSize)",
        "prefix": "BlzFrameSetStepSize"
    },
    "BlzFrameSetSize": {
        "body": "BlzFrameSetSize(${1:frame}, ${2:width}, ${3:height})",
        "description": "BlzFrameSetSize (framehandle frame, real width, real height)",
        "prefix": "BlzFrameSetSize"
    },
    "BlzFrameSetVertexColor": {
        "body": "BlzFrameSetVertexColor(${1:frame}, ${2:color})",
        "description": "BlzFrameSetVertexColor (framehandle frame, integer color)",
        "prefix": "BlzFrameSetVertexColor"
    },
    "BlzFrameSetLevel": {
        "body": "BlzFrameSetLevel(${1:frame}, ${2:level})",
        "description": "BlzFrameSetLevel (framehandle frame, integer level)",
        "prefix": "BlzFrameSetLevel"
    },
    "BlzFrameSetParent": {
        "body": "BlzFrameSetParent(${1:frame}, ${2:parent})",
        "description": "BlzFrameSetParent (framehandle frame, framehandle parent)",
        "prefix": "BlzFrameSetParent"
    },
    "BlzFrameGetParent": {
        "body": "BlzFrameGetParent(${1:frame})",
        "description": "BlzFrameGetParent (framehandle frame)",
        "prefix": "BlzFrameGetParent"
    },
    "BlzFrameGetHeight": {
        "body": "BlzFrameGetHeight(${1:frame})",
        "description": "BlzFrameGetHeight (framehandle frame)",
        "prefix": "BlzFrameGetHeight"
    },
    "BlzFrameGetWidth": {
        "body": "BlzFrameGetWidth(${1:frame})",
        "description": "BlzFrameGetWidth (framehandle frame)",
        "prefix": "BlzFrameGetWidth"
    },
    "BlzFrameSetFont": {
        "body": "BlzFrameSetFont(${1:frame}, ${2:fileName}, ${3:height}, ${4:flags})",
        "description": "BlzFrameSetFont (framehandle frame, string fileName, real height, integer flags)",
        "prefix": "BlzFrameSetFont"
    },
    "BlzFrameSetTextAlignment": {
        "body": "BlzFrameSetTextAlignment(${1:frame}, ${2:vert}, ${3:horz})",
        "description": "BlzFrameSetTextAlignment (framehandle frame, textaligntype vert, textaligntype horz)",
        "prefix": "BlzFrameSetTextAlignment"
    },
    "BlzTriggerRegisterFrameEvent": {
        "body": "BlzTriggerRegisterFrameEvent(${1:whichTrigger}, ${2:frame}, ${3:eventId})",
        "description": "BlzTriggerRegisterFrameEvent (trigger whichTrigger, framehandle frame, frameeventtype eventId)",
        "prefix": "BlzTriggerRegisterFrameEvent"
    },
    "BlzGetTriggerFrame": {
        "body": "BlzGetTriggerFrame()",
        "description": "BlzGetTriggerFrame ()",
        "prefix": "BlzGetTriggerFrame"
    },
    "BlzGetTriggerFrameEvent": {
        "body": "BlzGetTriggerFrameEvent()",
        "description": "BlzGetTriggerFrameEvent ()",
        "prefix": "BlzGetTriggerFrameEvent"
    },
    "BlzTriggerRegisterPlayerSyncEvent": {
        "body": "BlzTriggerRegisterPlayerSyncEvent(${1:whichTrigger}, ${2:whichPlayer}, ${3:prefix}, ${4:fromServer})",
        "description": "BlzTriggerRegisterPlayerSyncEvent (trigger whichTrigger, player whichPlayer, string prefix, boolean fromServer)",
        "prefix": "BlzTriggerRegisterPlayerSyncEvent"
    },
    "BlzSendSyncData": {
        "body": "BlzSendSyncData(${1:prefix}, ${2:data})",
        "description": "BlzSendSyncData (string prefix, string data)",
        "prefix": "BlzSendSyncData"
    },
    "BlzGetTriggerSyncPrefix": {
        "body": "BlzGetTriggerSyncPrefix()",
        "description": "BlzGetTriggerSyncPrefix ()",
        "prefix": "BlzGetTriggerSyncPrefix"
    },
    "BlzGetTriggerSyncData": {
        "body": "BlzGetTriggerSyncData()",
        "description": "BlzGetTriggerSyncData ()",
        "prefix": "BlzGetTriggerSyncData"
    },
    "BlzTriggerRegisterPlayerKeyEvent": {
        "body": "BlzTriggerRegisterPlayerKeyEvent(${1:whichTrigger}, ${2:whichPlayer}, ${3:key}, ${4:metaKey}, ${5:keyDown})",
        "description": "BlzTriggerRegisterPlayerKeyEvent (trigger whichTrigger, player whichPlayer, oskeytype key, integer metaKey, boolean keyDown)",
        "prefix": "BlzTriggerRegisterPlayerKeyEvent"
    },
    "BlzGetTriggerPlayerKey": {
        "body": "BlzGetTriggerPlayerKey()",
        "description": "BlzGetTriggerPlayerKey ()",
        "prefix": "BlzGetTriggerPlayerKey"
    },
    "BlzGetTriggerPlayerMetaKey": {
        "body": "BlzGetTriggerPlayerMetaKey()",
        "description": "BlzGetTriggerPlayerMetaKey ()",
        "prefix": "BlzGetTriggerPlayerMetaKey"
    },
    "BlzGetTriggerPlayerIsKeyDown": {
        "body": "BlzGetTriggerPlayerIsKeyDown()",
        "description": "BlzGetTriggerPlayerIsKeyDown ()",
        "prefix": "BlzGetTriggerPlayerIsKeyDown"
    },
    "BlzEnableCursor": {
        "body": "BlzEnableCursor(${1:enable})",
        "description": "BlzEnableCursor (boolean enable)",
        "prefix": "BlzEnableCursor"
    },
    "BlzSetMousePos": {
        "body": "BlzSetMousePos(${1:x}, ${2:y})",
        "description": "BlzSetMousePos (integer x, integer y)",
        "prefix": "BlzSetMousePos"
    },
    "BlzGetLocalClientWidth": {
        "body": "BlzGetLocalClientWidth()",
        "description": "BlzGetLocalClientWidth ()",
        "prefix": "BlzGetLocalClientWidth"
    },
    "BlzGetLocalClientHeight": {
        "body": "BlzGetLocalClientHeight()",
        "description": "BlzGetLocalClientHeight ()",
        "prefix": "BlzGetLocalClientHeight"
    },
    "BlzIsLocalClientActive": {
        "body": "BlzIsLocalClientActive()",
        "description": "BlzIsLocalClientActive ()",
        "prefix": "BlzIsLocalClientActive"
    },
    "BlzGetMouseFocusUnit": {
        "body": "BlzGetMouseFocusUnit()",
        "description": "BlzGetMouseFocusUnit ()",
        "prefix": "BlzGetMouseFocusUnit"
    },
    "BlzChangeMinimapTerrainTex": {
        "body": "BlzChangeMinimapTerrainTex(${1:texFile})",
        "description": "BlzChangeMinimapTerrainTex (string texFile)",
        "prefix": "BlzChangeMinimapTerrainTex"
    },
    "BlzGetLocale": {
        "body": "BlzGetLocale()",
        "description": "BlzGetLocale ()",
        "prefix": "BlzGetLocale"
    },
    "BlzGetSpecialEffectScale": {
        "body": "BlzGetSpecialEffectScale(${1:whichEffect})",
        "description": "BlzGetSpecialEffectScale (effect whichEffect)",
        "prefix": "BlzGetSpecialEffectScale"
    },
    "BlzSetSpecialEffectMatrixScale": {
        "body": "BlzSetSpecialEffectMatrixScale(${1:whichEffect}, ${2:x}, ${3:y}, ${4:z})",
        "description": "BlzSetSpecialEffectMatrixScale (effect whichEffect, real x, real y, real z)",
        "prefix": "BlzSetSpecialEffectMatrixScale"
    },
    "BlzResetSpecialEffectMatrix": {
        "body": "BlzResetSpecialEffectMatrix(${1:whichEffect})",
        "description": "BlzResetSpecialEffectMatrix (effect whichEffect)",
        "prefix": "BlzResetSpecialEffectMatrix"
    },
    "BlzGetUnitAbility": {
        "body": "BlzGetUnitAbility(${1:whichUnit}, ${2:abilId})",
        "description": "BlzGetUnitAbility (unit whichUnit, integer abilId)",
        "prefix": "BlzGetUnitAbility"
    },
    "BlzGetUnitAbilityByIndex": {
        "body": "BlzGetUnitAbilityByIndex(${1:whichUnit}, ${2:index})",
        "description": "BlzGetUnitAbilityByIndex (unit whichUnit, integer index)",
        "prefix": "BlzGetUnitAbilityByIndex"
    },
    "BlzDisplayChatMessage": {
        "body": "BlzDisplayChatMessage(${1:whichPlayer}, ${2:recipient}, ${3:message})",
        "description": "BlzDisplayChatMessage (player whichPlayer, integer recipient, string message)",
        "prefix": "BlzDisplayChatMessage"
    },
    "BlzPauseUnitEx": {
        "body": "BlzPauseUnitEx(${1:whichUnit}, ${2:flag})",
        "description": "BlzPauseUnitEx (unit whichUnit, boolean flag)",
        "prefix": "BlzPauseUnitEx"
    },
    "BlzBitOr": {
        "body": "BlzBitOr(${1:x}, ${2:y})",
        "description": "BlzBitOr (integer x, integer y)",
        "prefix": "BlzBitOr"
    },
    "BlzBitAnd": {
        "body": "BlzBitAnd(${1:x}, ${2:y})",
        "description": "BlzBitAnd (integer x, integer y)",
        "prefix": "BlzBitAnd"
    },
    "BlzBitXor": {
        "body": "BlzBitXor(${1:x}, ${2:y})",
        "description": "BlzBitXor (integer x, integer y)",
        "prefix": "BlzBitXor"
    },
    "BlzGetAbilityBooleanField": {
        "body": "BlzGetAbilityBooleanField(${1:whichAbility}, ${2:whichField})",
        "description": "BlzGetAbilityBooleanField (ability whichAbility, abilitybooleanfield whichField)",
        "prefix": "BlzGetAbilityBooleanField"
    },
    "BlzGetAbilityIntegerField": {
        "body": "BlzGetAbilityIntegerField(${1:whichAbility}, ${2:whichField})",
        "description": "BlzGetAbilityIntegerField (ability whichAbility, abilityintegerfield whichField)",
        "prefix": "BlzGetAbilityIntegerField"
    },
    "BlzGetAbilityRealField": {
        "body": "BlzGetAbilityRealField(${1:whichAbility}, ${2:whichField})",
        "description": "BlzGetAbilityRealField (ability whichAbility, abilityrealfield whichField)",
        "prefix": "BlzGetAbilityRealField"
    },
    "BlzGetAbilityStringField": {
        "body": "BlzGetAbilityStringField(${1:whichAbility}, ${2:whichField})",
        "description": "BlzGetAbilityStringField (ability whichAbility, abilitystringfield whichField)",
        "prefix": "BlzGetAbilityStringField"
    },
    "BlzGetAbilityBooleanLevelField": {
        "body": "BlzGetAbilityBooleanLevelField(${1:whichAbility}, ${2:whichField}, ${3:level})",
        "description": "BlzGetAbilityBooleanLevelField (ability whichAbility, abilitybooleanlevelfield whichField, integer level)",
        "prefix": "BlzGetAbilityBooleanLevelField"
    },
    "BlzGetAbilityIntegerLevelField": {
        "body": "BlzGetAbilityIntegerLevelField(${1:whichAbility}, ${2:whichField}, ${3:level})",
        "description": "BlzGetAbilityIntegerLevelField (ability whichAbility, abilityintegerlevelfield whichField, integer level)",
        "prefix": "BlzGetAbilityIntegerLevelField"
    },
    "BlzGetAbilityRealLevelField": {
        "body": "BlzGetAbilityRealLevelField(${1:whichAbility}, ${2:whichField}, ${3:level})",
        "description": "BlzGetAbilityRealLevelField (ability whichAbility, abilityreallevelfield whichField, integer level)",
        "prefix": "BlzGetAbilityRealLevelField"
    },
    "BlzGetAbilityStringLevelField": {
        "body": "BlzGetAbilityStringLevelField(${1:whichAbility}, ${2:whichField}, ${3:level})",
        "description": "BlzGetAbilityStringLevelField (ability whichAbility, abilitystringlevelfield whichField, integer level)",
        "prefix": "BlzGetAbilityStringLevelField"
    },
    "BlzGetAbilityBooleanLevelArrayField": {
        "body": "BlzGetAbilityBooleanLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index})",
        "description": "BlzGetAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index)",
        "prefix": "BlzGetAbilityBooleanLevelArrayField"
    },
    "BlzGetAbilityIntegerLevelArrayField": {
        "body": "BlzGetAbilityIntegerLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index})",
        "description": "BlzGetAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index)",
        "prefix": "BlzGetAbilityIntegerLevelArrayField"
    },
    "BlzGetAbilityRealLevelArrayField": {
        "body": "BlzGetAbilityRealLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index})",
        "description": "BlzGetAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index)",
        "prefix": "BlzGetAbilityRealLevelArrayField"
    },
    "BlzGetAbilityStringLevelArrayField": {
        "body": "BlzGetAbilityStringLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index})",
        "description": "BlzGetAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index)",
        "prefix": "BlzGetAbilityStringLevelArrayField"
    },
    "BlzSetAbilityBooleanField": {
        "body": "BlzSetAbilityBooleanField(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityBooleanField (ability whichAbility, abilitybooleanfield whichField, boolean value)",
        "prefix": "BlzSetAbilityBooleanField"
    },
    "BlzSetAbilityIntegerField": {
        "body": "BlzSetAbilityIntegerField(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityIntegerField (ability whichAbility, abilityintegerfield whichField, integer value)",
        "prefix": "BlzSetAbilityIntegerField"
    },
    "BlzSetAbilityRealField": {
        "body": "BlzSetAbilityRealField(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityRealField (ability whichAbility, abilityrealfield whichField, real value)",
        "prefix": "BlzSetAbilityRealField"
    },
    "BlzSetAbilityStringField": {
        "body": "BlzSetAbilityStringField(${1:whichAbility}, ${2:whichField}, ${3:value})",
        "description": "BlzSetAbilityStringField (ability whichAbility, abilitystringfield whichField, string value)",
        "prefix": "BlzSetAbilityStringField"
    },
    "BlzSetAbilityBooleanLevelField": {
        "body": "BlzSetAbilityBooleanLevelField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityBooleanLevelField (ability whichAbility, abilitybooleanlevelfield whichField, integer level, boolean value)",
        "prefix": "BlzSetAbilityBooleanLevelField"
    },
    "BlzSetAbilityIntegerLevelField": {
        "body": "BlzSetAbilityIntegerLevelField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityIntegerLevelField (ability whichAbility, abilityintegerlevelfield whichField, integer level, integer value)",
        "prefix": "BlzSetAbilityIntegerLevelField"
    },
    "BlzSetAbilityRealLevelField": {
        "body": "BlzSetAbilityRealLevelField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityRealLevelField (ability whichAbility, abilityreallevelfield whichField, integer level, real value)",
        "prefix": "BlzSetAbilityRealLevelField"
    },
    "BlzSetAbilityStringLevelField": {
        "body": "BlzSetAbilityStringLevelField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzSetAbilityStringLevelField (ability whichAbility, abilitystringlevelfield whichField, integer level, string value)",
        "prefix": "BlzSetAbilityStringLevelField"
    },
    "BlzSetAbilityBooleanLevelArrayField": {
        "body": "BlzSetAbilityBooleanLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, integer index, boolean value)",
        "prefix": "BlzSetAbilityBooleanLevelArrayField"
    },
    "BlzSetAbilityIntegerLevelArrayField": {
        "body": "BlzSetAbilityIntegerLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer index, integer value)",
        "prefix": "BlzSetAbilityIntegerLevelArrayField"
    },
    "BlzSetAbilityRealLevelArrayField": {
        "body": "BlzSetAbilityRealLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, integer index, real value)",
        "prefix": "BlzSetAbilityRealLevelArrayField"
    },
    "BlzSetAbilityStringLevelArrayField": {
        "body": "BlzSetAbilityStringLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:index}, ${5:value})",
        "description": "BlzSetAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, integer index, string value)",
        "prefix": "BlzSetAbilityStringLevelArrayField"
    },
    "BlzAddAbilityBooleanLevelArrayField": {
        "body": "BlzAddAbilityBooleanLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)",
        "prefix": "BlzAddAbilityBooleanLevelArrayField"
    },
    "BlzAddAbilityIntegerLevelArrayField": {
        "body": "BlzAddAbilityIntegerLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)",
        "prefix": "BlzAddAbilityIntegerLevelArrayField"
    },
    "BlzAddAbilityRealLevelArrayField": {
        "body": "BlzAddAbilityRealLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)",
        "prefix": "BlzAddAbilityRealLevelArrayField"
    },
    "BlzAddAbilityStringLevelArrayField": {
        "body": "BlzAddAbilityStringLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzAddAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)",
        "prefix": "BlzAddAbilityStringLevelArrayField"
    },
    "BlzRemoveAbilityBooleanLevelArrayField": {
        "body": "BlzRemoveAbilityBooleanLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityBooleanLevelArrayField (ability whichAbility, abilitybooleanlevelarrayfield whichField, integer level, boolean value)",
        "prefix": "BlzRemoveAbilityBooleanLevelArrayField"
    },
    "BlzRemoveAbilityIntegerLevelArrayField": {
        "body": "BlzRemoveAbilityIntegerLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityIntegerLevelArrayField (ability whichAbility, abilityintegerlevelarrayfield whichField, integer level, integer value)",
        "prefix": "BlzRemoveAbilityIntegerLevelArrayField"
    },
    "BlzRemoveAbilityRealLevelArrayField": {
        "body": "BlzRemoveAbilityRealLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityRealLevelArrayField (ability whichAbility, abilityreallevelarrayfield whichField, integer level, real value)",
        "prefix": "BlzRemoveAbilityRealLevelArrayField"
    },
    "BlzRemoveAbilityStringLevelArrayField": {
        "body": "BlzRemoveAbilityStringLevelArrayField(${1:whichAbility}, ${2:whichField}, ${3:level}, ${4:value})",
        "description": "BlzRemoveAbilityStringLevelArrayField (ability whichAbility, abilitystringlevelarrayfield whichField, integer level, string value)",
        "prefix": "BlzRemoveAbilityStringLevelArrayField"
    },
    "BlzGetItemAbilityByIndex": {
        "body": "BlzGetItemAbilityByIndex(${1:whichItem}, ${2:index})",
        "description": "BlzGetItemAbilityByIndex (item whichItem, integer index)",
        "prefix": "BlzGetItemAbilityByIndex"
    },
    "BlzGetItemAbility": {
        "body": "BlzGetItemAbility(${1:whichItem}, ${2:abilCode})",
        "description": "BlzGetItemAbility (item whichItem, integer abilCode)",
        "prefix": "BlzGetItemAbility"
    },
    "BlzItemAddAbility": {
        "body": "BlzItemAddAbility(${1:whichItem}, ${2:abilCode})",
        "description": "BlzItemAddAbility (item whichItem, integer abilCode)",
        "prefix": "BlzItemAddAbility"
    },
    "BlzGetItemBooleanField": {
        "body": "BlzGetItemBooleanField(${1:whichItem}, ${2:whichField})",
        "description": "BlzGetItemBooleanField (item whichItem, itembooleanfield whichField)",
        "prefix": "BlzGetItemBooleanField"
    },
    "BlzGetItemIntegerField": {
        "body": "BlzGetItemIntegerField(${1:whichItem}, ${2:whichField})",
        "description": "BlzGetItemIntegerField (item whichItem, itemintegerfield whichField)",
        "prefix": "BlzGetItemIntegerField"
    },
    "BlzGetItemRealField": {
        "body": "BlzGetItemRealField(${1:whichItem}, ${2:whichField})",
        "description": "BlzGetItemRealField (item whichItem, itemrealfield whichField)",
        "prefix": "BlzGetItemRealField"
    },
    "BlzGetItemStringField": {
        "body": "BlzGetItemStringField(${1:whichItem}, ${2:whichField})",
        "description": "BlzGetItemStringField (item whichItem, itemstringfield whichField)",
        "prefix": "BlzGetItemStringField"
    },
    "BlzSetItemBooleanField": {
        "body": "BlzSetItemBooleanField(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemBooleanField (item whichItem, itembooleanfield whichField, boolean value)",
        "prefix": "BlzSetItemBooleanField"
    },
    "BlzSetItemIntegerField": {
        "body": "BlzSetItemIntegerField(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemIntegerField (item whichItem, itemintegerfield whichField, integer value)",
        "prefix": "BlzSetItemIntegerField"
    },
    "BlzSetItemRealField": {
        "body": "BlzSetItemRealField(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemRealField (item whichItem, itemrealfield whichField, real value)",
        "prefix": "BlzSetItemRealField"
    },
    "BlzSetItemStringField": {
        "body": "BlzSetItemStringField(${1:whichItem}, ${2:whichField}, ${3:value})",
        "description": "BlzSetItemStringField (item whichItem, itemstringfield whichField, string value)",
        "prefix": "BlzSetItemStringField"
    },
    "BlzItemRemoveAbility": {
        "body": "BlzItemRemoveAbility(${1:whichItem}, ${2:abilCode})",
        "description": "BlzItemRemoveAbility (item whichItem, integer abilCode)",
        "prefix": "BlzItemRemoveAbility"
    },
    "BlzGetUnitBooleanField": {
        "body": "BlzGetUnitBooleanField(${1:whichUnit}, ${2:whichField})",
        "description": "BlzGetUnitBooleanField (unit whichUnit, unitbooleanfield whichField)",
        "prefix": "BlzGetUnitBooleanField"
    },
    "BlzGetUnitIntegerField": {
        "body": "BlzGetUnitIntegerField(${1:whichUnit}, ${2:whichField})",
        "description": "BlzGetUnitIntegerField (unit whichUnit, unitintegerfield whichField)",
        "prefix": "BlzGetUnitIntegerField"
    },
    "BlzGetUnitRealField": {
        "body": "BlzGetUnitRealField(${1:whichUnit}, ${2:whichField})",
        "description": "BlzGetUnitRealField (unit whichUnit, unitrealfield whichField)",
        "prefix": "BlzGetUnitRealField"
    },
    "BlzGetUnitStringField": {
        "body": "BlzGetUnitStringField(${1:whichUnit}, ${2:whichField})",
        "description": "BlzGetUnitStringField (unit whichUnit, unitstringfield whichField)",
        "prefix": "BlzGetUnitStringField"
    },
    "BlzSetUnitBooleanField": {
        "body": "BlzSetUnitBooleanField(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitBooleanField (unit whichUnit, unitbooleanfield whichField, boolean value)",
        "prefix": "BlzSetUnitBooleanField"
    },
    "BlzSetUnitIntegerField": {
        "body": "BlzSetUnitIntegerField(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitIntegerField (unit whichUnit, unitintegerfield whichField, integer value)",
        "prefix": "BlzSetUnitIntegerField"
    },
    "BlzSetUnitRealField": {
        "body": "BlzSetUnitRealField(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitRealField (unit whichUnit, unitrealfield whichField, real value)",
        "prefix": "BlzSetUnitRealField"
    },
    "BlzSetUnitStringField": {
        "body": "BlzSetUnitStringField(${1:whichUnit}, ${2:whichField}, ${3:value})",
        "description": "BlzSetUnitStringField (unit whichUnit, unitstringfield whichField, string value)",
        "prefix": "BlzSetUnitStringField"
    },
    "BlzGetUnitWeaponBooleanField": {
        "body": "BlzGetUnitWeaponBooleanField(${1:whichUnit}, ${2:whichField}, ${3:index})",
        "description": "BlzGetUnitWeaponBooleanField (unit whichUnit, unitweaponbooleanfield whichField, integer index)",
        "prefix": "BlzGetUnitWeaponBooleanField"
    },
    "BlzGetUnitWeaponIntegerField": {
        "body": "BlzGetUnitWeaponIntegerField(${1:whichUnit}, ${2:whichField}, ${3:index})",
        "description": "BlzGetUnitWeaponIntegerField (unit whichUnit, unitweaponintegerfield whichField, integer index)",
        "prefix": "BlzGetUnitWeaponIntegerField"
    },
    "BlzGetUnitWeaponRealField": {
        "body": "BlzGetUnitWeaponRealField(${1:whichUnit}, ${2:whichField}, ${3:index})",
        "description": "BlzGetUnitWeaponRealField (unit whichUnit, unitweaponrealfield whichField, integer index)",
        "prefix": "BlzGetUnitWeaponRealField"
    },
    "BlzGetUnitWeaponStringField": {
        "body": "BlzGetUnitWeaponStringField(${1:whichUnit}, ${2:whichField}, ${3:index})",
        "description": "BlzGetUnitWeaponStringField (unit whichUnit, unitweaponstringfield whichField, integer index)",
        "prefix": "BlzGetUnitWeaponStringField"
    },
    "BlzSetUnitWeaponBooleanField": {
        "body": "BlzSetUnitWeaponBooleanField(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponBooleanField (unit whichUnit, unitweaponbooleanfield whichField, integer index, boolean value)",
        "prefix": "BlzSetUnitWeaponBooleanField"
    },
    "BlzSetUnitWeaponIntegerField": {
        "body": "BlzSetUnitWeaponIntegerField(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponIntegerField (unit whichUnit, unitweaponintegerfield whichField, integer index, integer value)",
        "prefix": "BlzSetUnitWeaponIntegerField"
    },
    "BlzSetUnitWeaponRealField": {
        "body": "BlzSetUnitWeaponRealField(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponRealField (unit whichUnit, unitweaponrealfield whichField, integer index, real value)",
        "prefix": "BlzSetUnitWeaponRealField"
    },
    "BlzSetUnitWeaponStringField": {
        "body": "BlzSetUnitWeaponStringField(${1:whichUnit}, ${2:whichField}, ${3:index}, ${4:value})",
        "description": "BlzSetUnitWeaponStringField (unit whichUnit, unitweaponstringfield whichField, integer index, string value)",
        "prefix": "BlzSetUnitWeaponStringField"
    }
}